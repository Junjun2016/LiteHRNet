2021-08-14 02:41:49,598 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.6 (default, Jan  8 2020, 19:59:22) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3,4,5,6,7: TITAN Xp
CUDA_HOME: /mnt/lustre/share/polaris/dep/cuda-9.0-cudnn7.6.5
NVCC: Cuda compilation tools, release 9.0, V9.0.176
GCC: gcc (GCC) 5.4.0
PyTorch: 1.5.0
PyTorch compiling details: PyTorch built with:
  - GCC 5.4
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.1 Product Build 20200208 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 912ce228837d1ce28e1a61806118835de03f5751)
  - OpenMP 201307 (a.k.a. OpenMP 4.0)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 9.0
  - NVCC architecture flags: -gencode;arch=compute_52,code=sm_52;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_70,code=compute_70
  - CuDNN 7.6.5
  - Magma 2.5.0
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.6.0
OpenCV: 4.2.0
MMCV: 1.3.11
MMCV Compiler: n/a
MMCV CUDA Compiler: n/a
MMSegmentation: 0.16.0+2bb6f37
------------------------------------------------------------

2021-08-14 02:41:49,600 - mmseg - INFO - Distributed training: True
2021-08-14 02:41:49,976 - mmseg - INFO - Config:
norm_cfg = dict(type='SyncBN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    backbone=dict(
        type='LiteHRNet',
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        norm_eval=False,
        extra=dict(
            stem=dict(stem_channels=32, out_channels=32, expand_ratio=1),
            num_stages=3,
            stages_spec=dict(
                num_modules=(2, 4, 2),
                num_branches=(2, 3, 4),
                num_blocks=(2, 2, 2),
                module_type=('LITE', 'LITE', 'LITE'),
                with_fuse=(True, True, True),
                reduce_ratios=(8, 8, 8),
                num_channels=((40, 80), (40, 80, 160), (40, 80, 160, 320))),
            with_head=False)),
    decode_head=dict(
        type='FCNHead',
        in_channels=[40, 80, 160, 320],
        in_index=(0, 1, 2, 3),
        channels=600,
        input_transform='resize_concat',
        kernel_size=1,
        num_convs=1,
        concat_input=False,
        dropout_ratio=-1,
        num_classes=150,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'ADE20KDataset'
data_root = 'data/ade/ADEChallengeData2016'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (512, 512)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', reduce_zero_label=True),
    dict(type='Resize', img_scale=(2048, 512), ratio_range=(0.5, 2.0)),
    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 512),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=4,
    train=dict(
        type='ADE20KDataset',
        data_root='data/ade/ADEChallengeData2016',
        img_dir='images/training',
        ann_dir='annotations/training',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', reduce_zero_label=True),
            dict(type='Resize', img_scale=(2048, 512), ratio_range=(0.5, 2.0)),
            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='ADE20KDataset',
        data_root='data/ade/ADEChallengeData2016',
        img_dir='images/validation',
        ann_dir='annotations/validation',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='ADE20KDataset',
        data_root='data/ade/ADEChallengeData2016',
        img_dir='images/validation',
        ann_dir='annotations/validation',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optimizer_config = dict()
lr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)
runner = dict(type='IterBasedRunner', max_iters=160000)
checkpoint_config = dict(by_epoch=False, interval=16000)
evaluation = dict(interval=16000, metric='mIoU')
work_dir = './work_dirs/fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k'
gpu_ids = range(0, 1)

2021-08-14 02:41:49,976 - mmseg - INFO - Set random seed to 0, deterministic: False
2021-08-14 02:41:50,253 - mmseg - INFO - initialize LiteHRNet with init_cfg [{'type': 'Normal', 'std': 0.001, 'layer': 'Conv2d'}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2021-08-14 02:41:50,530 - mmseg - INFO - initialize FCNHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
Name of parameter - Initialization information

backbone.stem.conv1.conv.weight - torch.Size([32, 3, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.stem.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.branch1.0.conv.weight - torch.Size([16, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stem.branch1.0.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.branch1.0.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.branch1.1.conv.weight - torch.Size([16, 16, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stem.branch1.1.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.branch1.1.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.expand_conv.conv.weight - torch.Size([32, 16, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.stem.expand_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.expand_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.depthwise_conv.conv.weight - torch.Size([32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.stem.depthwise_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.depthwise_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.linear_conv.conv.weight - torch.Size([16, 32, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.stem.linear_conv.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.linear_conv.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.0.0.weight - torch.Size([32, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition0.0.1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.0.1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.0.2.weight - torch.Size([40, 32, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.1.0.0.weight - torch.Size([32, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition0.1.0.1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.1.0.1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.1.0.2.weight - torch.Size([80, 32, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition0.1.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.1.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([7, 60, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([60, 7, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([7, 60, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([60, 7, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([7, 60, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([60, 7, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([7, 60, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([60, 7, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition1.2.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition1.2.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition1.2.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition1.2.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition1.2.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition1.2.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.0.2.0.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.1.2.0.weight - torch.Size([80, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.1.2.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.1.2.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.2.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.2.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.2.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.1.2.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.2.0.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.2.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.1.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.2.1.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.1.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.0.2.0.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.1.2.0.weight - torch.Size([80, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.1.2.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.1.2.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.2.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.2.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.2.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.1.2.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.2.0.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.2.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.1.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.2.1.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.1.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.0.2.0.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.1.2.0.weight - torch.Size([80, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.1.2.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.1.2.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.2.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.2.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.2.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.1.2.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.2.0.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.2.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.1.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.2.1.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.1.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.0.2.0.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.1.2.0.weight - torch.Size([80, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.1.2.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.1.2.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.2.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.2.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.2.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.1.2.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.2.0.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.2.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.1.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.2.1.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.1.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition2.3.0.0.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition2.3.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition2.3.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition2.3.0.2.weight - torch.Size([320, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition2.3.0.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition2.3.0.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([37, 300, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([300, 37, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.3.conv.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.depthwise_convs.3.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.3.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.3.conv1.conv.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.3.conv1.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.3.conv2.conv.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.3.conv2.conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([37, 300, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([300, 37, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.3.conv.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.depthwise_convs.3.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.3.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.3.conv1.conv.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.3.conv1.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.3.conv2.conv.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.3.conv2.conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.0.2.0.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.0.3.0.weight - torch.Size([40, 320, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.0.3.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.0.3.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.2.0.weight - torch.Size([80, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.1.2.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.2.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.3.0.weight - torch.Size([80, 320, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.1.3.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.3.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.1.2.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.0.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.1.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.1.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.1.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.3.0.weight - torch.Size([160, 320, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.1.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.0.1.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.1.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.2.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.2.2.weight - torch.Size([320, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.0.2.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.2.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.0.2.weight - torch.Size([80, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.1.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.1.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.1.1.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.1.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.1.2.weight - torch.Size([320, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.1.1.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.1.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.2.0.0.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.2.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.2.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.2.0.2.weight - torch.Size([320, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.2.0.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.2.0.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([37, 300, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([300, 37, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.3.conv.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.depthwise_convs.3.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.3.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.3.conv1.conv.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.3.conv1.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.3.conv2.conv.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.3.conv2.conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([37, 300, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([300, 37, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.3.conv.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.depthwise_convs.3.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.3.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.3.conv1.conv.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.3.conv1.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.3.conv2.conv.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.3.conv2.conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.0.2.0.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.0.3.0.weight - torch.Size([40, 320, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.0.3.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.0.3.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.2.0.weight - torch.Size([80, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.1.2.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.2.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.3.0.weight - torch.Size([80, 320, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.1.3.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.3.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.1.2.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.0.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.1.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.1.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.1.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.3.0.weight - torch.Size([160, 320, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.1.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.0.1.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.1.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.2.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.2.2.weight - torch.Size([320, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.0.2.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.2.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.0.2.weight - torch.Size([80, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.1.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.1.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.1.1.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.1.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.1.2.weight - torch.Size([320, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.1.1.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.1.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.2.0.0.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.2.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.2.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.2.0.2.weight - torch.Size([320, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.2.0.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.2.0.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.conv_seg.weight - torch.Size([150, 600, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([150]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.convs.0.conv.weight - torch.Size([600, 600, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.weight - torch.Size([600]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.bias - torch.Size([600]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2021-08-14 02:41:50,625 - mmseg - INFO - EncoderDecoder(
  (backbone): LiteHRNet(
    (stem): Stem(
      (conv1): ConvModule(
        (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): ConvModule(
          (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
          (bn): SyncBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvModule(
          (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (expand_conv): ConvModule(
        (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (depthwise_conv): ConvModule(
        (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (linear_conv): ConvModule(
        (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
    (transition0): ModuleList(
      (0): Sequential(
        (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): Conv2d(32, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (4): ReLU()
      )
      (1): Sequential(
        (0): Sequential(
          (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
          (1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Conv2d(32, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU()
        )
      )
    )
    (stage0): Sequential(
      (0): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(60, 7, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(7, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(60, 7, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(7, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
          )
        )
        (relu): ReLU()
      )
      (1): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(60, 7, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(7, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(60, 7, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(7, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
          )
        )
        (relu): ReLU()
      )
    )
    (transition1): ModuleList(
      (0): None
      (1): None
      (2): Sequential(
        (0): Sequential(
          (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
          (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU()
        )
      )
    )
    (stage1): Sequential(
      (0): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (2): Sequential(
              (0): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (1): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (2): Sequential(
              (0): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (2): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (2): Sequential(
              (0): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (3): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (2): Sequential(
              (0): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
    )
    (transition2): ModuleList(
      (0): None
      (1): None
      (2): None
      (3): Sequential(
        (0): Sequential(
          (0): Conv2d(160, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=160, bias=False)
          (1): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU()
        )
      )
    )
    (stage2): Sequential(
      (0): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(300, 37, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(37, 300, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (3): ConvModule(
                (conv): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)
                (bn): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (3): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(300, 37, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(37, 300, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (3): ConvModule(
                (conv): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)
                (bn): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (3): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (2): Sequential(
              (0): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
            (3): Sequential(
              (0): Conv2d(320, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=8.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (3): Sequential(
              (0): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(320, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (2): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(160, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=160, bias=False)
                (1): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
      (1): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(300, 37, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(37, 300, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (3): ConvModule(
                (conv): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)
                (bn): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (3): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(300, 37, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(37, 300, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (3): ConvModule(
                (conv): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)
                (bn): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (3): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (2): Sequential(
              (0): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
            (3): Sequential(
              (0): Conv2d(320, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=8.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (3): Sequential(
              (0): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(320, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (2): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(160, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=160, bias=False)
                (1): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Normal', 'std': 0.001, 'layer': 'Conv2d'}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
  (decode_head): FCNHead(
    input_transform=resize_concat, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss()
    (conv_seg): Conv2d(600, 150, kernel_size=(1, 1), stride=(1, 1))
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(600, 600, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
)
2021-08-14 02:41:51,256 - mmseg - INFO - Loaded 20210 images
2021-08-14 02:41:57,870 - mmseg - INFO - Loaded 2000 images
2021-08-14 02:41:57,870 - mmseg - INFO - Start running, host: hejunjun@SH-IDC2-172-20-20-66, work_dir: /mnt/lustrenew/hejunjun/mmseg_dev/lite_hrnet/mmsegmentation/work_dirs/fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k
2021-08-14 02:41:57,871 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2021-08-14 02:41:57,871 - mmseg - INFO - workflow: [('train', 1)], max: 160000 iters
2021-08-14 02:43:21,749 - mmseg - INFO - Iter [50/160000]	lr: 9.997e-03, eta: 1 day, 19:56:08, time: 0.989, data_time: 0.014, memory: 4777, decode.loss_seg: 2.9403, decode.acc_seg: 16.8010, loss: 2.9403
2021-08-14 02:44:07,838 - mmseg - INFO - Iter [100/160000]	lr: 9.994e-03, eta: 1 day, 18:25:54, time: 0.922, data_time: 0.009, memory: 4777, decode.loss_seg: 2.5549, decode.acc_seg: 22.6137, loss: 2.5549
2021-08-14 02:44:53,435 - mmseg - INFO - Iter [150/160000]	lr: 9.992e-03, eta: 1 day, 17:46:33, time: 0.912, data_time: 0.009, memory: 4777, decode.loss_seg: 2.5070, decode.acc_seg: 24.1529, loss: 2.5070
2021-08-14 02:45:40,347 - mmseg - INFO - Iter [200/160000]	lr: 9.989e-03, eta: 1 day, 17:44:04, time: 0.938, data_time: 0.009, memory: 4777, decode.loss_seg: 2.4179, decode.acc_seg: 26.2629, loss: 2.4179
2021-08-14 02:46:26,879 - mmseg - INFO - Iter [250/160000]	lr: 9.986e-03, eta: 1 day, 17:38:15, time: 0.931, data_time: 0.009, memory: 4777, decode.loss_seg: 2.3533, decode.acc_seg: 27.2020, loss: 2.3533
2021-08-14 02:47:12,443 - mmseg - INFO - Iter [300/160000]	lr: 9.983e-03, eta: 1 day, 17:25:26, time: 0.911, data_time: 0.009, memory: 4777, decode.loss_seg: 2.3114, decode.acc_seg: 27.1764, loss: 2.3114
2021-08-14 02:47:58,928 - mmseg - INFO - Iter [350/160000]	lr: 9.981e-03, eta: 1 day, 17:23:00, time: 0.929, data_time: 0.009, memory: 4777, decode.loss_seg: 2.3189, decode.acc_seg: 26.4829, loss: 2.3189
2021-08-14 02:48:44,485 - mmseg - INFO - Iter [400/160000]	lr: 9.978e-03, eta: 1 day, 17:14:58, time: 0.911, data_time: 0.009, memory: 4777, decode.loss_seg: 2.2946, decode.acc_seg: 28.4595, loss: 2.2946
2021-08-14 02:49:30,348 - mmseg - INFO - Iter [450/160000]	lr: 9.975e-03, eta: 1 day, 17:10:18, time: 0.917, data_time: 0.009, memory: 4777, decode.loss_seg: 2.2148, decode.acc_seg: 28.4118, loss: 2.2148
2021-08-14 02:50:16,521 - mmseg - INFO - Iter [500/160000]	lr: 9.972e-03, eta: 1 day, 17:07:51, time: 0.923, data_time: 0.009, memory: 4777, decode.loss_seg: 2.2192, decode.acc_seg: 29.1734, loss: 2.2192
2021-08-14 02:51:02,865 - mmseg - INFO - Iter [550/160000]	lr: 9.969e-03, eta: 1 day, 17:06:54, time: 0.928, data_time: 0.010, memory: 4777, decode.loss_seg: 2.1805, decode.acc_seg: 29.4880, loss: 2.1805
2021-08-14 02:51:48,411 - mmseg - INFO - Iter [600/160000]	lr: 9.967e-03, eta: 1 day, 17:02:21, time: 0.911, data_time: 0.009, memory: 4777, decode.loss_seg: 2.1869, decode.acc_seg: 30.5804, loss: 2.1869
2021-08-14 02:53:10,870 - mmseg - INFO - Iter [650/160000]	lr: 9.964e-03, eta: 1 day, 19:28:59, time: 1.648, data_time: 0.731, memory: 4777, decode.loss_seg: 2.1324, decode.acc_seg: 30.6241, loss: 2.1324
2021-08-14 02:53:56,513 - mmseg - INFO - Iter [700/160000]	lr: 9.961e-03, eta: 1 day, 19:15:02, time: 0.913, data_time: 0.010, memory: 4777, decode.loss_seg: 2.1257, decode.acc_seg: 30.2993, loss: 2.1257
2021-08-14 02:54:41,849 - mmseg - INFO - Iter [750/160000]	lr: 9.958e-03, eta: 1 day, 19:01:44, time: 0.907, data_time: 0.009, memory: 4777, decode.loss_seg: 2.1207, decode.acc_seg: 31.3984, loss: 2.1207
2021-08-14 02:55:27,841 - mmseg - INFO - Iter [800/160000]	lr: 9.955e-03, eta: 1 day, 18:52:10, time: 0.920, data_time: 0.009, memory: 4777, decode.loss_seg: 2.0012, decode.acc_seg: 34.0881, loss: 2.0012
2021-08-14 02:56:13,382 - mmseg - INFO - Iter [850/160000]	lr: 9.953e-03, eta: 1 day, 18:42:12, time: 0.911, data_time: 0.009, memory: 4777, decode.loss_seg: 1.9984, decode.acc_seg: 32.7494, loss: 1.9984
2021-08-14 02:56:58,935 - mmseg - INFO - Iter [900/160000]	lr: 9.950e-03, eta: 1 day, 18:33:23, time: 0.912, data_time: 0.010, memory: 4777, decode.loss_seg: 2.0195, decode.acc_seg: 32.5906, loss: 2.0195
2021-08-14 02:57:43,875 - mmseg - INFO - Iter [950/160000]	lr: 9.947e-03, eta: 1 day, 18:23:34, time: 0.898, data_time: 0.009, memory: 4777, decode.loss_seg: 1.9556, decode.acc_seg: 32.9889, loss: 1.9556
2021-08-14 02:58:29,114 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 02:58:29,114 - mmseg - INFO - Iter [1000/160000]	lr: 9.944e-03, eta: 1 day, 18:15:31, time: 0.905, data_time: 0.010, memory: 4777, decode.loss_seg: 1.9943, decode.acc_seg: 34.1943, loss: 1.9943
2021-08-14 02:59:14,084 - mmseg - INFO - Iter [1050/160000]	lr: 9.942e-03, eta: 1 day, 18:07:27, time: 0.899, data_time: 0.009, memory: 4777, decode.loss_seg: 1.9769, decode.acc_seg: 32.7242, loss: 1.9769
2021-08-14 02:59:59,020 - mmseg - INFO - Iter [1100/160000]	lr: 9.939e-03, eta: 1 day, 17:59:59, time: 0.899, data_time: 0.009, memory: 4777, decode.loss_seg: 1.9473, decode.acc_seg: 34.3060, loss: 1.9473
2021-08-14 03:00:44,826 - mmseg - INFO - Iter [1150/160000]	lr: 9.936e-03, eta: 1 day, 17:55:08, time: 0.916, data_time: 0.009, memory: 4777, decode.loss_seg: 1.9544, decode.acc_seg: 34.2900, loss: 1.9544
2021-08-14 03:01:30,862 - mmseg - INFO - Iter [1200/160000]	lr: 9.933e-03, eta: 1 day, 17:51:04, time: 0.920, data_time: 0.009, memory: 4777, decode.loss_seg: 1.9084, decode.acc_seg: 35.0784, loss: 1.9084
2021-08-14 03:02:17,479 - mmseg - INFO - Iter [1250/160000]	lr: 9.930e-03, eta: 1 day, 17:48:33, time: 0.932, data_time: 0.009, memory: 4777, decode.loss_seg: 1.8843, decode.acc_seg: 35.6565, loss: 1.8843
2021-08-14 03:03:37,933 - mmseg - INFO - Iter [1300/160000]	lr: 9.928e-03, eta: 1 day, 18:55:03, time: 1.610, data_time: 0.730, memory: 4777, decode.loss_seg: 1.9481, decode.acc_seg: 34.2556, loss: 1.9481
2021-08-14 03:04:22,358 - mmseg - INFO - Iter [1350/160000]	lr: 9.925e-03, eta: 1 day, 18:45:52, time: 0.888, data_time: 0.010, memory: 4777, decode.loss_seg: 1.8551, decode.acc_seg: 36.1916, loss: 1.8551
2021-08-14 03:05:07,518 - mmseg - INFO - Iter [1400/160000]	lr: 9.922e-03, eta: 1 day, 18:38:46, time: 0.904, data_time: 0.010, memory: 4777, decode.loss_seg: 1.8812, decode.acc_seg: 34.7144, loss: 1.8812
2021-08-14 03:05:52,235 - mmseg - INFO - Iter [1450/160000]	lr: 9.919e-03, eta: 1 day, 18:31:16, time: 0.895, data_time: 0.010, memory: 4777, decode.loss_seg: 1.8396, decode.acc_seg: 35.6154, loss: 1.8396
2021-08-14 03:06:36,468 - mmseg - INFO - Iter [1500/160000]	lr: 9.916e-03, eta: 1 day, 18:23:18, time: 0.884, data_time: 0.009, memory: 4777, decode.loss_seg: 1.8635, decode.acc_seg: 35.5221, loss: 1.8635
2021-08-14 03:07:19,422 - mmseg - INFO - Iter [1550/160000]	lr: 9.914e-03, eta: 1 day, 18:13:41, time: 0.859, data_time: 0.009, memory: 4777, decode.loss_seg: 1.7887, decode.acc_seg: 36.9167, loss: 1.7887
2021-08-14 03:08:04,003 - mmseg - INFO - Iter [1600/160000]	lr: 9.911e-03, eta: 1 day, 18:07:17, time: 0.892, data_time: 0.009, memory: 4777, decode.loss_seg: 1.8457, decode.acc_seg: 35.2198, loss: 1.8457
2021-08-14 03:08:48,326 - mmseg - INFO - Iter [1650/160000]	lr: 9.908e-03, eta: 1 day, 18:00:48, time: 0.886, data_time: 0.009, memory: 4777, decode.loss_seg: 1.7674, decode.acc_seg: 36.8013, loss: 1.7674
2021-08-14 03:09:31,723 - mmseg - INFO - Iter [1700/160000]	lr: 9.905e-03, eta: 1 day, 17:53:15, time: 0.868, data_time: 0.010, memory: 4777, decode.loss_seg: 1.8110, decode.acc_seg: 37.4061, loss: 1.8110
2021-08-14 03:10:16,753 - mmseg - INFO - Iter [1750/160000]	lr: 9.903e-03, eta: 1 day, 17:48:32, time: 0.901, data_time: 0.010, memory: 4777, decode.loss_seg: 1.7952, decode.acc_seg: 37.5856, loss: 1.7952
2021-08-14 03:11:01,199 - mmseg - INFO - Iter [1800/160000]	lr: 9.900e-03, eta: 1 day, 17:43:11, time: 0.889, data_time: 0.009, memory: 4777, decode.loss_seg: 1.7758, decode.acc_seg: 37.7604, loss: 1.7758
2021-08-14 03:11:47,040 - mmseg - INFO - Iter [1850/160000]	lr: 9.897e-03, eta: 1 day, 17:40:03, time: 0.916, data_time: 0.010, memory: 4777, decode.loss_seg: 1.7809, decode.acc_seg: 36.8318, loss: 1.7809
2021-08-14 03:13:07,406 - mmseg - INFO - Iter [1900/160000]	lr: 9.894e-03, eta: 1 day, 18:25:00, time: 1.608, data_time: 0.711, memory: 4777, decode.loss_seg: 1.7901, decode.acc_seg: 37.6269, loss: 1.7901
2021-08-14 03:13:50,540 - mmseg - INFO - Iter [1950/160000]	lr: 9.891e-03, eta: 1 day, 18:17:12, time: 0.862, data_time: 0.009, memory: 4777, decode.loss_seg: 1.7383, decode.acc_seg: 36.3848, loss: 1.7383
2021-08-14 03:14:34,701 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 03:14:34,702 - mmseg - INFO - Iter [2000/160000]	lr: 9.889e-03, eta: 1 day, 18:11:09, time: 0.884, data_time: 0.009, memory: 4777, decode.loss_seg: 1.7866, decode.acc_seg: 36.9353, loss: 1.7866
2021-08-14 03:15:18,531 - mmseg - INFO - Iter [2050/160000]	lr: 9.886e-03, eta: 1 day, 18:04:54, time: 0.876, data_time: 0.009, memory: 4777, decode.loss_seg: 1.6853, decode.acc_seg: 39.7607, loss: 1.6853
2021-08-14 03:16:03,989 - mmseg - INFO - Iter [2100/160000]	lr: 9.883e-03, eta: 1 day, 18:00:58, time: 0.909, data_time: 0.009, memory: 4777, decode.loss_seg: 1.7616, decode.acc_seg: 38.0885, loss: 1.7616
2021-08-14 03:16:48,473 - mmseg - INFO - Iter [2150/160000]	lr: 9.880e-03, eta: 1 day, 17:55:59, time: 0.890, data_time: 0.009, memory: 4777, decode.loss_seg: 1.7547, decode.acc_seg: 37.0773, loss: 1.7547
2021-08-14 03:17:33,580 - mmseg - INFO - Iter [2200/160000]	lr: 9.877e-03, eta: 1 day, 17:51:57, time: 0.902, data_time: 0.009, memory: 4777, decode.loss_seg: 1.6956, decode.acc_seg: 37.9909, loss: 1.6956
2021-08-14 03:18:16,994 - mmseg - INFO - Iter [2250/160000]	lr: 9.875e-03, eta: 1 day, 17:46:05, time: 0.868, data_time: 0.009, memory: 4777, decode.loss_seg: 1.7119, decode.acc_seg: 38.5885, loss: 1.7119
2021-08-14 03:19:00,183 - mmseg - INFO - Iter [2300/160000]	lr: 9.872e-03, eta: 1 day, 17:40:11, time: 0.864, data_time: 0.009, memory: 4777, decode.loss_seg: 1.7355, decode.acc_seg: 38.1789, loss: 1.7355
2021-08-14 03:19:44,506 - mmseg - INFO - Iter [2350/160000]	lr: 9.869e-03, eta: 1 day, 17:35:47, time: 0.887, data_time: 0.009, memory: 4777, decode.loss_seg: 1.7320, decode.acc_seg: 38.2957, loss: 1.7320
2021-08-14 03:20:28,917 - mmseg - INFO - Iter [2400/160000]	lr: 9.866e-03, eta: 1 day, 17:31:36, time: 0.888, data_time: 0.009, memory: 4777, decode.loss_seg: 1.6857, decode.acc_seg: 39.9313, loss: 1.6857
2021-08-14 03:21:14,368 - mmseg - INFO - Iter [2450/160000]	lr: 9.864e-03, eta: 1 day, 17:28:42, time: 0.909, data_time: 0.009, memory: 4777, decode.loss_seg: 1.6635, decode.acc_seg: 39.6882, loss: 1.6635
2021-08-14 03:21:59,200 - mmseg - INFO - Iter [2500/160000]	lr: 9.861e-03, eta: 1 day, 17:25:14, time: 0.897, data_time: 0.009, memory: 4777, decode.loss_seg: 1.7242, decode.acc_seg: 39.1031, loss: 1.7242
2021-08-14 03:23:18,265 - mmseg - INFO - Iter [2550/160000]	lr: 9.858e-03, eta: 1 day, 17:57:06, time: 1.581, data_time: 0.740, memory: 4777, decode.loss_seg: 1.6462, decode.acc_seg: 39.7987, loss: 1.6462
2021-08-14 03:24:01,948 - mmseg - INFO - Iter [2600/160000]	lr: 9.855e-03, eta: 1 day, 17:51:57, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.6173, decode.acc_seg: 39.8793, loss: 1.6173
2021-08-14 03:24:46,524 - mmseg - INFO - Iter [2650/160000]	lr: 9.852e-03, eta: 1 day, 17:47:54, time: 0.892, data_time: 0.010, memory: 4777, decode.loss_seg: 1.6993, decode.acc_seg: 39.6561, loss: 1.6993
2021-08-14 03:25:31,690 - mmseg - INFO - Iter [2700/160000]	lr: 9.850e-03, eta: 1 day, 17:44:32, time: 0.903, data_time: 0.010, memory: 4777, decode.loss_seg: 1.6808, decode.acc_seg: 39.7395, loss: 1.6808
2021-08-14 03:26:13,762 - mmseg - INFO - Iter [2750/160000]	lr: 9.847e-03, eta: 1 day, 17:38:19, time: 0.842, data_time: 0.009, memory: 4777, decode.loss_seg: 1.6747, decode.acc_seg: 39.1410, loss: 1.6747
2021-08-14 03:26:56,785 - mmseg - INFO - Iter [2800/160000]	lr: 9.844e-03, eta: 1 day, 17:33:10, time: 0.860, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5653, decode.acc_seg: 40.5235, loss: 1.5653
2021-08-14 03:27:40,701 - mmseg - INFO - Iter [2850/160000]	lr: 9.841e-03, eta: 1 day, 17:29:01, time: 0.878, data_time: 0.010, memory: 4777, decode.loss_seg: 1.6433, decode.acc_seg: 39.6860, loss: 1.6433
2021-08-14 03:28:24,924 - mmseg - INFO - Iter [2900/160000]	lr: 9.838e-03, eta: 1 day, 17:25:15, time: 0.885, data_time: 0.010, memory: 4777, decode.loss_seg: 1.6077, decode.acc_seg: 40.6256, loss: 1.6077
2021-08-14 03:29:07,898 - mmseg - INFO - Iter [2950/160000]	lr: 9.836e-03, eta: 1 day, 17:20:28, time: 0.859, data_time: 0.009, memory: 4777, decode.loss_seg: 1.5985, decode.acc_seg: 40.8799, loss: 1.5985
2021-08-14 03:29:52,031 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 03:29:52,032 - mmseg - INFO - Iter [3000/160000]	lr: 9.833e-03, eta: 1 day, 17:16:52, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.6530, decode.acc_seg: 39.7383, loss: 1.6530
2021-08-14 03:30:35,049 - mmseg - INFO - Iter [3050/160000]	lr: 9.830e-03, eta: 1 day, 17:12:23, time: 0.860, data_time: 0.009, memory: 4777, decode.loss_seg: 1.6559, decode.acc_seg: 40.0995, loss: 1.6559
2021-08-14 03:31:17,163 - mmseg - INFO - Iter [3100/160000]	lr: 9.827e-03, eta: 1 day, 17:07:14, time: 0.842, data_time: 0.009, memory: 4777, decode.loss_seg: 1.6279, decode.acc_seg: 40.6017, loss: 1.6279
2021-08-14 03:32:00,335 - mmseg - INFO - Iter [3150/160000]	lr: 9.824e-03, eta: 1 day, 17:03:09, time: 0.864, data_time: 0.009, memory: 4777, decode.loss_seg: 1.6013, decode.acc_seg: 41.3672, loss: 1.6013
2021-08-14 03:33:19,158 - mmseg - INFO - Iter [3200/160000]	lr: 9.822e-03, eta: 1 day, 17:28:15, time: 1.576, data_time: 0.725, memory: 4777, decode.loss_seg: 1.6330, decode.acc_seg: 39.9393, loss: 1.6330
2021-08-14 03:34:02,114 - mmseg - INFO - Iter [3250/160000]	lr: 9.819e-03, eta: 1 day, 17:23:42, time: 0.859, data_time: 0.010, memory: 4777, decode.loss_seg: 1.6491, decode.acc_seg: 41.1654, loss: 1.6491
2021-08-14 03:34:45,556 - mmseg - INFO - Iter [3300/160000]	lr: 9.816e-03, eta: 1 day, 17:19:40, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.6058, decode.acc_seg: 41.3389, loss: 1.6058
2021-08-14 03:35:30,306 - mmseg - INFO - Iter [3350/160000]	lr: 9.813e-03, eta: 1 day, 17:16:46, time: 0.895, data_time: 0.010, memory: 4777, decode.loss_seg: 1.6005, decode.acc_seg: 41.2829, loss: 1.6005
2021-08-14 03:36:14,836 - mmseg - INFO - Iter [3400/160000]	lr: 9.811e-03, eta: 1 day, 17:13:45, time: 0.891, data_time: 0.009, memory: 4777, decode.loss_seg: 1.5800, decode.acc_seg: 41.5436, loss: 1.5800
2021-08-14 03:36:58,440 - mmseg - INFO - Iter [3450/160000]	lr: 9.808e-03, eta: 1 day, 17:10:05, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.6116, decode.acc_seg: 40.6859, loss: 1.6116
2021-08-14 03:37:41,935 - mmseg - INFO - Iter [3500/160000]	lr: 9.805e-03, eta: 1 day, 17:06:26, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5883, decode.acc_seg: 41.0600, loss: 1.5883
2021-08-14 03:38:25,181 - mmseg - INFO - Iter [3550/160000]	lr: 9.802e-03, eta: 1 day, 17:02:41, time: 0.865, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5617, decode.acc_seg: 40.6324, loss: 1.5617
2021-08-14 03:39:08,859 - mmseg - INFO - Iter [3600/160000]	lr: 9.799e-03, eta: 1 day, 16:59:19, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5698, decode.acc_seg: 41.8579, loss: 1.5698
2021-08-14 03:39:52,474 - mmseg - INFO - Iter [3650/160000]	lr: 9.797e-03, eta: 1 day, 16:56:00, time: 0.873, data_time: 0.011, memory: 4777, decode.loss_seg: 1.5578, decode.acc_seg: 41.9045, loss: 1.5578
2021-08-14 03:40:37,315 - mmseg - INFO - Iter [3700/160000]	lr: 9.794e-03, eta: 1 day, 16:53:37, time: 0.897, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5429, decode.acc_seg: 42.1293, loss: 1.5429
2021-08-14 03:41:20,951 - mmseg - INFO - Iter [3750/160000]	lr: 9.791e-03, eta: 1 day, 16:50:25, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5314, decode.acc_seg: 41.9256, loss: 1.5314
2021-08-14 03:42:39,907 - mmseg - INFO - Iter [3800/160000]	lr: 9.788e-03, eta: 1 day, 17:11:30, time: 1.579, data_time: 0.730, memory: 4777, decode.loss_seg: 1.5775, decode.acc_seg: 41.8597, loss: 1.5775
2021-08-14 03:43:22,723 - mmseg - INFO - Iter [3850/160000]	lr: 9.785e-03, eta: 1 day, 17:07:34, time: 0.856, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5521, decode.acc_seg: 41.7179, loss: 1.5521
2021-08-14 03:44:05,630 - mmseg - INFO - Iter [3900/160000]	lr: 9.783e-03, eta: 1 day, 17:03:45, time: 0.858, data_time: 0.009, memory: 4777, decode.loss_seg: 1.4944, decode.acc_seg: 42.7316, loss: 1.4944
2021-08-14 03:44:49,775 - mmseg - INFO - Iter [3950/160000]	lr: 9.780e-03, eta: 1 day, 17:00:52, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5714, decode.acc_seg: 42.2185, loss: 1.5714
2021-08-14 03:45:34,093 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 03:45:34,094 - mmseg - INFO - Iter [4000/160000]	lr: 9.777e-03, eta: 1 day, 16:58:08, time: 0.886, data_time: 0.009, memory: 4777, decode.loss_seg: 1.5121, decode.acc_seg: 42.4784, loss: 1.5121
2021-08-14 03:46:17,697 - mmseg - INFO - Iter [4050/160000]	lr: 9.774e-03, eta: 1 day, 16:54:59, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5590, decode.acc_seg: 41.8319, loss: 1.5590
2021-08-14 03:47:01,429 - mmseg - INFO - Iter [4100/160000]	lr: 9.771e-03, eta: 1 day, 16:52:00, time: 0.875, data_time: 0.009, memory: 4777, decode.loss_seg: 1.5343, decode.acc_seg: 42.1460, loss: 1.5343
2021-08-14 03:47:45,040 - mmseg - INFO - Iter [4150/160000]	lr: 9.769e-03, eta: 1 day, 16:48:58, time: 0.872, data_time: 0.009, memory: 4777, decode.loss_seg: 1.5394, decode.acc_seg: 41.6866, loss: 1.5394
2021-08-14 03:48:29,294 - mmseg - INFO - Iter [4200/160000]	lr: 9.766e-03, eta: 1 day, 16:46:25, time: 0.886, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5448, decode.acc_seg: 41.3153, loss: 1.5448
2021-08-14 03:49:12,251 - mmseg - INFO - Iter [4250/160000]	lr: 9.763e-03, eta: 1 day, 16:43:05, time: 0.859, data_time: 0.009, memory: 4777, decode.loss_seg: 1.5180, decode.acc_seg: 42.5793, loss: 1.5180
2021-08-14 03:49:56,264 - mmseg - INFO - Iter [4300/160000]	lr: 9.760e-03, eta: 1 day, 16:40:27, time: 0.880, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4986, decode.acc_seg: 42.5343, loss: 1.4986
2021-08-14 03:50:39,701 - mmseg - INFO - Iter [4350/160000]	lr: 9.757e-03, eta: 1 day, 16:37:32, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5192, decode.acc_seg: 42.5347, loss: 1.5192
2021-08-14 03:51:23,181 - mmseg - INFO - Iter [4400/160000]	lr: 9.755e-03, eta: 1 day, 16:34:42, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5105, decode.acc_seg: 42.4474, loss: 1.5105
2021-08-14 03:52:42,022 - mmseg - INFO - Iter [4450/160000]	lr: 9.752e-03, eta: 1 day, 16:52:30, time: 1.577, data_time: 0.715, memory: 4777, decode.loss_seg: 1.4965, decode.acc_seg: 43.0189, loss: 1.4965
2021-08-14 03:53:25,592 - mmseg - INFO - Iter [4500/160000]	lr: 9.749e-03, eta: 1 day, 16:49:33, time: 0.871, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4886, decode.acc_seg: 42.1050, loss: 1.4886
2021-08-14 03:54:10,321 - mmseg - INFO - Iter [4550/160000]	lr: 9.746e-03, eta: 1 day, 16:47:19, time: 0.894, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5499, decode.acc_seg: 41.8421, loss: 1.5499
2021-08-14 03:54:53,213 - mmseg - INFO - Iter [4600/160000]	lr: 9.744e-03, eta: 1 day, 16:44:06, time: 0.858, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5332, decode.acc_seg: 43.0325, loss: 1.5332
2021-08-14 03:55:36,320 - mmseg - INFO - Iter [4650/160000]	lr: 9.741e-03, eta: 1 day, 16:41:03, time: 0.863, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4363, decode.acc_seg: 43.8506, loss: 1.4363
2021-08-14 03:56:19,492 - mmseg - INFO - Iter [4700/160000]	lr: 9.738e-03, eta: 1 day, 16:38:04, time: 0.863, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4643, decode.acc_seg: 43.3511, loss: 1.4643
2021-08-14 03:57:02,257 - mmseg - INFO - Iter [4750/160000]	lr: 9.735e-03, eta: 1 day, 16:34:55, time: 0.855, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4879, decode.acc_seg: 42.5839, loss: 1.4879
2021-08-14 03:57:45,840 - mmseg - INFO - Iter [4800/160000]	lr: 9.732e-03, eta: 1 day, 16:32:16, time: 0.871, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4648, decode.acc_seg: 43.6301, loss: 1.4648
2021-08-14 03:58:30,037 - mmseg - INFO - Iter [4850/160000]	lr: 9.730e-03, eta: 1 day, 16:29:59, time: 0.884, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5117, decode.acc_seg: 43.1961, loss: 1.5117
2021-08-14 03:59:13,973 - mmseg - INFO - Iter [4900/160000]	lr: 9.727e-03, eta: 1 day, 16:27:35, time: 0.878, data_time: 0.009, memory: 4777, decode.loss_seg: 1.4571, decode.acc_seg: 44.6913, loss: 1.4571
2021-08-14 03:59:58,144 - mmseg - INFO - Iter [4950/160000]	lr: 9.724e-03, eta: 1 day, 16:25:21, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.5276, decode.acc_seg: 42.3532, loss: 1.5276
2021-08-14 04:00:41,915 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 04:00:41,915 - mmseg - INFO - Iter [5000/160000]	lr: 9.721e-03, eta: 1 day, 16:22:56, time: 0.875, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4850, decode.acc_seg: 43.2622, loss: 1.4850
2021-08-14 04:02:01,189 - mmseg - INFO - Iter [5050/160000]	lr: 9.718e-03, eta: 1 day, 16:38:43, time: 1.586, data_time: 0.691, memory: 4777, decode.loss_seg: 1.4853, decode.acc_seg: 43.0331, loss: 1.4853
2021-08-14 04:02:45,011 - mmseg - INFO - Iter [5100/160000]	lr: 9.716e-03, eta: 1 day, 16:36:12, time: 0.876, data_time: 0.009, memory: 4777, decode.loss_seg: 1.3785, decode.acc_seg: 44.1388, loss: 1.3785
2021-08-14 04:03:28,337 - mmseg - INFO - Iter [5150/160000]	lr: 9.713e-03, eta: 1 day, 16:33:29, time: 0.867, data_time: 0.009, memory: 4777, decode.loss_seg: 1.4811, decode.acc_seg: 42.4779, loss: 1.4811
2021-08-14 04:04:13,186 - mmseg - INFO - Iter [5200/160000]	lr: 9.710e-03, eta: 1 day, 16:31:34, time: 0.897, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4753, decode.acc_seg: 43.7530, loss: 1.4753
2021-08-14 04:04:57,033 - mmseg - INFO - Iter [5250/160000]	lr: 9.707e-03, eta: 1 day, 16:29:09, time: 0.876, data_time: 0.009, memory: 4777, decode.loss_seg: 1.4444, decode.acc_seg: 44.5323, loss: 1.4444
2021-08-14 04:05:41,526 - mmseg - INFO - Iter [5300/160000]	lr: 9.704e-03, eta: 1 day, 16:27:07, time: 0.891, data_time: 0.011, memory: 4777, decode.loss_seg: 1.4756, decode.acc_seg: 43.9577, loss: 1.4756
2021-08-14 04:06:26,506 - mmseg - INFO - Iter [5350/160000]	lr: 9.702e-03, eta: 1 day, 16:25:20, time: 0.900, data_time: 0.009, memory: 4777, decode.loss_seg: 1.5086, decode.acc_seg: 43.1906, loss: 1.5086
2021-08-14 04:07:11,180 - mmseg - INFO - Iter [5400/160000]	lr: 9.699e-03, eta: 1 day, 16:23:24, time: 0.893, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4805, decode.acc_seg: 44.8308, loss: 1.4805
2021-08-14 04:07:54,666 - mmseg - INFO - Iter [5450/160000]	lr: 9.696e-03, eta: 1 day, 16:20:57, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4234, decode.acc_seg: 44.0208, loss: 1.4234
2021-08-14 04:08:38,870 - mmseg - INFO - Iter [5500/160000]	lr: 9.693e-03, eta: 1 day, 16:18:52, time: 0.884, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3962, decode.acc_seg: 44.5439, loss: 1.3962
2021-08-14 04:09:23,842 - mmseg - INFO - Iter [5550/160000]	lr: 9.690e-03, eta: 1 day, 16:17:09, time: 0.899, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4695, decode.acc_seg: 44.1921, loss: 1.4695
2021-08-14 04:10:09,076 - mmseg - INFO - Iter [5600/160000]	lr: 9.688e-03, eta: 1 day, 16:15:35, time: 0.905, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3978, decode.acc_seg: 43.6769, loss: 1.3978
2021-08-14 04:10:53,838 - mmseg - INFO - Iter [5650/160000]	lr: 9.685e-03, eta: 1 day, 16:13:48, time: 0.895, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4257, decode.acc_seg: 43.7018, loss: 1.4257
2021-08-14 04:12:13,318 - mmseg - INFO - Iter [5700/160000]	lr: 9.682e-03, eta: 1 day, 16:27:43, time: 1.590, data_time: 0.681, memory: 4777, decode.loss_seg: 1.4579, decode.acc_seg: 43.1631, loss: 1.4579
2021-08-14 04:12:58,810 - mmseg - INFO - Iter [5750/160000]	lr: 9.679e-03, eta: 1 day, 16:26:10, time: 0.910, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4170, decode.acc_seg: 43.2880, loss: 1.4170
2021-08-14 04:13:43,900 - mmseg - INFO - Iter [5800/160000]	lr: 9.676e-03, eta: 1 day, 16:24:27, time: 0.901, data_time: 0.009, memory: 4777, decode.loss_seg: 1.4547, decode.acc_seg: 44.2845, loss: 1.4547
2021-08-14 04:14:28,813 - mmseg - INFO - Iter [5850/160000]	lr: 9.674e-03, eta: 1 day, 16:22:40, time: 0.899, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4385, decode.acc_seg: 43.7076, loss: 1.4385
2021-08-14 04:15:14,115 - mmseg - INFO - Iter [5900/160000]	lr: 9.671e-03, eta: 1 day, 16:21:05, time: 0.906, data_time: 0.009, memory: 4777, decode.loss_seg: 1.4363, decode.acc_seg: 44.1740, loss: 1.4363
2021-08-14 04:15:57,524 - mmseg - INFO - Iter [5950/160000]	lr: 9.668e-03, eta: 1 day, 16:18:42, time: 0.869, data_time: 0.009, memory: 4777, decode.loss_seg: 1.4549, decode.acc_seg: 42.7331, loss: 1.4549
2021-08-14 04:16:42,133 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 04:16:42,133 - mmseg - INFO - Iter [6000/160000]	lr: 9.665e-03, eta: 1 day, 16:16:50, time: 0.892, data_time: 0.009, memory: 4777, decode.loss_seg: 1.3795, decode.acc_seg: 44.4856, loss: 1.3795
2021-08-14 04:17:28,293 - mmseg - INFO - Iter [6050/160000]	lr: 9.663e-03, eta: 1 day, 16:15:40, time: 0.923, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4211, decode.acc_seg: 44.8866, loss: 1.4211
2021-08-14 04:18:12,513 - mmseg - INFO - Iter [6100/160000]	lr: 9.660e-03, eta: 1 day, 16:13:41, time: 0.884, data_time: 0.009, memory: 4777, decode.loss_seg: 1.4331, decode.acc_seg: 44.2354, loss: 1.4331
2021-08-14 04:18:56,167 - mmseg - INFO - Iter [6150/160000]	lr: 9.657e-03, eta: 1 day, 16:11:28, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4248, decode.acc_seg: 45.9835, loss: 1.4248
2021-08-14 04:19:40,532 - mmseg - INFO - Iter [6200/160000]	lr: 9.654e-03, eta: 1 day, 16:09:36, time: 0.888, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4074, decode.acc_seg: 45.5977, loss: 1.4074
2021-08-14 04:20:25,289 - mmseg - INFO - Iter [6250/160000]	lr: 9.651e-03, eta: 1 day, 16:07:53, time: 0.894, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4266, decode.acc_seg: 44.1290, loss: 1.4266
2021-08-14 04:21:08,039 - mmseg - INFO - Iter [6300/160000]	lr: 9.649e-03, eta: 1 day, 16:05:24, time: 0.856, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4742, decode.acc_seg: 44.0896, loss: 1.4742
2021-08-14 04:22:26,276 - mmseg - INFO - Iter [6350/160000]	lr: 9.646e-03, eta: 1 day, 16:17:14, time: 1.565, data_time: 0.708, memory: 4777, decode.loss_seg: 1.4535, decode.acc_seg: 44.9930, loss: 1.4535
2021-08-14 04:23:10,915 - mmseg - INFO - Iter [6400/160000]	lr: 9.643e-03, eta: 1 day, 16:15:25, time: 0.893, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3889, decode.acc_seg: 45.3051, loss: 1.3889
2021-08-14 04:23:56,111 - mmseg - INFO - Iter [6450/160000]	lr: 9.640e-03, eta: 1 day, 16:13:51, time: 0.904, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4084, decode.acc_seg: 43.7712, loss: 1.4084
2021-08-14 04:24:38,995 - mmseg - INFO - Iter [6500/160000]	lr: 9.637e-03, eta: 1 day, 16:11:23, time: 0.858, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4529, decode.acc_seg: 43.4435, loss: 1.4529
2021-08-14 04:25:22,601 - mmseg - INFO - Iter [6550/160000]	lr: 9.635e-03, eta: 1 day, 16:09:13, time: 0.872, data_time: 0.009, memory: 4777, decode.loss_seg: 1.4104, decode.acc_seg: 44.0532, loss: 1.4104
2021-08-14 04:26:07,226 - mmseg - INFO - Iter [6600/160000]	lr: 9.632e-03, eta: 1 day, 16:07:28, time: 0.892, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3957, decode.acc_seg: 44.4149, loss: 1.3957
2021-08-14 04:26:51,765 - mmseg - INFO - Iter [6650/160000]	lr: 9.629e-03, eta: 1 day, 16:05:42, time: 0.891, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4170, decode.acc_seg: 44.5595, loss: 1.4170
2021-08-14 04:27:35,280 - mmseg - INFO - Iter [6700/160000]	lr: 9.626e-03, eta: 1 day, 16:03:35, time: 0.871, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3876, decode.acc_seg: 45.9609, loss: 1.3876
2021-08-14 04:28:18,422 - mmseg - INFO - Iter [6750/160000]	lr: 9.623e-03, eta: 1 day, 16:01:19, time: 0.863, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3895, decode.acc_seg: 44.6451, loss: 1.3895
2021-08-14 04:29:02,775 - mmseg - INFO - Iter [6800/160000]	lr: 9.621e-03, eta: 1 day, 15:59:32, time: 0.887, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4212, decode.acc_seg: 45.2719, loss: 1.4212
2021-08-14 04:29:48,585 - mmseg - INFO - Iter [6850/160000]	lr: 9.618e-03, eta: 1 day, 15:58:18, time: 0.916, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4281, decode.acc_seg: 44.7417, loss: 1.4281
2021-08-14 04:30:31,402 - mmseg - INFO - Iter [6900/160000]	lr: 9.615e-03, eta: 1 day, 15:55:59, time: 0.857, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4057, decode.acc_seg: 45.8063, loss: 1.4057
2021-08-14 04:31:49,737 - mmseg - INFO - Iter [6950/160000]	lr: 9.612e-03, eta: 1 day, 16:06:43, time: 1.567, data_time: 0.702, memory: 4777, decode.loss_seg: 1.3554, decode.acc_seg: 45.1514, loss: 1.3554
2021-08-14 04:32:34,916 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 04:32:34,917 - mmseg - INFO - Iter [7000/160000]	lr: 9.609e-03, eta: 1 day, 16:05:13, time: 0.904, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3951, decode.acc_seg: 44.8230, loss: 1.3951
2021-08-14 04:33:17,873 - mmseg - INFO - Iter [7050/160000]	lr: 9.607e-03, eta: 1 day, 16:02:54, time: 0.859, data_time: 0.009, memory: 4777, decode.loss_seg: 1.4043, decode.acc_seg: 45.3729, loss: 1.4043
2021-08-14 04:34:00,610 - mmseg - INFO - Iter [7100/160000]	lr: 9.604e-03, eta: 1 day, 16:00:32, time: 0.854, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3951, decode.acc_seg: 44.6256, loss: 1.3951
2021-08-14 04:34:43,679 - mmseg - INFO - Iter [7150/160000]	lr: 9.601e-03, eta: 1 day, 15:58:19, time: 0.862, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3805, decode.acc_seg: 45.4372, loss: 1.3805
2021-08-14 04:35:28,747 - mmseg - INFO - Iter [7200/160000]	lr: 9.598e-03, eta: 1 day, 15:56:49, time: 0.901, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3311, decode.acc_seg: 45.4550, loss: 1.3311
2021-08-14 04:36:13,046 - mmseg - INFO - Iter [7250/160000]	lr: 9.595e-03, eta: 1 day, 15:55:04, time: 0.887, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3747, decode.acc_seg: 45.8591, loss: 1.3747
2021-08-14 04:36:56,372 - mmseg - INFO - Iter [7300/160000]	lr: 9.593e-03, eta: 1 day, 15:52:59, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3965, decode.acc_seg: 45.3189, loss: 1.3965
2021-08-14 04:37:41,082 - mmseg - INFO - Iter [7350/160000]	lr: 9.590e-03, eta: 1 day, 15:51:25, time: 0.894, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3804, decode.acc_seg: 45.5232, loss: 1.3804
2021-08-14 04:38:26,177 - mmseg - INFO - Iter [7400/160000]	lr: 9.587e-03, eta: 1 day, 15:49:59, time: 0.902, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3492, decode.acc_seg: 45.3462, loss: 1.3492
2021-08-14 04:39:09,089 - mmseg - INFO - Iter [7450/160000]	lr: 9.584e-03, eta: 1 day, 15:47:47, time: 0.857, data_time: 0.009, memory: 4777, decode.loss_seg: 1.3924, decode.acc_seg: 46.3174, loss: 1.3924
2021-08-14 04:39:52,545 - mmseg - INFO - Iter [7500/160000]	lr: 9.581e-03, eta: 1 day, 15:45:50, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.4463, decode.acc_seg: 44.8925, loss: 1.4463
2021-08-14 04:40:36,659 - mmseg - INFO - Iter [7550/160000]	lr: 9.579e-03, eta: 1 day, 15:44:06, time: 0.882, data_time: 0.009, memory: 4777, decode.loss_seg: 1.3783, decode.acc_seg: 45.5121, loss: 1.3783
2021-08-14 04:41:55,090 - mmseg - INFO - Iter [7600/160000]	lr: 9.576e-03, eta: 1 day, 15:53:51, time: 1.569, data_time: 0.723, memory: 4777, decode.loss_seg: 1.3260, decode.acc_seg: 45.9780, loss: 1.3260
2021-08-14 04:42:40,236 - mmseg - INFO - Iter [7650/160000]	lr: 9.573e-03, eta: 1 day, 15:52:24, time: 0.903, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3673, decode.acc_seg: 45.2736, loss: 1.3673
2021-08-14 04:43:23,116 - mmseg - INFO - Iter [7700/160000]	lr: 9.570e-03, eta: 1 day, 15:50:14, time: 0.858, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3325, decode.acc_seg: 46.8351, loss: 1.3325
2021-08-14 04:44:06,693 - mmseg - INFO - Iter [7750/160000]	lr: 9.567e-03, eta: 1 day, 15:48:18, time: 0.872, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3709, decode.acc_seg: 44.9856, loss: 1.3709
2021-08-14 04:44:52,551 - mmseg - INFO - Iter [7800/160000]	lr: 9.565e-03, eta: 1 day, 15:47:07, time: 0.917, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3866, decode.acc_seg: 44.8266, loss: 1.3866
2021-08-14 04:45:37,567 - mmseg - INFO - Iter [7850/160000]	lr: 9.562e-03, eta: 1 day, 15:45:41, time: 0.900, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3456, decode.acc_seg: 45.8205, loss: 1.3456
2021-08-14 04:46:22,011 - mmseg - INFO - Iter [7900/160000]	lr: 9.559e-03, eta: 1 day, 15:44:03, time: 0.889, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3872, decode.acc_seg: 45.1947, loss: 1.3872
2021-08-14 04:47:06,267 - mmseg - INFO - Iter [7950/160000]	lr: 9.556e-03, eta: 1 day, 15:42:24, time: 0.885, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3639, decode.acc_seg: 45.8542, loss: 1.3639
2021-08-14 04:47:50,173 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 04:47:50,174 - mmseg - INFO - Iter [8000/160000]	lr: 9.553e-03, eta: 1 day, 15:40:37, time: 0.878, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3645, decode.acc_seg: 45.8008, loss: 1.3645
2021-08-14 04:48:35,279 - mmseg - INFO - Iter [8050/160000]	lr: 9.551e-03, eta: 1 day, 15:39:15, time: 0.902, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3306, decode.acc_seg: 46.1684, loss: 1.3306
2021-08-14 04:49:21,062 - mmseg - INFO - Iter [8100/160000]	lr: 9.548e-03, eta: 1 day, 15:38:05, time: 0.915, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3805, decode.acc_seg: 46.0655, loss: 1.3805
2021-08-14 04:50:07,049 - mmseg - INFO - Iter [8150/160000]	lr: 9.545e-03, eta: 1 day, 15:37:00, time: 0.920, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3796, decode.acc_seg: 45.8863, loss: 1.3796
2021-08-14 04:50:52,167 - mmseg - INFO - Iter [8200/160000]	lr: 9.542e-03, eta: 1 day, 15:35:40, time: 0.903, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3587, decode.acc_seg: 45.2659, loss: 1.3587
2021-08-14 04:52:12,062 - mmseg - INFO - Iter [8250/160000]	lr: 9.539e-03, eta: 1 day, 15:44:59, time: 1.598, data_time: 0.661, memory: 4777, decode.loss_seg: 1.3059, decode.acc_seg: 46.5453, loss: 1.3059
2021-08-14 04:52:54,814 - mmseg - INFO - Iter [8300/160000]	lr: 9.537e-03, eta: 1 day, 15:42:51, time: 0.855, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3716, decode.acc_seg: 45.8515, loss: 1.3716
2021-08-14 04:53:38,829 - mmseg - INFO - Iter [8350/160000]	lr: 9.534e-03, eta: 1 day, 15:41:07, time: 0.880, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3643, decode.acc_seg: 46.2726, loss: 1.3643
2021-08-14 04:54:22,372 - mmseg - INFO - Iter [8400/160000]	lr: 9.531e-03, eta: 1 day, 15:39:16, time: 0.871, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3279, decode.acc_seg: 46.2090, loss: 1.3279
2021-08-14 04:55:05,693 - mmseg - INFO - Iter [8450/160000]	lr: 9.528e-03, eta: 1 day, 15:37:22, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3311, decode.acc_seg: 45.9550, loss: 1.3311
2021-08-14 04:55:49,039 - mmseg - INFO - Iter [8500/160000]	lr: 9.525e-03, eta: 1 day, 15:35:28, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3451, decode.acc_seg: 45.5162, loss: 1.3451
2021-08-14 04:56:31,984 - mmseg - INFO - Iter [8550/160000]	lr: 9.523e-03, eta: 1 day, 15:33:29, time: 0.860, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3706, decode.acc_seg: 45.4555, loss: 1.3706
2021-08-14 04:57:15,111 - mmseg - INFO - Iter [8600/160000]	lr: 9.520e-03, eta: 1 day, 15:31:33, time: 0.862, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3408, decode.acc_seg: 46.1667, loss: 1.3408
2021-08-14 04:57:57,986 - mmseg - INFO - Iter [8650/160000]	lr: 9.517e-03, eta: 1 day, 15:29:34, time: 0.857, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3560, decode.acc_seg: 46.1049, loss: 1.3560
2021-08-14 04:58:41,044 - mmseg - INFO - Iter [8700/160000]	lr: 9.514e-03, eta: 1 day, 15:27:39, time: 0.861, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3269, decode.acc_seg: 46.7723, loss: 1.3269
2021-08-14 04:59:25,115 - mmseg - INFO - Iter [8750/160000]	lr: 9.511e-03, eta: 1 day, 15:26:03, time: 0.882, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3275, decode.acc_seg: 46.2188, loss: 1.3275
2021-08-14 05:00:08,273 - mmseg - INFO - Iter [8800/160000]	lr: 9.509e-03, eta: 1 day, 15:24:11, time: 0.863, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3338, decode.acc_seg: 45.8352, loss: 1.3338
2021-08-14 05:01:27,299 - mmseg - INFO - Iter [8850/160000]	lr: 9.506e-03, eta: 1 day, 15:32:32, time: 1.580, data_time: 0.633, memory: 4777, decode.loss_seg: 1.3674, decode.acc_seg: 45.4735, loss: 1.3674
2021-08-14 05:02:12,467 - mmseg - INFO - Iter [8900/160000]	lr: 9.503e-03, eta: 1 day, 15:31:13, time: 0.903, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3122, decode.acc_seg: 46.4730, loss: 1.3122
2021-08-14 05:02:58,632 - mmseg - INFO - Iter [8950/160000]	lr: 9.500e-03, eta: 1 day, 15:30:10, time: 0.923, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3198, decode.acc_seg: 46.4061, loss: 1.3198
2021-08-14 05:03:43,599 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 05:03:43,600 - mmseg - INFO - Iter [9000/160000]	lr: 9.497e-03, eta: 1 day, 15:28:48, time: 0.900, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3479, decode.acc_seg: 45.9748, loss: 1.3479
2021-08-14 05:04:26,642 - mmseg - INFO - Iter [9050/160000]	lr: 9.495e-03, eta: 1 day, 15:26:54, time: 0.861, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3286, decode.acc_seg: 46.6436, loss: 1.3286
2021-08-14 05:05:08,692 - mmseg - INFO - Iter [9100/160000]	lr: 9.492e-03, eta: 1 day, 15:24:44, time: 0.841, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3143, decode.acc_seg: 46.3471, loss: 1.3143
2021-08-14 05:05:51,850 - mmseg - INFO - Iter [9150/160000]	lr: 9.489e-03, eta: 1 day, 15:22:53, time: 0.863, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3443, decode.acc_seg: 46.7624, loss: 1.3443
2021-08-14 05:06:36,937 - mmseg - INFO - Iter [9200/160000]	lr: 9.486e-03, eta: 1 day, 15:21:35, time: 0.902, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3372, decode.acc_seg: 45.8071, loss: 1.3372
2021-08-14 05:07:20,868 - mmseg - INFO - Iter [9250/160000]	lr: 9.483e-03, eta: 1 day, 15:19:58, time: 0.879, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2839, decode.acc_seg: 46.3380, loss: 1.2839
2021-08-14 05:08:04,969 - mmseg - INFO - Iter [9300/160000]	lr: 9.481e-03, eta: 1 day, 15:18:25, time: 0.882, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3257, decode.acc_seg: 46.2440, loss: 1.3257
2021-08-14 05:08:49,370 - mmseg - INFO - Iter [9350/160000]	lr: 9.478e-03, eta: 1 day, 15:16:57, time: 0.888, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3689, decode.acc_seg: 46.4671, loss: 1.3689
2021-08-14 05:09:33,275 - mmseg - INFO - Iter [9400/160000]	lr: 9.475e-03, eta: 1 day, 15:15:21, time: 0.878, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3210, decode.acc_seg: 46.2948, loss: 1.3210
2021-08-14 05:10:16,226 - mmseg - INFO - Iter [9450/160000]	lr: 9.472e-03, eta: 1 day, 15:13:31, time: 0.859, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3550, decode.acc_seg: 45.2029, loss: 1.3550
2021-08-14 05:11:34,297 - mmseg - INFO - Iter [9500/160000]	lr: 9.469e-03, eta: 1 day, 15:20:58, time: 1.562, data_time: 0.662, memory: 4777, decode.loss_seg: 1.2750, decode.acc_seg: 48.1805, loss: 1.2750
2021-08-14 05:12:17,503 - mmseg - INFO - Iter [9550/160000]	lr: 9.467e-03, eta: 1 day, 15:19:10, time: 0.864, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3161, decode.acc_seg: 46.0564, loss: 1.3161
2021-08-14 05:13:01,698 - mmseg - INFO - Iter [9600/160000]	lr: 9.464e-03, eta: 1 day, 15:17:38, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3373, decode.acc_seg: 46.6283, loss: 1.3373
2021-08-14 05:13:45,711 - mmseg - INFO - Iter [9650/160000]	lr: 9.461e-03, eta: 1 day, 15:16:05, time: 0.881, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3408, decode.acc_seg: 46.5207, loss: 1.3408
2021-08-14 05:14:30,296 - mmseg - INFO - Iter [9700/160000]	lr: 9.458e-03, eta: 1 day, 15:14:40, time: 0.892, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3160, decode.acc_seg: 46.0256, loss: 1.3160
2021-08-14 05:15:13,280 - mmseg - INFO - Iter [9750/160000]	lr: 9.455e-03, eta: 1 day, 15:12:51, time: 0.860, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2640, decode.acc_seg: 48.5418, loss: 1.2640
2021-08-14 05:15:57,418 - mmseg - INFO - Iter [9800/160000]	lr: 9.453e-03, eta: 1 day, 15:11:21, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3137, decode.acc_seg: 46.6180, loss: 1.3137
2021-08-14 05:16:41,696 - mmseg - INFO - Iter [9850/160000]	lr: 9.450e-03, eta: 1 day, 15:09:53, time: 0.885, data_time: 0.009, memory: 4777, decode.loss_seg: 1.3051, decode.acc_seg: 47.1076, loss: 1.3051
2021-08-14 05:17:25,517 - mmseg - INFO - Iter [9900/160000]	lr: 9.447e-03, eta: 1 day, 15:08:18, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3178, decode.acc_seg: 47.9548, loss: 1.3178
2021-08-14 05:18:09,198 - mmseg - INFO - Iter [9950/160000]	lr: 9.444e-03, eta: 1 day, 15:06:43, time: 0.874, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2995, decode.acc_seg: 45.8479, loss: 1.2995
2021-08-14 05:18:52,964 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 05:18:52,965 - mmseg - INFO - Iter [10000/160000]	lr: 9.441e-03, eta: 1 day, 15:05:08, time: 0.875, data_time: 0.009, memory: 4777, decode.loss_seg: 1.3270, decode.acc_seg: 46.8891, loss: 1.3270
2021-08-14 05:19:36,072 - mmseg - INFO - Iter [10050/160000]	lr: 9.439e-03, eta: 1 day, 15:03:25, time: 0.862, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3006, decode.acc_seg: 47.1986, loss: 1.3006
2021-08-14 05:20:54,779 - mmseg - INFO - Iter [10100/160000]	lr: 9.436e-03, eta: 1 day, 15:10:30, time: 1.574, data_time: 0.716, memory: 4777, decode.loss_seg: 1.3171, decode.acc_seg: 46.5289, loss: 1.3171
2021-08-14 05:21:38,288 - mmseg - INFO - Iter [10150/160000]	lr: 9.433e-03, eta: 1 day, 15:08:51, time: 0.871, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2693, decode.acc_seg: 47.4585, loss: 1.2693
2021-08-14 05:22:21,381 - mmseg - INFO - Iter [10200/160000]	lr: 9.430e-03, eta: 1 day, 15:07:06, time: 0.862, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2584, decode.acc_seg: 48.6608, loss: 1.2584
2021-08-14 05:23:04,012 - mmseg - INFO - Iter [10250/160000]	lr: 9.427e-03, eta: 1 day, 15:05:15, time: 0.853, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2969, decode.acc_seg: 47.1539, loss: 1.2969
2021-08-14 05:23:48,345 - mmseg - INFO - Iter [10300/160000]	lr: 9.425e-03, eta: 1 day, 15:03:50, time: 0.886, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2941, decode.acc_seg: 47.3077, loss: 1.2941
2021-08-14 05:24:32,381 - mmseg - INFO - Iter [10350/160000]	lr: 9.422e-03, eta: 1 day, 15:02:20, time: 0.881, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3059, decode.acc_seg: 47.0370, loss: 1.3059
2021-08-14 05:25:17,584 - mmseg - INFO - Iter [10400/160000]	lr: 9.419e-03, eta: 1 day, 15:01:08, time: 0.904, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2971, decode.acc_seg: 47.3070, loss: 1.2971
2021-08-14 05:26:02,574 - mmseg - INFO - Iter [10450/160000]	lr: 9.416e-03, eta: 1 day, 14:59:53, time: 0.900, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3245, decode.acc_seg: 46.3988, loss: 1.3245
2021-08-14 05:26:48,143 - mmseg - INFO - Iter [10500/160000]	lr: 9.413e-03, eta: 1 day, 14:58:46, time: 0.911, data_time: 0.011, memory: 4777, decode.loss_seg: 1.2889, decode.acc_seg: 46.9250, loss: 1.2889
2021-08-14 05:27:31,650 - mmseg - INFO - Iter [10550/160000]	lr: 9.411e-03, eta: 1 day, 14:57:11, time: 0.871, data_time: 0.012, memory: 4777, decode.loss_seg: 1.3083, decode.acc_seg: 46.4226, loss: 1.3083
2021-08-14 05:28:15,124 - mmseg - INFO - Iter [10600/160000]	lr: 9.408e-03, eta: 1 day, 14:55:36, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2770, decode.acc_seg: 48.4278, loss: 1.2770
2021-08-14 05:28:59,033 - mmseg - INFO - Iter [10650/160000]	lr: 9.405e-03, eta: 1 day, 14:54:07, time: 0.878, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2698, decode.acc_seg: 47.2160, loss: 1.2698
2021-08-14 05:29:42,517 - mmseg - INFO - Iter [10700/160000]	lr: 9.402e-03, eta: 1 day, 14:52:33, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3331, decode.acc_seg: 46.5886, loss: 1.3331
2021-08-14 05:31:01,007 - mmseg - INFO - Iter [10750/160000]	lr: 9.399e-03, eta: 1 day, 14:59:05, time: 1.570, data_time: 0.708, memory: 4777, decode.loss_seg: 1.2783, decode.acc_seg: 46.9111, loss: 1.2783
2021-08-14 05:31:44,237 - mmseg - INFO - Iter [10800/160000]	lr: 9.397e-03, eta: 1 day, 14:57:25, time: 0.865, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2546, decode.acc_seg: 47.4866, loss: 1.2546
2021-08-14 05:32:28,182 - mmseg - INFO - Iter [10850/160000]	lr: 9.394e-03, eta: 1 day, 14:55:56, time: 0.879, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2967, decode.acc_seg: 47.4105, loss: 1.2967
2021-08-14 05:33:12,393 - mmseg - INFO - Iter [10900/160000]	lr: 9.391e-03, eta: 1 day, 14:54:31, time: 0.884, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2967, decode.acc_seg: 47.4201, loss: 1.2967
2021-08-14 05:33:56,748 - mmseg - INFO - Iter [10950/160000]	lr: 9.388e-03, eta: 1 day, 14:53:09, time: 0.887, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2668, decode.acc_seg: 46.3338, loss: 1.2668
2021-08-14 05:34:40,567 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 05:34:40,567 - mmseg - INFO - Iter [11000/160000]	lr: 9.385e-03, eta: 1 day, 14:51:39, time: 0.876, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2989, decode.acc_seg: 47.8492, loss: 1.2989
2021-08-14 05:35:24,628 - mmseg - INFO - Iter [11050/160000]	lr: 9.383e-03, eta: 1 day, 14:50:13, time: 0.882, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2951, decode.acc_seg: 47.0305, loss: 1.2951
2021-08-14 05:36:10,077 - mmseg - INFO - Iter [11100/160000]	lr: 9.380e-03, eta: 1 day, 14:49:06, time: 0.908, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2989, decode.acc_seg: 46.6019, loss: 1.2989
2021-08-14 05:36:54,839 - mmseg - INFO - Iter [11150/160000]	lr: 9.377e-03, eta: 1 day, 14:47:51, time: 0.896, data_time: 0.011, memory: 4777, decode.loss_seg: 1.3051, decode.acc_seg: 46.4660, loss: 1.3051
2021-08-14 05:37:37,701 - mmseg - INFO - Iter [11200/160000]	lr: 9.374e-03, eta: 1 day, 14:46:10, time: 0.857, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2614, decode.acc_seg: 47.8952, loss: 1.2614
2021-08-14 05:38:21,328 - mmseg - INFO - Iter [11250/160000]	lr: 9.371e-03, eta: 1 day, 14:44:40, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2950, decode.acc_seg: 46.6909, loss: 1.2950
2021-08-14 05:39:04,292 - mmseg - INFO - Iter [11300/160000]	lr: 9.369e-03, eta: 1 day, 14:43:01, time: 0.859, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3165, decode.acc_seg: 46.8976, loss: 1.3165
2021-08-14 05:39:47,094 - mmseg - INFO - Iter [11350/160000]	lr: 9.366e-03, eta: 1 day, 14:41:21, time: 0.856, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2528, decode.acc_seg: 48.3957, loss: 1.2528
2021-08-14 05:41:08,168 - mmseg - INFO - Iter [11400/160000]	lr: 9.363e-03, eta: 1 day, 14:48:00, time: 1.620, data_time: 0.732, memory: 4777, decode.loss_seg: 1.2570, decode.acc_seg: 47.3092, loss: 1.2570
2021-08-14 05:41:54,181 - mmseg - INFO - Iter [11450/160000]	lr: 9.360e-03, eta: 1 day, 14:47:00, time: 0.921, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3186, decode.acc_seg: 47.3026, loss: 1.3186
2021-08-14 05:42:39,969 - mmseg - INFO - Iter [11500/160000]	lr: 9.357e-03, eta: 1 day, 14:45:58, time: 0.917, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2980, decode.acc_seg: 46.8930, loss: 1.2980
2021-08-14 05:43:24,577 - mmseg - INFO - Iter [11550/160000]	lr: 9.354e-03, eta: 1 day, 14:44:40, time: 0.892, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2861, decode.acc_seg: 48.3775, loss: 1.2861
2021-08-14 05:44:09,171 - mmseg - INFO - Iter [11600/160000]	lr: 9.352e-03, eta: 1 day, 14:43:23, time: 0.892, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2611, decode.acc_seg: 47.6654, loss: 1.2611
2021-08-14 05:44:53,588 - mmseg - INFO - Iter [11650/160000]	lr: 9.349e-03, eta: 1 day, 14:42:03, time: 0.888, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2789, decode.acc_seg: 47.9739, loss: 1.2789
2021-08-14 05:45:38,920 - mmseg - INFO - Iter [11700/160000]	lr: 9.346e-03, eta: 1 day, 14:40:56, time: 0.906, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2583, decode.acc_seg: 48.4915, loss: 1.2583
2021-08-14 05:46:22,513 - mmseg - INFO - Iter [11750/160000]	lr: 9.343e-03, eta: 1 day, 14:39:27, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2471, decode.acc_seg: 48.1682, loss: 1.2471
2021-08-14 05:47:07,216 - mmseg - INFO - Iter [11800/160000]	lr: 9.340e-03, eta: 1 day, 14:38:11, time: 0.893, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2919, decode.acc_seg: 47.6869, loss: 1.2919
2021-08-14 05:47:51,083 - mmseg - INFO - Iter [11850/160000]	lr: 9.338e-03, eta: 1 day, 14:36:46, time: 0.878, data_time: 0.010, memory: 4777, decode.loss_seg: 1.3066, decode.acc_seg: 46.5837, loss: 1.3066
2021-08-14 05:48:36,912 - mmseg - INFO - Iter [11900/160000]	lr: 9.335e-03, eta: 1 day, 14:35:46, time: 0.916, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2558, decode.acc_seg: 46.9634, loss: 1.2558
2021-08-14 05:49:21,411 - mmseg - INFO - Iter [11950/160000]	lr: 9.332e-03, eta: 1 day, 14:34:29, time: 0.891, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2737, decode.acc_seg: 48.4626, loss: 1.2737
2021-08-14 05:50:40,714 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 05:50:40,720 - mmseg - INFO - Iter [12000/160000]	lr: 9.329e-03, eta: 1 day, 14:40:22, time: 1.586, data_time: 0.729, memory: 4777, decode.loss_seg: 1.2797, decode.acc_seg: 47.5399, loss: 1.2797
2021-08-14 05:51:24,561 - mmseg - INFO - Iter [12050/160000]	lr: 9.326e-03, eta: 1 day, 14:38:56, time: 0.877, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2586, decode.acc_seg: 47.6326, loss: 1.2586
2021-08-14 05:52:08,803 - mmseg - INFO - Iter [12100/160000]	lr: 9.324e-03, eta: 1 day, 14:37:35, time: 0.885, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2562, decode.acc_seg: 48.0985, loss: 1.2562
2021-08-14 05:52:53,453 - mmseg - INFO - Iter [12150/160000]	lr: 9.321e-03, eta: 1 day, 14:36:19, time: 0.893, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2703, decode.acc_seg: 47.8067, loss: 1.2703
2021-08-14 05:53:37,117 - mmseg - INFO - Iter [12200/160000]	lr: 9.318e-03, eta: 1 day, 14:34:52, time: 0.874, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2908, decode.acc_seg: 46.8604, loss: 1.2908
2021-08-14 05:54:20,828 - mmseg - INFO - Iter [12250/160000]	lr: 9.315e-03, eta: 1 day, 14:33:25, time: 0.875, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2623, decode.acc_seg: 48.5440, loss: 1.2623
2021-08-14 05:55:04,146 - mmseg - INFO - Iter [12300/160000]	lr: 9.312e-03, eta: 1 day, 14:31:54, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2632, decode.acc_seg: 47.5726, loss: 1.2632
2021-08-14 05:55:47,617 - mmseg - INFO - Iter [12350/160000]	lr: 9.310e-03, eta: 1 day, 14:30:26, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2510, decode.acc_seg: 48.2577, loss: 1.2510
2021-08-14 05:56:32,095 - mmseg - INFO - Iter [12400/160000]	lr: 9.307e-03, eta: 1 day, 14:29:09, time: 0.890, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2417, decode.acc_seg: 47.4685, loss: 1.2417
2021-08-14 05:57:15,292 - mmseg - INFO - Iter [12450/160000]	lr: 9.304e-03, eta: 1 day, 14:27:38, time: 0.864, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2715, decode.acc_seg: 47.6560, loss: 1.2715
2021-08-14 05:57:59,314 - mmseg - INFO - Iter [12500/160000]	lr: 9.301e-03, eta: 1 day, 14:26:17, time: 0.880, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2698, decode.acc_seg: 48.5903, loss: 1.2698
2021-08-14 05:58:44,135 - mmseg - INFO - Iter [12550/160000]	lr: 9.298e-03, eta: 1 day, 14:25:05, time: 0.897, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2591, decode.acc_seg: 47.1939, loss: 1.2591
2021-08-14 05:59:28,323 - mmseg - INFO - Iter [12600/160000]	lr: 9.296e-03, eta: 1 day, 14:23:47, time: 0.884, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2373, decode.acc_seg: 48.7515, loss: 1.2373
2021-08-14 06:01:17,137 - mmseg - INFO - Iter [12650/160000]	lr: 9.293e-03, eta: 1 day, 14:35:01, time: 2.176, data_time: 1.310, memory: 4777, decode.loss_seg: 1.2318, decode.acc_seg: 48.2744, loss: 1.2318
2021-08-14 06:02:01,547 - mmseg - INFO - Iter [12700/160000]	lr: 9.290e-03, eta: 1 day, 14:33:43, time: 0.888, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2232, decode.acc_seg: 48.4349, loss: 1.2232
2021-08-14 06:02:46,945 - mmseg - INFO - Iter [12750/160000]	lr: 9.287e-03, eta: 1 day, 14:32:36, time: 0.908, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2232, decode.acc_seg: 48.7216, loss: 1.2232
2021-08-14 06:03:32,156 - mmseg - INFO - Iter [12800/160000]	lr: 9.284e-03, eta: 1 day, 14:31:27, time: 0.904, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2448, decode.acc_seg: 48.5622, loss: 1.2448
2021-08-14 06:04:16,141 - mmseg - INFO - Iter [12850/160000]	lr: 9.282e-03, eta: 1 day, 14:30:04, time: 0.880, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2324, decode.acc_seg: 48.2561, loss: 1.2324
2021-08-14 06:05:01,320 - mmseg - INFO - Iter [12900/160000]	lr: 9.279e-03, eta: 1 day, 14:28:54, time: 0.903, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2388, decode.acc_seg: 47.7237, loss: 1.2388
2021-08-14 06:05:45,154 - mmseg - INFO - Iter [12950/160000]	lr: 9.276e-03, eta: 1 day, 14:27:30, time: 0.877, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2518, decode.acc_seg: 48.6768, loss: 1.2518
2021-08-14 06:06:30,745 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 06:06:30,745 - mmseg - INFO - Iter [13000/160000]	lr: 9.273e-03, eta: 1 day, 14:26:26, time: 0.912, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2647, decode.acc_seg: 48.6324, loss: 1.2647
2021-08-14 06:07:15,391 - mmseg - INFO - Iter [13050/160000]	lr: 9.270e-03, eta: 1 day, 14:25:12, time: 0.893, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2478, decode.acc_seg: 48.3901, loss: 1.2478
2021-08-14 06:07:59,967 - mmseg - INFO - Iter [13100/160000]	lr: 9.267e-03, eta: 1 day, 14:23:57, time: 0.892, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2131, decode.acc_seg: 47.2510, loss: 1.2131
2021-08-14 06:08:43,264 - mmseg - INFO - Iter [13150/160000]	lr: 9.265e-03, eta: 1 day, 14:22:29, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2788, decode.acc_seg: 46.9463, loss: 1.2788
2021-08-14 06:09:27,699 - mmseg - INFO - Iter [13200/160000]	lr: 9.262e-03, eta: 1 day, 14:21:13, time: 0.889, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2430, decode.acc_seg: 48.2890, loss: 1.2430
2021-08-14 06:10:12,892 - mmseg - INFO - Iter [13250/160000]	lr: 9.259e-03, eta: 1 day, 14:20:05, time: 0.903, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2567, decode.acc_seg: 47.5418, loss: 1.2567
2021-08-14 06:11:32,651 - mmseg - INFO - Iter [13300/160000]	lr: 9.256e-03, eta: 1 day, 14:25:19, time: 1.595, data_time: 0.714, memory: 4777, decode.loss_seg: 1.2417, decode.acc_seg: 47.7820, loss: 1.2417
2021-08-14 06:12:15,662 - mmseg - INFO - Iter [13350/160000]	lr: 9.253e-03, eta: 1 day, 14:23:47, time: 0.860, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2218, decode.acc_seg: 48.2063, loss: 1.2218
2021-08-14 06:12:58,929 - mmseg - INFO - Iter [13400/160000]	lr: 9.251e-03, eta: 1 day, 14:22:17, time: 0.865, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2108, decode.acc_seg: 49.1672, loss: 1.2108
2021-08-14 06:13:43,694 - mmseg - INFO - Iter [13450/160000]	lr: 9.248e-03, eta: 1 day, 14:21:05, time: 0.895, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2539, decode.acc_seg: 48.2941, loss: 1.2539
2021-08-14 06:14:27,606 - mmseg - INFO - Iter [13500/160000]	lr: 9.245e-03, eta: 1 day, 14:19:43, time: 0.878, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2554, decode.acc_seg: 47.7247, loss: 1.2554
2021-08-14 06:15:11,365 - mmseg - INFO - Iter [13550/160000]	lr: 9.242e-03, eta: 1 day, 14:18:20, time: 0.875, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1979, decode.acc_seg: 48.4481, loss: 1.1979
2021-08-14 06:15:54,539 - mmseg - INFO - Iter [13600/160000]	lr: 9.239e-03, eta: 1 day, 14:16:50, time: 0.863, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2626, decode.acc_seg: 48.7608, loss: 1.2626
2021-08-14 06:16:37,868 - mmseg - INFO - Iter [13650/160000]	lr: 9.237e-03, eta: 1 day, 14:15:23, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2205, decode.acc_seg: 49.0271, loss: 1.2205
2021-08-14 06:17:21,885 - mmseg - INFO - Iter [13700/160000]	lr: 9.234e-03, eta: 1 day, 14:14:04, time: 0.880, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2690, decode.acc_seg: 48.1756, loss: 1.2690
2021-08-14 06:18:05,676 - mmseg - INFO - Iter [13750/160000]	lr: 9.231e-03, eta: 1 day, 14:12:42, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2547, decode.acc_seg: 48.1825, loss: 1.2547
2021-08-14 06:18:49,489 - mmseg - INFO - Iter [13800/160000]	lr: 9.228e-03, eta: 1 day, 14:11:21, time: 0.876, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2241, decode.acc_seg: 48.5182, loss: 1.2241
2021-08-14 06:19:33,607 - mmseg - INFO - Iter [13850/160000]	lr: 9.225e-03, eta: 1 day, 14:10:04, time: 0.882, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2644, decode.acc_seg: 47.7223, loss: 1.2644
2021-08-14 06:20:51,630 - mmseg - INFO - Iter [13900/160000]	lr: 9.223e-03, eta: 1 day, 14:14:42, time: 1.560, data_time: 0.701, memory: 4777, decode.loss_seg: 1.2479, decode.acc_seg: 47.9908, loss: 1.2479
2021-08-14 06:21:36,126 - mmseg - INFO - Iter [13950/160000]	lr: 9.220e-03, eta: 1 day, 14:13:28, time: 0.890, data_time: 0.011, memory: 4777, decode.loss_seg: 1.2267, decode.acc_seg: 47.9715, loss: 1.2267
2021-08-14 06:22:19,932 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 06:22:19,932 - mmseg - INFO - Iter [14000/160000]	lr: 9.217e-03, eta: 1 day, 14:12:06, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2585, decode.acc_seg: 48.4920, loss: 1.2585
2021-08-14 06:23:03,955 - mmseg - INFO - Iter [14050/160000]	lr: 9.214e-03, eta: 1 day, 14:10:47, time: 0.880, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1907, decode.acc_seg: 48.7456, loss: 1.1907
2021-08-14 06:23:47,492 - mmseg - INFO - Iter [14100/160000]	lr: 9.211e-03, eta: 1 day, 14:09:24, time: 0.871, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2517, decode.acc_seg: 47.4550, loss: 1.2517
2021-08-14 06:24:31,615 - mmseg - INFO - Iter [14150/160000]	lr: 9.208e-03, eta: 1 day, 14:08:06, time: 0.882, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2392, decode.acc_seg: 47.9768, loss: 1.2392
2021-08-14 06:25:15,274 - mmseg - INFO - Iter [14200/160000]	lr: 9.206e-03, eta: 1 day, 14:06:44, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2245, decode.acc_seg: 49.1650, loss: 1.2245
2021-08-14 06:26:00,510 - mmseg - INFO - Iter [14250/160000]	lr: 9.203e-03, eta: 1 day, 14:05:38, time: 0.905, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2183, decode.acc_seg: 48.7336, loss: 1.2183
2021-08-14 06:26:44,816 - mmseg - INFO - Iter [14300/160000]	lr: 9.200e-03, eta: 1 day, 14:04:23, time: 0.886, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2276, decode.acc_seg: 47.6753, loss: 1.2276
2021-08-14 06:27:28,320 - mmseg - INFO - Iter [14350/160000]	lr: 9.197e-03, eta: 1 day, 14:03:01, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1998, decode.acc_seg: 49.5265, loss: 1.1998
2021-08-14 06:28:12,232 - mmseg - INFO - Iter [14400/160000]	lr: 9.194e-03, eta: 1 day, 14:01:42, time: 0.878, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2459, decode.acc_seg: 48.7887, loss: 1.2459
2021-08-14 06:28:57,032 - mmseg - INFO - Iter [14450/160000]	lr: 9.192e-03, eta: 1 day, 14:00:33, time: 0.896, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2154, decode.acc_seg: 49.0487, loss: 1.2154
2021-08-14 06:29:39,565 - mmseg - INFO - Iter [14500/160000]	lr: 9.189e-03, eta: 1 day, 13:59:01, time: 0.851, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1819, decode.acc_seg: 50.4201, loss: 1.1819
2021-08-14 06:30:58,015 - mmseg - INFO - Iter [14550/160000]	lr: 9.186e-03, eta: 1 day, 14:03:28, time: 1.569, data_time: 0.717, memory: 4777, decode.loss_seg: 1.2450, decode.acc_seg: 47.5304, loss: 1.2450
2021-08-14 06:31:41,451 - mmseg - INFO - Iter [14600/160000]	lr: 9.183e-03, eta: 1 day, 14:02:05, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2227, decode.acc_seg: 48.6782, loss: 1.2227
2021-08-14 06:32:25,553 - mmseg - INFO - Iter [14650/160000]	lr: 9.180e-03, eta: 1 day, 14:00:48, time: 0.882, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2242, decode.acc_seg: 48.2063, loss: 1.2242
2021-08-14 06:33:09,860 - mmseg - INFO - Iter [14700/160000]	lr: 9.178e-03, eta: 1 day, 13:59:34, time: 0.887, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2028, decode.acc_seg: 48.3822, loss: 1.2028
2021-08-14 06:33:53,902 - mmseg - INFO - Iter [14750/160000]	lr: 9.175e-03, eta: 1 day, 13:58:17, time: 0.880, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2028, decode.acc_seg: 48.6183, loss: 1.2028
2021-08-14 06:34:37,007 - mmseg - INFO - Iter [14800/160000]	lr: 9.172e-03, eta: 1 day, 13:56:51, time: 0.862, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2461, decode.acc_seg: 49.0802, loss: 1.2461
2021-08-14 06:35:21,095 - mmseg - INFO - Iter [14850/160000]	lr: 9.169e-03, eta: 1 day, 13:55:35, time: 0.881, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2120, decode.acc_seg: 49.1139, loss: 1.2120
2021-08-14 06:36:04,107 - mmseg - INFO - Iter [14900/160000]	lr: 9.166e-03, eta: 1 day, 13:54:09, time: 0.860, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2191, decode.acc_seg: 48.8911, loss: 1.2191
2021-08-14 06:36:48,491 - mmseg - INFO - Iter [14950/160000]	lr: 9.163e-03, eta: 1 day, 13:52:56, time: 0.888, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2174, decode.acc_seg: 48.8043, loss: 1.2174
2021-08-14 06:37:31,754 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 06:37:31,754 - mmseg - INFO - Iter [15000/160000]	lr: 9.161e-03, eta: 1 day, 13:51:33, time: 0.865, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2272, decode.acc_seg: 48.4096, loss: 1.2272
2021-08-14 06:38:15,674 - mmseg - INFO - Iter [15050/160000]	lr: 9.158e-03, eta: 1 day, 13:50:16, time: 0.878, data_time: 0.009, memory: 4777, decode.loss_seg: 1.1781, decode.acc_seg: 49.4795, loss: 1.1781
2021-08-14 06:38:59,366 - mmseg - INFO - Iter [15100/160000]	lr: 9.155e-03, eta: 1 day, 13:48:58, time: 0.874, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2013, decode.acc_seg: 48.8570, loss: 1.2013
2021-08-14 06:40:17,745 - mmseg - INFO - Iter [15150/160000]	lr: 9.152e-03, eta: 1 day, 13:53:11, time: 1.567, data_time: 0.687, memory: 4777, decode.loss_seg: 1.1795, decode.acc_seg: 49.5325, loss: 1.1795
2021-08-14 06:41:01,037 - mmseg - INFO - Iter [15200/160000]	lr: 9.149e-03, eta: 1 day, 13:51:48, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1885, decode.acc_seg: 48.4057, loss: 1.1885
2021-08-14 06:41:44,894 - mmseg - INFO - Iter [15250/160000]	lr: 9.147e-03, eta: 1 day, 13:50:30, time: 0.878, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2205, decode.acc_seg: 48.5279, loss: 1.2205
2021-08-14 06:42:29,049 - mmseg - INFO - Iter [15300/160000]	lr: 9.144e-03, eta: 1 day, 13:49:16, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2293, decode.acc_seg: 49.8947, loss: 1.2293
2021-08-14 06:43:14,065 - mmseg - INFO - Iter [15350/160000]	lr: 9.141e-03, eta: 1 day, 13:48:09, time: 0.900, data_time: 0.009, memory: 4777, decode.loss_seg: 1.2074, decode.acc_seg: 48.6393, loss: 1.2074
2021-08-14 06:43:57,205 - mmseg - INFO - Iter [15400/160000]	lr: 9.138e-03, eta: 1 day, 13:46:46, time: 0.863, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2311, decode.acc_seg: 49.3291, loss: 1.2311
2021-08-14 06:44:40,771 - mmseg - INFO - Iter [15450/160000]	lr: 9.135e-03, eta: 1 day, 13:45:26, time: 0.871, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2213, decode.acc_seg: 49.7840, loss: 1.2213
2021-08-14 06:45:23,990 - mmseg - INFO - Iter [15500/160000]	lr: 9.133e-03, eta: 1 day, 13:44:04, time: 0.865, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2065, decode.acc_seg: 48.2131, loss: 1.2065
2021-08-14 06:46:07,606 - mmseg - INFO - Iter [15550/160000]	lr: 9.130e-03, eta: 1 day, 13:42:46, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2001, decode.acc_seg: 48.4713, loss: 1.2001
2021-08-14 06:46:50,546 - mmseg - INFO - Iter [15600/160000]	lr: 9.127e-03, eta: 1 day, 13:41:21, time: 0.859, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2086, decode.acc_seg: 48.2622, loss: 1.2086
2021-08-14 06:47:34,018 - mmseg - INFO - Iter [15650/160000]	lr: 9.124e-03, eta: 1 day, 13:40:02, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2173, decode.acc_seg: 48.9525, loss: 1.2173
2021-08-14 06:48:16,671 - mmseg - INFO - Iter [15700/160000]	lr: 9.121e-03, eta: 1 day, 13:38:35, time: 0.853, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2232, decode.acc_seg: 49.1344, loss: 1.2232
2021-08-14 06:48:59,668 - mmseg - INFO - Iter [15750/160000]	lr: 9.118e-03, eta: 1 day, 13:37:12, time: 0.860, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1741, decode.acc_seg: 48.5331, loss: 1.1741
2021-08-14 06:50:18,395 - mmseg - INFO - Iter [15800/160000]	lr: 9.116e-03, eta: 1 day, 13:41:15, time: 1.575, data_time: 0.666, memory: 4777, decode.loss_seg: 1.2067, decode.acc_seg: 49.4988, loss: 1.2067
2021-08-14 06:51:01,385 - mmseg - INFO - Iter [15850/160000]	lr: 9.113e-03, eta: 1 day, 13:39:51, time: 0.859, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1807, decode.acc_seg: 48.3003, loss: 1.1807
2021-08-14 06:51:44,670 - mmseg - INFO - Iter [15900/160000]	lr: 9.110e-03, eta: 1 day, 13:38:30, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1826, decode.acc_seg: 50.4509, loss: 1.1826
2021-08-14 06:52:27,979 - mmseg - INFO - Iter [15950/160000]	lr: 9.107e-03, eta: 1 day, 13:37:09, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1750, decode.acc_seg: 48.8343, loss: 1.1750
2021-08-14 06:53:12,636 - mmseg - INFO - Saving checkpoint at 16000 iterations
2021-08-14 06:53:12,857 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 06:53:12,860 - mmseg - INFO - Iter [16000/160000]	lr: 9.104e-03, eta: 1 day, 13:36:03, time: 0.898, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2442, decode.acc_seg: 48.5840, loss: 1.2442
2021-08-14 06:55:32,086 - mmseg - INFO - per class results:
2021-08-14 06:55:32,104 - mmseg - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 52.01 | 82.17 |
|       building      | 64.94 | 83.38 |
|         sky         | 87.03 | 95.58 |
|        floor        | 55.24 | 73.23 |
|         tree        | 56.65 |  77.2 |
|       ceiling       | 63.14 | 84.46 |
|         road        |  63.7 | 80.78 |
|         bed         | 47.75 | 83.72 |
|      windowpane     |  38.1 | 52.34 |
|        grass        | 56.07 | 78.22 |
|       cabinet       | 29.34 | 35.61 |
|       sidewalk      | 32.28 |  41.9 |
|        person       | 40.63 | 73.26 |
|        earth        | 22.58 | 37.26 |
|         door        |  5.38 |  5.86 |
|        table        | 20.12 | 33.81 |
|       mountain      | 30.36 | 49.02 |
|        plant        | 20.14 | 22.05 |
|       curtain       |  31.4 | 46.76 |
|        chair        |  20.9 | 31.54 |
|         car         | 52.89 | 76.48 |
|        water        | 16.67 | 18.94 |
|       painting      | 39.53 |  55.6 |
|         sofa        | 23.37 | 39.04 |
|        shelf        |  8.65 | 10.05 |
|        house        | 23.04 | 37.51 |
|         sea         |  29.8 | 67.38 |
|        mirror       | 12.41 | 16.45 |
|         rug         | 21.82 | 24.13 |
|        field        | 15.71 | 29.22 |
|       armchair      |  7.27 |  9.11 |
|         seat        | 17.08 | 22.52 |
|        fence        |  3.24 |  3.46 |
|         desk        |  6.02 |  6.89 |
|         rock        | 10.66 | 16.09 |
|       wardrobe      |  1.52 |  1.53 |
|         lamp        | 18.83 | 26.41 |
|       bathtub       |  13.3 | 14.78 |
|       railing       | 11.71 | 12.96 |
|       cushion       | 15.89 |  23.4 |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  1.78 |  1.86 |
|      signboard      |  4.59 |  4.88 |
|   chest of drawers  | 18.33 | 26.67 |
|       counter       |  3.02 |  3.13 |
|         sand        | 12.43 | 17.46 |
|         sink        | 19.07 | 33.59 |
|      skyscraper     |  28.0 | 34.66 |
|      fireplace      | 39.67 | 51.02 |
|     refrigerator    |  5.91 |  5.97 |
|      grandstand     |  9.94 | 13.59 |
|         path        |  2.45 |  2.59 |
|        stairs       |  4.41 |  4.56 |
|        runway       |  46.5 | 60.12 |
|         case        | 15.37 | 19.22 |
|      pool table     |  39.7 | 76.27 |
|        pillow       | 22.84 | 32.08 |
|     screen door     |  3.58 |  3.6  |
|       stairway      |  7.41 |  9.31 |
|        river        |  2.93 |  6.11 |
|        bridge       |  6.29 |  7.44 |
|       bookcase      |  4.43 |  4.62 |
|        blind        |  2.28 |  2.32 |
|     coffee table    |  17.9 | 26.12 |
|        toilet       | 25.95 | 50.06 |
|        flower       | 15.26 | 18.39 |
|         book        | 12.45 | 13.07 |
|         hill        |  2.12 |  2.61 |
|        bench        | 13.32 |  14.4 |
|      countertop     |  3.36 |  3.73 |
|        stove        | 21.73 | 27.77 |
|         palm        |  8.1  |  8.18 |
|    kitchen island   |  2.2  |  2.21 |
|       computer      |  9.36 | 10.13 |
|     swivel chair    | 10.56 | 11.84 |
|         boat        |  1.22 |  1.3  |
|         bar         |  2.57 |  2.61 |
|    arcade machine   |  2.58 |  2.86 |
|        hovel        |  0.12 |  0.12 |
|         bus         |  4.4  |  4.54 |
|        towel        |  0.16 |  0.16 |
|        light        |  4.9  |  5.17 |
|        truck        |  0.71 |  0.83 |
|        tower        |  6.88 |  6.89 |
|      chandelier     | 31.86 | 44.01 |
|        awning       |  0.52 |  0.53 |
|     streetlight     |  1.37 |  1.41 |
|        booth        |  0.0  |  0.0  |
| television receiver | 13.19 | 15.29 |
|       airplane      | 10.33 | 14.52 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  2.36 |  2.47 |
|         pole        |  0.59 |  0.61 |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.0  |  0.0  |
|      escalator      |  1.31 |  1.55 |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.0  |  0.0  |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  4.1  |  4.31 |
|        canopy       |  0.0  |  0.0  |
|        washer       |  7.17 |  8.43 |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  5.32 |  7.14 |
|        stool        |  0.0  |  0.0  |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  29.7 | 43.71 |
|         tent        | 11.84 | 16.02 |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.5  |  0.5  |
|        cradle       |  28.5 | 30.37 |
|         oven        |  0.36 |  0.37 |
|         ball        |  5.53 |  6.44 |
|         food        |  4.59 |  4.74 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  2.07 |  2.15 |
|      microwave      |  6.52 |  6.63 |
|         pot         |  0.07 |  0.07 |
|        animal       |  0.01 |  0.01 |
|       bicycle       |  0.0  |  0.0  |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.01 |  0.01 |
|        screen       |  29.2 | 35.47 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  3.5  |  3.53 |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.59 |  0.6  |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        |  0.0  |  0.0  |
|       monitor       |  0.0  |  0.0  |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.0  |  0.0  |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
2021-08-14 06:55:32,104 - mmseg - INFO - Summary:
2021-08-14 06:55:32,104 - mmseg - INFO - 
+-------+-------+------+
|  aAcc |  mIoU | mAcc |
+-------+-------+------+
| 63.57 | 12.37 | 17.1 |
+-------+-------+------+
2021-08-14 06:55:32,183 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 06:55:32,183 - mmseg - INFO - Iter(val) [250]	aAcc: 0.6357, mIoU: 0.1237, mAcc: 0.1710, IoU.wall: 0.5201, IoU.building: 0.6494, IoU.sky: 0.8703, IoU.floor: 0.5524, IoU.tree: 0.5665, IoU.ceiling: 0.6314, IoU.road: 0.6370, IoU.bed : 0.4775, IoU.windowpane: 0.3810, IoU.grass: 0.5607, IoU.cabinet: 0.2934, IoU.sidewalk: 0.3228, IoU.person: 0.4063, IoU.earth: 0.2258, IoU.door: 0.0538, IoU.table: 0.2012, IoU.mountain: 0.3036, IoU.plant: 0.2014, IoU.curtain: 0.3140, IoU.chair: 0.2090, IoU.car: 0.5289, IoU.water: 0.1667, IoU.painting: 0.3953, IoU.sofa: 0.2337, IoU.shelf: 0.0865, IoU.house: 0.2304, IoU.sea: 0.2980, IoU.mirror: 0.1241, IoU.rug: 0.2182, IoU.field: 0.1571, IoU.armchair: 0.0727, IoU.seat: 0.1708, IoU.fence: 0.0324, IoU.desk: 0.0602, IoU.rock: 0.1066, IoU.wardrobe: 0.0152, IoU.lamp: 0.1883, IoU.bathtub: 0.1330, IoU.railing: 0.1171, IoU.cushion: 0.1589, IoU.base: 0.0000, IoU.box: 0.0000, IoU.column: 0.0178, IoU.signboard: 0.0459, IoU.chest of drawers: 0.1833, IoU.counter: 0.0302, IoU.sand: 0.1243, IoU.sink: 0.1907, IoU.skyscraper: 0.2800, IoU.fireplace: 0.3967, IoU.refrigerator: 0.0591, IoU.grandstand: 0.0994, IoU.path: 0.0245, IoU.stairs: 0.0441, IoU.runway: 0.4650, IoU.case: 0.1537, IoU.pool table: 0.3970, IoU.pillow: 0.2284, IoU.screen door: 0.0358, IoU.stairway: 0.0741, IoU.river: 0.0293, IoU.bridge: 0.0629, IoU.bookcase: 0.0443, IoU.blind: 0.0228, IoU.coffee table: 0.1790, IoU.toilet: 0.2595, IoU.flower: 0.1526, IoU.book: 0.1245, IoU.hill: 0.0212, IoU.bench: 0.1332, IoU.countertop: 0.0336, IoU.stove: 0.2173, IoU.palm: 0.0810, IoU.kitchen island: 0.0220, IoU.computer: 0.0936, IoU.swivel chair: 0.1056, IoU.boat: 0.0122, IoU.bar: 0.0257, IoU.arcade machine: 0.0258, IoU.hovel: 0.0012, IoU.bus: 0.0440, IoU.towel: 0.0016, IoU.light: 0.0490, IoU.truck: 0.0071, IoU.tower: 0.0688, IoU.chandelier: 0.3186, IoU.awning: 0.0052, IoU.streetlight: 0.0137, IoU.booth: 0.0000, IoU.television receiver: 0.1319, IoU.airplane: 0.1033, IoU.dirt track: 0.0000, IoU.apparel: 0.0236, IoU.pole: 0.0059, IoU.land: 0.0000, IoU.bannister: 0.0000, IoU.escalator: 0.0131, IoU.ottoman: 0.0000, IoU.bottle: 0.0000, IoU.buffet: 0.0000, IoU.poster: 0.0000, IoU.stage: 0.0000, IoU.van: 0.0000, IoU.ship: 0.0000, IoU.fountain: 0.0000, IoU.conveyer belt: 0.0410, IoU.canopy: 0.0000, IoU.washer: 0.0717, IoU.plaything: 0.0000, IoU.swimming pool: 0.0532, IoU.stool: 0.0000, IoU.barrel: 0.0000, IoU.basket: 0.0000, IoU.waterfall: 0.2970, IoU.tent: 0.1184, IoU.bag: 0.0000, IoU.minibike: 0.0050, IoU.cradle: 0.2850, IoU.oven: 0.0036, IoU.ball: 0.0553, IoU.food: 0.0459, IoU.step: 0.0000, IoU.tank: 0.0000, IoU.trade name: 0.0207, IoU.microwave: 0.0652, IoU.pot: 0.0007, IoU.animal: 0.0001, IoU.bicycle: 0.0000, IoU.lake: 0.0000, IoU.dishwasher: 0.0001, IoU.screen: 0.2920, IoU.blanket: 0.0000, IoU.sculpture: 0.0000, IoU.hood: 0.0350, IoU.sconce: 0.0000, IoU.vase: 0.0059, IoU.traffic light: 0.0000, IoU.tray: 0.0000, IoU.ashcan: 0.0000, IoU.fan: 0.0000, IoU.pier: 0.0000, IoU.crt screen: 0.0000, IoU.plate: 0.0000, IoU.monitor: 0.0000, IoU.bulletin board: 0.0000, IoU.shower: 0.0000, IoU.radiator: 0.0000, IoU.glass: 0.0000, IoU.clock: 0.0000, IoU.flag: 0.0000, Acc.wall: 0.8217, Acc.building: 0.8338, Acc.sky: 0.9558, Acc.floor: 0.7323, Acc.tree: 0.7720, Acc.ceiling: 0.8446, Acc.road: 0.8078, Acc.bed : 0.8372, Acc.windowpane: 0.5234, Acc.grass: 0.7822, Acc.cabinet: 0.3561, Acc.sidewalk: 0.4190, Acc.person: 0.7326, Acc.earth: 0.3726, Acc.door: 0.0586, Acc.table: 0.3381, Acc.mountain: 0.4902, Acc.plant: 0.2205, Acc.curtain: 0.4676, Acc.chair: 0.3154, Acc.car: 0.7648, Acc.water: 0.1894, Acc.painting: 0.5560, Acc.sofa: 0.3904, Acc.shelf: 0.1005, Acc.house: 0.3751, Acc.sea: 0.6738, Acc.mirror: 0.1645, Acc.rug: 0.2413, Acc.field: 0.2922, Acc.armchair: 0.0911, Acc.seat: 0.2252, Acc.fence: 0.0346, Acc.desk: 0.0689, Acc.rock: 0.1609, Acc.wardrobe: 0.0153, Acc.lamp: 0.2641, Acc.bathtub: 0.1478, Acc.railing: 0.1296, Acc.cushion: 0.2340, Acc.base: 0.0000, Acc.box: 0.0000, Acc.column: 0.0186, Acc.signboard: 0.0488, Acc.chest of drawers: 0.2667, Acc.counter: 0.0313, Acc.sand: 0.1746, Acc.sink: 0.3359, Acc.skyscraper: 0.3466, Acc.fireplace: 0.5102, Acc.refrigerator: 0.0597, Acc.grandstand: 0.1359, Acc.path: 0.0259, Acc.stairs: 0.0456, Acc.runway: 0.6012, Acc.case: 0.1922, Acc.pool table: 0.7627, Acc.pillow: 0.3208, Acc.screen door: 0.0360, Acc.stairway: 0.0931, Acc.river: 0.0611, Acc.bridge: 0.0744, Acc.bookcase: 0.0462, Acc.blind: 0.0232, Acc.coffee table: 0.2612, Acc.toilet: 0.5006, Acc.flower: 0.1839, Acc.book: 0.1307, Acc.hill: 0.0261, Acc.bench: 0.1440, Acc.countertop: 0.0373, Acc.stove: 0.2777, Acc.palm: 0.0818, Acc.kitchen island: 0.0221, Acc.computer: 0.1013, Acc.swivel chair: 0.1184, Acc.boat: 0.0130, Acc.bar: 0.0261, Acc.arcade machine: 0.0286, Acc.hovel: 0.0012, Acc.bus: 0.0454, Acc.towel: 0.0016, Acc.light: 0.0517, Acc.truck: 0.0083, Acc.tower: 0.0689, Acc.chandelier: 0.4401, Acc.awning: 0.0053, Acc.streetlight: 0.0141, Acc.booth: 0.0000, Acc.television receiver: 0.1529, Acc.airplane: 0.1452, Acc.dirt track: 0.0000, Acc.apparel: 0.0247, Acc.pole: 0.0061, Acc.land: 0.0000, Acc.bannister: 0.0000, Acc.escalator: 0.0155, Acc.ottoman: 0.0000, Acc.bottle: 0.0000, Acc.buffet: 0.0000, Acc.poster: 0.0000, Acc.stage: 0.0000, Acc.van: 0.0000, Acc.ship: 0.0000, Acc.fountain: 0.0000, Acc.conveyer belt: 0.0431, Acc.canopy: 0.0000, Acc.washer: 0.0843, Acc.plaything: 0.0000, Acc.swimming pool: 0.0714, Acc.stool: 0.0000, Acc.barrel: 0.0000, Acc.basket: 0.0000, Acc.waterfall: 0.4371, Acc.tent: 0.1602, Acc.bag: 0.0000, Acc.minibike: 0.0050, Acc.cradle: 0.3037, Acc.oven: 0.0037, Acc.ball: 0.0644, Acc.food: 0.0474, Acc.step: 0.0000, Acc.tank: 0.0000, Acc.trade name: 0.0215, Acc.microwave: 0.0663, Acc.pot: 0.0007, Acc.animal: 0.0001, Acc.bicycle: 0.0000, Acc.lake: 0.0000, Acc.dishwasher: 0.0001, Acc.screen: 0.3547, Acc.blanket: 0.0000, Acc.sculpture: 0.0000, Acc.hood: 0.0353, Acc.sconce: 0.0000, Acc.vase: 0.0060, Acc.traffic light: 0.0000, Acc.tray: 0.0000, Acc.ashcan: 0.0000, Acc.fan: 0.0000, Acc.pier: 0.0000, Acc.crt screen: 0.0000, Acc.plate: 0.0000, Acc.monitor: 0.0000, Acc.bulletin board: 0.0000, Acc.shower: 0.0000, Acc.radiator: 0.0000, Acc.glass: 0.0000, Acc.clock: 0.0000, Acc.flag: 0.0000
2021-08-14 06:56:14,694 - mmseg - INFO - Iter [16050/160000]	lr: 9.102e-03, eta: 1 day, 13:55:26, time: 3.636, data_time: 2.796, memory: 4777, decode.loss_seg: 1.2059, decode.acc_seg: 49.1197, loss: 1.2059
2021-08-14 06:56:58,248 - mmseg - INFO - Iter [16100/160000]	lr: 9.099e-03, eta: 1 day, 13:54:04, time: 0.871, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2335, decode.acc_seg: 47.9467, loss: 1.2335
2021-08-14 06:57:41,619 - mmseg - INFO - Iter [16150/160000]	lr: 9.096e-03, eta: 1 day, 13:52:40, time: 0.868, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2050, decode.acc_seg: 48.6148, loss: 1.2050
2021-08-14 06:58:24,204 - mmseg - INFO - Iter [16200/160000]	lr: 9.093e-03, eta: 1 day, 13:51:10, time: 0.852, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2371, decode.acc_seg: 48.2059, loss: 1.2371
2021-08-14 06:59:06,946 - mmseg - INFO - Iter [16250/160000]	lr: 9.090e-03, eta: 1 day, 13:49:41, time: 0.854, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2200, decode.acc_seg: 48.3352, loss: 1.2200
2021-08-14 06:59:50,751 - mmseg - INFO - Iter [16300/160000]	lr: 9.088e-03, eta: 1 day, 13:48:23, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2013, decode.acc_seg: 49.6993, loss: 1.2013
2021-08-14 07:00:34,333 - mmseg - INFO - Iter [16350/160000]	lr: 9.085e-03, eta: 1 day, 13:47:02, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1792, decode.acc_seg: 49.9566, loss: 1.1792
2021-08-14 07:01:17,040 - mmseg - INFO - Iter [16400/160000]	lr: 9.082e-03, eta: 1 day, 13:45:34, time: 0.854, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1935, decode.acc_seg: 49.2414, loss: 1.1935
2021-08-14 07:02:34,242 - mmseg - INFO - Iter [16450/160000]	lr: 9.079e-03, eta: 1 day, 13:49:08, time: 1.544, data_time: 0.693, memory: 4777, decode.loss_seg: 1.1867, decode.acc_seg: 49.1926, loss: 1.1867
2021-08-14 07:03:18,028 - mmseg - INFO - Iter [16500/160000]	lr: 9.076e-03, eta: 1 day, 13:47:49, time: 0.876, data_time: 0.012, memory: 4777, decode.loss_seg: 1.2022, decode.acc_seg: 50.3643, loss: 1.2022
2021-08-14 07:04:00,774 - mmseg - INFO - Iter [16550/160000]	lr: 9.073e-03, eta: 1 day, 13:46:21, time: 0.855, data_time: 0.011, memory: 4777, decode.loss_seg: 1.2000, decode.acc_seg: 48.9183, loss: 1.2000
2021-08-14 07:04:44,365 - mmseg - INFO - Iter [16600/160000]	lr: 9.071e-03, eta: 1 day, 13:45:00, time: 0.871, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1806, decode.acc_seg: 50.4296, loss: 1.1806
2021-08-14 07:05:27,727 - mmseg - INFO - Iter [16650/160000]	lr: 9.068e-03, eta: 1 day, 13:43:38, time: 0.867, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1873, decode.acc_seg: 49.1681, loss: 1.1873
2021-08-14 07:06:11,415 - mmseg - INFO - Iter [16700/160000]	lr: 9.065e-03, eta: 1 day, 13:42:19, time: 0.874, data_time: 0.012, memory: 4777, decode.loss_seg: 1.2136, decode.acc_seg: 49.7848, loss: 1.2136
2021-08-14 07:06:55,360 - mmseg - INFO - Iter [16750/160000]	lr: 9.062e-03, eta: 1 day, 13:41:03, time: 0.879, data_time: 0.011, memory: 4777, decode.loss_seg: 1.2058, decode.acc_seg: 48.0435, loss: 1.2058
2021-08-14 07:07:38,400 - mmseg - INFO - Iter [16800/160000]	lr: 9.059e-03, eta: 1 day, 13:39:39, time: 0.861, data_time: 0.012, memory: 4777, decode.loss_seg: 1.2173, decode.acc_seg: 48.6921, loss: 1.2173
2021-08-14 07:08:21,509 - mmseg - INFO - Iter [16850/160000]	lr: 9.057e-03, eta: 1 day, 13:38:16, time: 0.863, data_time: 0.011, memory: 4777, decode.loss_seg: 1.2056, decode.acc_seg: 48.9932, loss: 1.2056
2021-08-14 07:09:04,437 - mmseg - INFO - Iter [16900/160000]	lr: 9.054e-03, eta: 1 day, 13:36:51, time: 0.858, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1807, decode.acc_seg: 49.5650, loss: 1.1807
2021-08-14 07:09:47,512 - mmseg - INFO - Iter [16950/160000]	lr: 9.051e-03, eta: 1 day, 13:35:28, time: 0.861, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1914, decode.acc_seg: 50.3144, loss: 1.1914
2021-08-14 07:10:31,320 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 07:10:31,320 - mmseg - INFO - Iter [17000/160000]	lr: 9.048e-03, eta: 1 day, 13:34:11, time: 0.876, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1744, decode.acc_seg: 50.5870, loss: 1.1744
2021-08-14 07:11:49,628 - mmseg - INFO - Iter [17050/160000]	lr: 9.045e-03, eta: 1 day, 13:37:44, time: 1.566, data_time: 0.733, memory: 4777, decode.loss_seg: 1.1936, decode.acc_seg: 49.7644, loss: 1.1936
2021-08-14 07:12:33,821 - mmseg - INFO - Iter [17100/160000]	lr: 9.043e-03, eta: 1 day, 13:36:30, time: 0.884, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1832, decode.acc_seg: 48.8336, loss: 1.1832
2021-08-14 07:13:18,152 - mmseg - INFO - Iter [17150/160000]	lr: 9.040e-03, eta: 1 day, 13:35:17, time: 0.886, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1676, decode.acc_seg: 49.5020, loss: 1.1676
2021-08-14 07:14:02,922 - mmseg - INFO - Iter [17200/160000]	lr: 9.037e-03, eta: 1 day, 13:34:08, time: 0.896, data_time: 0.012, memory: 4777, decode.loss_seg: 1.2074, decode.acc_seg: 49.2548, loss: 1.2074
2021-08-14 07:14:45,650 - mmseg - INFO - Iter [17250/160000]	lr: 9.034e-03, eta: 1 day, 13:32:43, time: 0.855, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1780, decode.acc_seg: 49.8396, loss: 1.1780
2021-08-14 07:15:29,532 - mmseg - INFO - Iter [17300/160000]	lr: 9.031e-03, eta: 1 day, 13:31:27, time: 0.877, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1609, decode.acc_seg: 49.3446, loss: 1.1609
2021-08-14 07:16:12,485 - mmseg - INFO - Iter [17350/160000]	lr: 9.028e-03, eta: 1 day, 13:30:03, time: 0.859, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1812, decode.acc_seg: 49.5198, loss: 1.1812
2021-08-14 07:16:54,404 - mmseg - INFO - Iter [17400/160000]	lr: 9.026e-03, eta: 1 day, 13:28:32, time: 0.838, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1930, decode.acc_seg: 49.0938, loss: 1.1930
2021-08-14 07:17:37,632 - mmseg - INFO - Iter [17450/160000]	lr: 9.023e-03, eta: 1 day, 13:27:11, time: 0.865, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1542, decode.acc_seg: 49.7462, loss: 1.1542
2021-08-14 07:18:21,360 - mmseg - INFO - Iter [17500/160000]	lr: 9.020e-03, eta: 1 day, 13:25:55, time: 0.875, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1883, decode.acc_seg: 49.9025, loss: 1.1883
2021-08-14 07:19:05,649 - mmseg - INFO - Iter [17550/160000]	lr: 9.017e-03, eta: 1 day, 13:24:43, time: 0.886, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1845, decode.acc_seg: 50.0968, loss: 1.1845
2021-08-14 07:19:49,240 - mmseg - INFO - Iter [17600/160000]	lr: 9.014e-03, eta: 1 day, 13:23:26, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1627, decode.acc_seg: 50.1419, loss: 1.1627
2021-08-14 07:20:32,445 - mmseg - INFO - Iter [17650/160000]	lr: 9.012e-03, eta: 1 day, 13:22:06, time: 0.864, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1926, decode.acc_seg: 49.6001, loss: 1.1926
2021-08-14 07:21:50,449 - mmseg - INFO - Iter [17700/160000]	lr: 9.009e-03, eta: 1 day, 13:25:26, time: 1.560, data_time: 0.703, memory: 4777, decode.loss_seg: 1.2190, decode.acc_seg: 49.2216, loss: 1.2190
2021-08-14 07:22:33,657 - mmseg - INFO - Iter [17750/160000]	lr: 9.006e-03, eta: 1 day, 13:24:06, time: 0.865, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1662, decode.acc_seg: 49.3837, loss: 1.1662
2021-08-14 07:23:16,815 - mmseg - INFO - Iter [17800/160000]	lr: 9.003e-03, eta: 1 day, 13:22:45, time: 0.863, data_time: 0.009, memory: 4777, decode.loss_seg: 1.1735, decode.acc_seg: 50.0961, loss: 1.1735
2021-08-14 07:23:59,725 - mmseg - INFO - Iter [17850/160000]	lr: 9.000e-03, eta: 1 day, 13:21:23, time: 0.858, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1632, decode.acc_seg: 48.5073, loss: 1.1632
2021-08-14 07:24:44,162 - mmseg - INFO - Iter [17900/160000]	lr: 8.997e-03, eta: 1 day, 13:20:13, time: 0.889, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1455, decode.acc_seg: 49.7881, loss: 1.1455
2021-08-14 07:25:27,051 - mmseg - INFO - Iter [17950/160000]	lr: 8.995e-03, eta: 1 day, 13:18:51, time: 0.858, data_time: 0.012, memory: 4777, decode.loss_seg: 1.1784, decode.acc_seg: 49.5967, loss: 1.1784
2021-08-14 07:26:10,965 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 07:26:10,966 - mmseg - INFO - Iter [18000/160000]	lr: 8.992e-03, eta: 1 day, 13:17:37, time: 0.878, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1751, decode.acc_seg: 49.4698, loss: 1.1751
2021-08-14 07:26:54,375 - mmseg - INFO - Iter [18050/160000]	lr: 8.989e-03, eta: 1 day, 13:16:19, time: 0.868, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1872, decode.acc_seg: 49.2796, loss: 1.1872
2021-08-14 07:27:37,037 - mmseg - INFO - Iter [18100/160000]	lr: 8.986e-03, eta: 1 day, 13:14:56, time: 0.854, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1771, decode.acc_seg: 50.2151, loss: 1.1771
2021-08-14 07:28:20,943 - mmseg - INFO - Iter [18150/160000]	lr: 8.983e-03, eta: 1 day, 13:13:42, time: 0.878, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1696, decode.acc_seg: 48.9685, loss: 1.1696
2021-08-14 07:29:03,750 - mmseg - INFO - Iter [18200/160000]	lr: 8.981e-03, eta: 1 day, 13:12:21, time: 0.856, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1862, decode.acc_seg: 50.0799, loss: 1.1862
2021-08-14 07:29:46,345 - mmseg - INFO - Iter [18250/160000]	lr: 8.978e-03, eta: 1 day, 13:10:57, time: 0.852, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1888, decode.acc_seg: 50.1746, loss: 1.1888
2021-08-14 07:31:03,457 - mmseg - INFO - Iter [18300/160000]	lr: 8.975e-03, eta: 1 day, 13:14:01, time: 1.541, data_time: 0.704, memory: 4777, decode.loss_seg: 1.1756, decode.acc_seg: 49.3409, loss: 1.1756
2021-08-14 07:31:47,417 - mmseg - INFO - Iter [18350/160000]	lr: 8.972e-03, eta: 1 day, 13:12:48, time: 0.880, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1767, decode.acc_seg: 48.7508, loss: 1.1767
2021-08-14 07:32:30,425 - mmseg - INFO - Iter [18400/160000]	lr: 8.969e-03, eta: 1 day, 13:11:28, time: 0.861, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1682, decode.acc_seg: 49.6972, loss: 1.1682
2021-08-14 07:33:14,812 - mmseg - INFO - Iter [18450/160000]	lr: 8.966e-03, eta: 1 day, 13:10:19, time: 0.887, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1674, decode.acc_seg: 49.4101, loss: 1.1674
2021-08-14 07:33:57,831 - mmseg - INFO - Iter [18500/160000]	lr: 8.964e-03, eta: 1 day, 13:08:59, time: 0.861, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1791, decode.acc_seg: 48.7822, loss: 1.1791
2021-08-14 07:34:42,294 - mmseg - INFO - Iter [18550/160000]	lr: 8.961e-03, eta: 1 day, 13:07:50, time: 0.889, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1789, decode.acc_seg: 49.9388, loss: 1.1789
2021-08-14 07:35:25,571 - mmseg - INFO - Iter [18600/160000]	lr: 8.958e-03, eta: 1 day, 13:06:33, time: 0.866, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1563, decode.acc_seg: 49.8571, loss: 1.1563
2021-08-14 07:36:09,289 - mmseg - INFO - Iter [18650/160000]	lr: 8.955e-03, eta: 1 day, 13:05:19, time: 0.874, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1799, decode.acc_seg: 50.0452, loss: 1.1799
2021-08-14 07:36:53,590 - mmseg - INFO - Iter [18700/160000]	lr: 8.952e-03, eta: 1 day, 13:04:10, time: 0.886, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1545, decode.acc_seg: 50.5002, loss: 1.1545
2021-08-14 07:37:36,478 - mmseg - INFO - Iter [18750/160000]	lr: 8.950e-03, eta: 1 day, 13:02:50, time: 0.858, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1778, decode.acc_seg: 50.3674, loss: 1.1778
2021-08-14 07:38:19,606 - mmseg - INFO - Iter [18800/160000]	lr: 8.947e-03, eta: 1 day, 13:01:32, time: 0.863, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1806, decode.acc_seg: 49.5244, loss: 1.1806
2021-08-14 07:39:03,272 - mmseg - INFO - Iter [18850/160000]	lr: 8.944e-03, eta: 1 day, 13:00:18, time: 0.873, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1907, decode.acc_seg: 49.3501, loss: 1.1907
2021-08-14 07:39:47,722 - mmseg - INFO - Iter [18900/160000]	lr: 8.941e-03, eta: 1 day, 12:59:10, time: 0.889, data_time: 0.011, memory: 4777, decode.loss_seg: 1.2023, decode.acc_seg: 49.3141, loss: 1.2023
2021-08-14 07:41:09,054 - mmseg - INFO - Iter [18950/160000]	lr: 8.938e-03, eta: 1 day, 13:02:37, time: 1.627, data_time: 0.728, memory: 4777, decode.loss_seg: 1.1829, decode.acc_seg: 48.7159, loss: 1.1829
2021-08-14 07:41:52,487 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 07:41:52,488 - mmseg - INFO - Iter [19000/160000]	lr: 8.935e-03, eta: 1 day, 13:01:22, time: 0.869, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1490, decode.acc_seg: 49.9695, loss: 1.1490
2021-08-14 07:42:36,034 - mmseg - INFO - Iter [19050/160000]	lr: 8.933e-03, eta: 1 day, 13:00:07, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1812, decode.acc_seg: 49.4495, loss: 1.1812
2021-08-14 07:43:20,014 - mmseg - INFO - Iter [19100/160000]	lr: 8.930e-03, eta: 1 day, 12:58:56, time: 0.880, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1567, decode.acc_seg: 50.2314, loss: 1.1567
2021-08-14 07:44:02,588 - mmseg - INFO - Iter [19150/160000]	lr: 8.927e-03, eta: 1 day, 12:57:34, time: 0.851, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1504, decode.acc_seg: 50.5311, loss: 1.1504
2021-08-14 07:44:46,400 - mmseg - INFO - Iter [19200/160000]	lr: 8.924e-03, eta: 1 day, 12:56:22, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1560, decode.acc_seg: 49.6416, loss: 1.1560
2021-08-14 07:45:29,866 - mmseg - INFO - Iter [19250/160000]	lr: 8.921e-03, eta: 1 day, 12:55:07, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.2068, decode.acc_seg: 49.6206, loss: 1.2068
2021-08-14 07:46:12,778 - mmseg - INFO - Iter [19300/160000]	lr: 8.918e-03, eta: 1 day, 12:53:48, time: 0.858, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1762, decode.acc_seg: 50.5040, loss: 1.1762
2021-08-14 07:46:56,235 - mmseg - INFO - Iter [19350/160000]	lr: 8.916e-03, eta: 1 day, 12:52:34, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1439, decode.acc_seg: 50.5934, loss: 1.1439
2021-08-14 07:47:39,540 - mmseg - INFO - Iter [19400/160000]	lr: 8.913e-03, eta: 1 day, 12:51:18, time: 0.866, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1369, decode.acc_seg: 50.1890, loss: 1.1369
2021-08-14 07:48:23,874 - mmseg - INFO - Iter [19450/160000]	lr: 8.910e-03, eta: 1 day, 12:50:11, time: 0.887, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1228, decode.acc_seg: 49.7843, loss: 1.1228
2021-08-14 07:49:07,223 - mmseg - INFO - Iter [19500/160000]	lr: 8.907e-03, eta: 1 day, 12:48:56, time: 0.867, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1481, decode.acc_seg: 50.3906, loss: 1.1481
2021-08-14 07:49:51,189 - mmseg - INFO - Iter [19550/160000]	lr: 8.904e-03, eta: 1 day, 12:47:46, time: 0.879, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1928, decode.acc_seg: 50.5657, loss: 1.1928
2021-08-14 07:51:10,452 - mmseg - INFO - Iter [19600/160000]	lr: 8.902e-03, eta: 1 day, 12:50:49, time: 1.586, data_time: 0.719, memory: 4777, decode.loss_seg: 1.1632, decode.acc_seg: 49.8110, loss: 1.1632
2021-08-14 07:51:53,881 - mmseg - INFO - Iter [19650/160000]	lr: 8.899e-03, eta: 1 day, 12:49:34, time: 0.868, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1643, decode.acc_seg: 49.6254, loss: 1.1643
2021-08-14 07:52:38,157 - mmseg - INFO - Iter [19700/160000]	lr: 8.896e-03, eta: 1 day, 12:48:26, time: 0.886, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1320, decode.acc_seg: 50.8746, loss: 1.1320
2021-08-14 07:53:21,831 - mmseg - INFO - Iter [19750/160000]	lr: 8.893e-03, eta: 1 day, 12:47:14, time: 0.874, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1675, decode.acc_seg: 49.8213, loss: 1.1675
2021-08-14 07:54:05,982 - mmseg - INFO - Iter [19800/160000]	lr: 8.890e-03, eta: 1 day, 12:46:05, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1414, decode.acc_seg: 49.8202, loss: 1.1414
2021-08-14 07:54:49,315 - mmseg - INFO - Iter [19850/160000]	lr: 8.887e-03, eta: 1 day, 12:44:50, time: 0.867, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1739, decode.acc_seg: 49.2407, loss: 1.1739
2021-08-14 07:55:34,489 - mmseg - INFO - Iter [19900/160000]	lr: 8.885e-03, eta: 1 day, 12:43:48, time: 0.903, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1817, decode.acc_seg: 49.8459, loss: 1.1817
2021-08-14 07:56:18,272 - mmseg - INFO - Iter [19950/160000]	lr: 8.882e-03, eta: 1 day, 12:42:37, time: 0.876, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1445, decode.acc_seg: 50.6436, loss: 1.1445
2021-08-14 07:57:01,743 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 07:57:01,745 - mmseg - INFO - Iter [20000/160000]	lr: 8.879e-03, eta: 1 day, 12:41:24, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1568, decode.acc_seg: 49.7963, loss: 1.1568
2021-08-14 07:57:46,186 - mmseg - INFO - Iter [20050/160000]	lr: 8.876e-03, eta: 1 day, 12:40:18, time: 0.889, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1327, decode.acc_seg: 50.9251, loss: 1.1327
2021-08-14 07:58:29,828 - mmseg - INFO - Iter [20100/160000]	lr: 8.873e-03, eta: 1 day, 12:39:06, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1665, decode.acc_seg: 50.6891, loss: 1.1665
2021-08-14 07:59:13,286 - mmseg - INFO - Iter [20150/160000]	lr: 8.871e-03, eta: 1 day, 12:37:54, time: 0.869, data_time: 0.012, memory: 4777, decode.loss_seg: 1.1508, decode.acc_seg: 50.6944, loss: 1.1508
2021-08-14 08:00:31,775 - mmseg - INFO - Iter [20200/160000]	lr: 8.868e-03, eta: 1 day, 12:40:43, time: 1.570, data_time: 0.704, memory: 4777, decode.loss_seg: 1.1608, decode.acc_seg: 50.5762, loss: 1.1608
2021-08-14 08:01:16,463 - mmseg - INFO - Iter [20250/160000]	lr: 8.865e-03, eta: 1 day, 12:39:39, time: 0.894, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1074, decode.acc_seg: 50.8048, loss: 1.1074
2021-08-14 08:01:59,389 - mmseg - INFO - Iter [20300/160000]	lr: 8.862e-03, eta: 1 day, 12:38:22, time: 0.858, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1785, decode.acc_seg: 50.3652, loss: 1.1785
2021-08-14 08:02:42,563 - mmseg - INFO - Iter [20350/160000]	lr: 8.859e-03, eta: 1 day, 12:37:07, time: 0.864, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1087, decode.acc_seg: 50.7649, loss: 1.1087
2021-08-14 08:03:25,546 - mmseg - INFO - Iter [20400/160000]	lr: 8.856e-03, eta: 1 day, 12:35:51, time: 0.860, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1650, decode.acc_seg: 49.9442, loss: 1.1650
2021-08-14 08:04:08,670 - mmseg - INFO - Iter [20450/160000]	lr: 8.854e-03, eta: 1 day, 12:34:36, time: 0.862, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1497, decode.acc_seg: 50.7910, loss: 1.1497
2021-08-14 08:04:52,896 - mmseg - INFO - Iter [20500/160000]	lr: 8.851e-03, eta: 1 day, 12:33:29, time: 0.884, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1689, decode.acc_seg: 50.5036, loss: 1.1689
2021-08-14 08:05:37,324 - mmseg - INFO - Iter [20550/160000]	lr: 8.848e-03, eta: 1 day, 12:32:23, time: 0.889, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1323, decode.acc_seg: 50.0070, loss: 1.1323
2021-08-14 08:06:21,920 - mmseg - INFO - Iter [20600/160000]	lr: 8.845e-03, eta: 1 day, 12:31:18, time: 0.892, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1518, decode.acc_seg: 50.3206, loss: 1.1518
2021-08-14 08:07:05,720 - mmseg - INFO - Iter [20650/160000]	lr: 8.842e-03, eta: 1 day, 12:30:08, time: 0.876, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1419, decode.acc_seg: 49.4677, loss: 1.1419
2021-08-14 08:07:49,845 - mmseg - INFO - Iter [20700/160000]	lr: 8.839e-03, eta: 1 day, 12:29:01, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1500, decode.acc_seg: 50.5905, loss: 1.1500
2021-08-14 08:08:33,716 - mmseg - INFO - Iter [20750/160000]	lr: 8.837e-03, eta: 1 day, 12:27:52, time: 0.877, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1616, decode.acc_seg: 49.9868, loss: 1.1616
2021-08-14 08:09:17,502 - mmseg - INFO - Iter [20800/160000]	lr: 8.834e-03, eta: 1 day, 12:26:42, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1464, decode.acc_seg: 50.2930, loss: 1.1464
2021-08-14 08:10:35,389 - mmseg - INFO - Iter [20850/160000]	lr: 8.831e-03, eta: 1 day, 12:29:20, time: 1.558, data_time: 0.694, memory: 4777, decode.loss_seg: 1.1341, decode.acc_seg: 50.9781, loss: 1.1341
2021-08-14 08:11:19,423 - mmseg - INFO - Iter [20900/160000]	lr: 8.828e-03, eta: 1 day, 12:28:12, time: 0.881, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1072, decode.acc_seg: 50.0714, loss: 1.1072
2021-08-14 08:12:02,976 - mmseg - INFO - Iter [20950/160000]	lr: 8.825e-03, eta: 1 day, 12:27:01, time: 0.871, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1020, decode.acc_seg: 51.6891, loss: 1.1020
2021-08-14 08:12:46,970 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 08:12:46,971 - mmseg - INFO - Iter [21000/160000]	lr: 8.823e-03, eta: 1 day, 12:25:52, time: 0.880, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1408, decode.acc_seg: 51.6930, loss: 1.1408
2021-08-14 08:13:30,613 - mmseg - INFO - Iter [21050/160000]	lr: 8.820e-03, eta: 1 day, 12:24:42, time: 0.873, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1458, decode.acc_seg: 49.9150, loss: 1.1458
2021-08-14 08:14:14,296 - mmseg - INFO - Iter [21100/160000]	lr: 8.817e-03, eta: 1 day, 12:23:32, time: 0.874, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1169, decode.acc_seg: 50.5826, loss: 1.1169
2021-08-14 08:14:57,395 - mmseg - INFO - Iter [21150/160000]	lr: 8.814e-03, eta: 1 day, 12:22:18, time: 0.862, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1651, decode.acc_seg: 50.1703, loss: 1.1651
2021-08-14 08:15:40,747 - mmseg - INFO - Iter [21200/160000]	lr: 8.811e-03, eta: 1 day, 12:21:06, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1419, decode.acc_seg: 51.1665, loss: 1.1419
2021-08-14 08:16:25,108 - mmseg - INFO - Iter [21250/160000]	lr: 8.808e-03, eta: 1 day, 12:20:01, time: 0.888, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1236, decode.acc_seg: 50.5376, loss: 1.1236
2021-08-14 08:17:08,707 - mmseg - INFO - Iter [21300/160000]	lr: 8.806e-03, eta: 1 day, 12:18:50, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1626, decode.acc_seg: 49.0298, loss: 1.1626
2021-08-14 08:17:53,056 - mmseg - INFO - Iter [21350/160000]	lr: 8.803e-03, eta: 1 day, 12:17:45, time: 0.887, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1814, decode.acc_seg: 49.7934, loss: 1.1814
2021-08-14 08:18:37,205 - mmseg - INFO - Iter [21400/160000]	lr: 8.800e-03, eta: 1 day, 12:16:39, time: 0.883, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1672, decode.acc_seg: 49.3407, loss: 1.1672
2021-08-14 08:19:19,634 - mmseg - INFO - Iter [21450/160000]	lr: 8.797e-03, eta: 1 day, 12:15:22, time: 0.849, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1543, decode.acc_seg: 49.6692, loss: 1.1543
2021-08-14 08:20:39,504 - mmseg - INFO - Iter [21500/160000]	lr: 8.794e-03, eta: 1 day, 12:18:06, time: 1.597, data_time: 0.716, memory: 4777, decode.loss_seg: 1.1112, decode.acc_seg: 50.6329, loss: 1.1112
2021-08-14 08:21:22,415 - mmseg - INFO - Iter [21550/160000]	lr: 8.791e-03, eta: 1 day, 12:16:51, time: 0.858, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1466, decode.acc_seg: 50.2336, loss: 1.1466
2021-08-14 08:22:06,505 - mmseg - INFO - Iter [21600/160000]	lr: 8.789e-03, eta: 1 day, 12:15:44, time: 0.881, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1030, decode.acc_seg: 51.1468, loss: 1.1030
2021-08-14 08:22:50,349 - mmseg - INFO - Iter [21650/160000]	lr: 8.786e-03, eta: 1 day, 12:14:36, time: 0.877, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1449, decode.acc_seg: 51.4233, loss: 1.1449
2021-08-14 08:23:34,500 - mmseg - INFO - Iter [21700/160000]	lr: 8.783e-03, eta: 1 day, 12:13:29, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1734, decode.acc_seg: 49.7933, loss: 1.1734
2021-08-14 08:24:18,272 - mmseg - INFO - Iter [21750/160000]	lr: 8.780e-03, eta: 1 day, 12:12:21, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1069, decode.acc_seg: 51.3366, loss: 1.1069
2021-08-14 08:25:01,864 - mmseg - INFO - Iter [21800/160000]	lr: 8.777e-03, eta: 1 day, 12:11:11, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1700, decode.acc_seg: 49.1749, loss: 1.1700
2021-08-14 08:25:44,622 - mmseg - INFO - Iter [21850/160000]	lr: 8.775e-03, eta: 1 day, 12:09:56, time: 0.855, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1421, decode.acc_seg: 50.8709, loss: 1.1421
2021-08-14 08:26:28,420 - mmseg - INFO - Iter [21900/160000]	lr: 8.772e-03, eta: 1 day, 12:08:48, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1070, decode.acc_seg: 51.7653, loss: 1.1070
2021-08-14 08:27:11,527 - mmseg - INFO - Iter [21950/160000]	lr: 8.769e-03, eta: 1 day, 12:07:36, time: 0.862, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1668, decode.acc_seg: 49.7021, loss: 1.1668
2021-08-14 08:27:54,863 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 08:27:54,863 - mmseg - INFO - Iter [22000/160000]	lr: 8.766e-03, eta: 1 day, 12:06:25, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1294, decode.acc_seg: 50.9792, loss: 1.1294
2021-08-14 08:28:37,525 - mmseg - INFO - Iter [22050/160000]	lr: 8.763e-03, eta: 1 day, 12:05:10, time: 0.853, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1762, decode.acc_seg: 51.1102, loss: 1.1762
2021-08-14 08:29:57,467 - mmseg - INFO - Iter [22100/160000]	lr: 8.760e-03, eta: 1 day, 12:07:48, time: 1.599, data_time: 0.734, memory: 4777, decode.loss_seg: 1.1439, decode.acc_seg: 49.7920, loss: 1.1439
2021-08-14 08:30:41,216 - mmseg - INFO - Iter [22150/160000]	lr: 8.758e-03, eta: 1 day, 12:06:40, time: 0.875, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1057, decode.acc_seg: 50.7035, loss: 1.1057
2021-08-14 08:31:24,596 - mmseg - INFO - Iter [22200/160000]	lr: 8.755e-03, eta: 1 day, 12:05:29, time: 0.868, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1212, decode.acc_seg: 51.7365, loss: 1.1212
2021-08-14 08:32:08,395 - mmseg - INFO - Iter [22250/160000]	lr: 8.752e-03, eta: 1 day, 12:04:21, time: 0.875, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0939, decode.acc_seg: 50.9354, loss: 1.0939
2021-08-14 08:32:53,248 - mmseg - INFO - Iter [22300/160000]	lr: 8.749e-03, eta: 1 day, 12:03:20, time: 0.897, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1268, decode.acc_seg: 50.4776, loss: 1.1268
2021-08-14 08:33:39,039 - mmseg - INFO - Iter [22350/160000]	lr: 8.746e-03, eta: 1 day, 12:02:25, time: 0.915, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0808, decode.acc_seg: 50.8580, loss: 1.0808
2021-08-14 08:34:23,282 - mmseg - INFO - Iter [22400/160000]	lr: 8.743e-03, eta: 1 day, 12:01:20, time: 0.885, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1120, decode.acc_seg: 51.2019, loss: 1.1120
2021-08-14 08:35:08,043 - mmseg - INFO - Iter [22450/160000]	lr: 8.741e-03, eta: 1 day, 12:00:18, time: 0.895, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1099, decode.acc_seg: 51.1669, loss: 1.1099
2021-08-14 08:35:52,201 - mmseg - INFO - Iter [22500/160000]	lr: 8.738e-03, eta: 1 day, 11:59:13, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1383, decode.acc_seg: 50.5288, loss: 1.1383
2021-08-14 08:36:36,679 - mmseg - INFO - Iter [22550/160000]	lr: 8.735e-03, eta: 1 day, 11:58:10, time: 0.890, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1598, decode.acc_seg: 50.3658, loss: 1.1598
2021-08-14 08:37:20,780 - mmseg - INFO - Iter [22600/160000]	lr: 8.732e-03, eta: 1 day, 11:57:05, time: 0.882, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1711, decode.acc_seg: 51.1081, loss: 1.1711
2021-08-14 08:38:04,640 - mmseg - INFO - Iter [22650/160000]	lr: 8.729e-03, eta: 1 day, 11:55:58, time: 0.877, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1274, decode.acc_seg: 51.1353, loss: 1.1274
2021-08-14 08:38:49,214 - mmseg - INFO - Iter [22700/160000]	lr: 8.726e-03, eta: 1 day, 11:54:56, time: 0.891, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1331, decode.acc_seg: 49.1659, loss: 1.1331
2021-08-14 08:40:08,978 - mmseg - INFO - Iter [22750/160000]	lr: 8.724e-03, eta: 1 day, 11:57:26, time: 1.595, data_time: 0.718, memory: 4777, decode.loss_seg: 1.1153, decode.acc_seg: 50.4362, loss: 1.1153
2021-08-14 08:40:52,887 - mmseg - INFO - Iter [22800/160000]	lr: 8.721e-03, eta: 1 day, 11:56:19, time: 0.878, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0888, decode.acc_seg: 50.4701, loss: 1.0888
2021-08-14 08:41:38,184 - mmseg - INFO - Iter [22850/160000]	lr: 8.718e-03, eta: 1 day, 11:55:21, time: 0.906, data_time: 0.009, memory: 4777, decode.loss_seg: 1.1519, decode.acc_seg: 50.1063, loss: 1.1519
2021-08-14 08:42:22,568 - mmseg - INFO - Iter [22900/160000]	lr: 8.715e-03, eta: 1 day, 11:54:17, time: 0.888, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1160, decode.acc_seg: 51.6408, loss: 1.1160
2021-08-14 08:43:06,879 - mmseg - INFO - Iter [22950/160000]	lr: 8.712e-03, eta: 1 day, 11:53:13, time: 0.886, data_time: 0.009, memory: 4777, decode.loss_seg: 1.1177, decode.acc_seg: 49.3199, loss: 1.1177
2021-08-14 08:43:50,326 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 08:43:50,326 - mmseg - INFO - Iter [23000/160000]	lr: 8.710e-03, eta: 1 day, 11:52:04, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1305, decode.acc_seg: 50.5727, loss: 1.1305
2021-08-14 08:44:34,707 - mmseg - INFO - Iter [23050/160000]	lr: 8.707e-03, eta: 1 day, 11:51:00, time: 0.887, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1096, decode.acc_seg: 52.6171, loss: 1.1096
2021-08-14 08:45:19,596 - mmseg - INFO - Iter [23100/160000]	lr: 8.704e-03, eta: 1 day, 11:50:00, time: 0.898, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1020, decode.acc_seg: 50.5040, loss: 1.1020
2021-08-14 08:46:03,749 - mmseg - INFO - Iter [23150/160000]	lr: 8.701e-03, eta: 1 day, 11:48:55, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1108, decode.acc_seg: 50.9951, loss: 1.1108
2021-08-14 08:46:48,135 - mmseg - INFO - Iter [23200/160000]	lr: 8.698e-03, eta: 1 day, 11:47:52, time: 0.888, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1404, decode.acc_seg: 50.0877, loss: 1.1404
2021-08-14 08:47:31,586 - mmseg - INFO - Iter [23250/160000]	lr: 8.695e-03, eta: 1 day, 11:46:44, time: 0.870, data_time: 0.009, memory: 4777, decode.loss_seg: 1.1367, decode.acc_seg: 50.1941, loss: 1.1367
2021-08-14 08:48:15,163 - mmseg - INFO - Iter [23300/160000]	lr: 8.693e-03, eta: 1 day, 11:45:36, time: 0.871, data_time: 0.009, memory: 4777, decode.loss_seg: 1.1531, decode.acc_seg: 50.5190, loss: 1.1531
2021-08-14 08:49:33,793 - mmseg - INFO - Iter [23350/160000]	lr: 8.690e-03, eta: 1 day, 11:47:54, time: 1.573, data_time: 0.725, memory: 4777, decode.loss_seg: 1.1479, decode.acc_seg: 50.2916, loss: 1.1479
2021-08-14 08:50:18,038 - mmseg - INFO - Iter [23400/160000]	lr: 8.687e-03, eta: 1 day, 11:46:49, time: 0.884, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1300, decode.acc_seg: 50.9461, loss: 1.1300
2021-08-14 08:51:02,889 - mmseg - INFO - Iter [23450/160000]	lr: 8.684e-03, eta: 1 day, 11:45:49, time: 0.897, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1595, decode.acc_seg: 50.9558, loss: 1.1595
2021-08-14 08:51:46,473 - mmseg - INFO - Iter [23500/160000]	lr: 8.681e-03, eta: 1 day, 11:44:41, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1253, decode.acc_seg: 51.4844, loss: 1.1253
2021-08-14 08:52:30,118 - mmseg - INFO - Iter [23550/160000]	lr: 8.678e-03, eta: 1 day, 11:43:34, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0924, decode.acc_seg: 50.0275, loss: 1.0924
2021-08-14 08:53:14,841 - mmseg - INFO - Iter [23600/160000]	lr: 8.676e-03, eta: 1 day, 11:42:32, time: 0.894, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1333, decode.acc_seg: 50.7173, loss: 1.1333
2021-08-14 08:53:57,483 - mmseg - INFO - Iter [23650/160000]	lr: 8.673e-03, eta: 1 day, 11:41:20, time: 0.853, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1291, decode.acc_seg: 49.9639, loss: 1.1291
2021-08-14 08:54:40,792 - mmseg - INFO - Iter [23700/160000]	lr: 8.670e-03, eta: 1 day, 11:40:11, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1002, decode.acc_seg: 51.2862, loss: 1.1002
2021-08-14 08:55:23,290 - mmseg - INFO - Iter [23750/160000]	lr: 8.667e-03, eta: 1 day, 11:38:57, time: 0.850, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0868, decode.acc_seg: 51.1823, loss: 1.0868
2021-08-14 08:56:06,683 - mmseg - INFO - Iter [23800/160000]	lr: 8.664e-03, eta: 1 day, 11:37:49, time: 0.868, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1566, decode.acc_seg: 50.2588, loss: 1.1566
2021-08-14 08:56:49,925 - mmseg - INFO - Iter [23850/160000]	lr: 8.661e-03, eta: 1 day, 11:36:40, time: 0.865, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1532, decode.acc_seg: 51.0617, loss: 1.1532
2021-08-14 08:57:32,778 - mmseg - INFO - Iter [23900/160000]	lr: 8.659e-03, eta: 1 day, 11:35:29, time: 0.857, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1362, decode.acc_seg: 50.4755, loss: 1.1362
2021-08-14 08:58:16,016 - mmseg - INFO - Iter [23950/160000]	lr: 8.656e-03, eta: 1 day, 11:34:20, time: 0.865, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1514, decode.acc_seg: 50.7965, loss: 1.1514
2021-08-14 08:59:35,179 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 08:59:35,183 - mmseg - INFO - Iter [24000/160000]	lr: 8.653e-03, eta: 1 day, 11:36:35, time: 1.584, data_time: 0.744, memory: 4777, decode.loss_seg: 1.1113, decode.acc_seg: 51.1866, loss: 1.1113
2021-08-14 09:00:18,488 - mmseg - INFO - Iter [24050/160000]	lr: 8.650e-03, eta: 1 day, 11:35:26, time: 0.866, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1074, decode.acc_seg: 51.1524, loss: 1.1074
2021-08-14 09:01:02,610 - mmseg - INFO - Iter [24100/160000]	lr: 8.647e-03, eta: 1 day, 11:34:22, time: 0.882, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1127, decode.acc_seg: 50.3703, loss: 1.1127
2021-08-14 09:01:46,567 - mmseg - INFO - Iter [24150/160000]	lr: 8.644e-03, eta: 1 day, 11:33:17, time: 0.879, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1021, decode.acc_seg: 51.1877, loss: 1.1021
2021-08-14 09:02:29,890 - mmseg - INFO - Iter [24200/160000]	lr: 8.642e-03, eta: 1 day, 11:32:08, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1140, decode.acc_seg: 51.6254, loss: 1.1140
2021-08-14 09:03:13,873 - mmseg - INFO - Iter [24250/160000]	lr: 8.639e-03, eta: 1 day, 11:31:04, time: 0.880, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1081, decode.acc_seg: 50.9986, loss: 1.1081
2021-08-14 09:03:57,872 - mmseg - INFO - Iter [24300/160000]	lr: 8.636e-03, eta: 1 day, 11:30:00, time: 0.880, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1165, decode.acc_seg: 49.9132, loss: 1.1165
2021-08-14 09:04:42,328 - mmseg - INFO - Iter [24350/160000]	lr: 8.633e-03, eta: 1 day, 11:28:58, time: 0.889, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1290, decode.acc_seg: 50.8722, loss: 1.1290
2021-08-14 09:05:25,602 - mmseg - INFO - Iter [24400/160000]	lr: 8.630e-03, eta: 1 day, 11:27:49, time: 0.866, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0984, decode.acc_seg: 51.3322, loss: 1.0984
2021-08-14 09:06:08,471 - mmseg - INFO - Iter [24450/160000]	lr: 8.627e-03, eta: 1 day, 11:26:39, time: 0.857, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1601, decode.acc_seg: 49.8774, loss: 1.1601
2021-08-14 09:06:51,813 - mmseg - INFO - Iter [24500/160000]	lr: 8.625e-03, eta: 1 day, 11:25:32, time: 0.867, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1206, decode.acc_seg: 50.9713, loss: 1.1206
2021-08-14 09:07:35,129 - mmseg - INFO - Iter [24550/160000]	lr: 8.622e-03, eta: 1 day, 11:24:24, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1373, decode.acc_seg: 51.0850, loss: 1.1373
2021-08-14 09:08:18,714 - mmseg - INFO - Iter [24600/160000]	lr: 8.619e-03, eta: 1 day, 11:23:18, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1570, decode.acc_seg: 50.1250, loss: 1.1570
2021-08-14 09:09:37,054 - mmseg - INFO - Iter [24650/160000]	lr: 8.616e-03, eta: 1 day, 11:25:22, time: 1.567, data_time: 0.724, memory: 4777, decode.loss_seg: 1.1309, decode.acc_seg: 51.2543, loss: 1.1309
2021-08-14 09:10:21,531 - mmseg - INFO - Iter [24700/160000]	lr: 8.613e-03, eta: 1 day, 11:24:21, time: 0.889, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1016, decode.acc_seg: 50.5430, loss: 1.1016
2021-08-14 09:11:05,718 - mmseg - INFO - Iter [24750/160000]	lr: 8.610e-03, eta: 1 day, 11:23:18, time: 0.884, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0836, decode.acc_seg: 51.6637, loss: 1.0836
2021-08-14 09:11:50,302 - mmseg - INFO - Iter [24800/160000]	lr: 8.608e-03, eta: 1 day, 11:22:17, time: 0.892, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0948, decode.acc_seg: 51.4861, loss: 1.0948
2021-08-14 09:12:34,509 - mmseg - INFO - Iter [24850/160000]	lr: 8.605e-03, eta: 1 day, 11:21:14, time: 0.884, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0995, decode.acc_seg: 50.9655, loss: 1.0995
2021-08-14 09:13:18,808 - mmseg - INFO - Iter [24900/160000]	lr: 8.602e-03, eta: 1 day, 11:20:12, time: 0.886, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1169, decode.acc_seg: 50.4290, loss: 1.1169
2021-08-14 09:14:02,679 - mmseg - INFO - Iter [24950/160000]	lr: 8.599e-03, eta: 1 day, 11:19:07, time: 0.877, data_time: 0.009, memory: 4777, decode.loss_seg: 1.1042, decode.acc_seg: 51.9322, loss: 1.1042
2021-08-14 09:14:47,243 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 09:14:47,244 - mmseg - INFO - Iter [25000/160000]	lr: 8.596e-03, eta: 1 day, 11:18:07, time: 0.891, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1451, decode.acc_seg: 50.8791, loss: 1.1451
2021-08-14 09:15:30,784 - mmseg - INFO - Iter [25050/160000]	lr: 8.593e-03, eta: 1 day, 11:17:01, time: 0.871, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1385, decode.acc_seg: 50.1454, loss: 1.1385
2021-08-14 09:16:14,504 - mmseg - INFO - Iter [25100/160000]	lr: 8.591e-03, eta: 1 day, 11:15:56, time: 0.875, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1197, decode.acc_seg: 51.7387, loss: 1.1197
2021-08-14 09:16:58,482 - mmseg - INFO - Iter [25150/160000]	lr: 8.588e-03, eta: 1 day, 11:14:52, time: 0.879, data_time: 0.009, memory: 4777, decode.loss_seg: 1.0979, decode.acc_seg: 50.8383, loss: 1.0979
2021-08-14 09:17:42,635 - mmseg - INFO - Iter [25200/160000]	lr: 8.585e-03, eta: 1 day, 11:13:50, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1327, decode.acc_seg: 50.5445, loss: 1.1327
2021-08-14 09:19:02,730 - mmseg - INFO - Iter [25250/160000]	lr: 8.582e-03, eta: 1 day, 11:15:59, time: 1.602, data_time: 0.742, memory: 4777, decode.loss_seg: 1.1195, decode.acc_seg: 51.3950, loss: 1.1195
2021-08-14 09:19:46,713 - mmseg - INFO - Iter [25300/160000]	lr: 8.579e-03, eta: 1 day, 11:14:55, time: 0.879, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0764, decode.acc_seg: 51.8144, loss: 1.0764
2021-08-14 09:20:30,109 - mmseg - INFO - Iter [25350/160000]	lr: 8.576e-03, eta: 1 day, 11:13:48, time: 0.868, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0938, decode.acc_seg: 51.2407, loss: 1.0938
2021-08-14 09:21:12,534 - mmseg - INFO - Iter [25400/160000]	lr: 8.574e-03, eta: 1 day, 11:12:37, time: 0.849, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1038, decode.acc_seg: 51.4618, loss: 1.1038
2021-08-14 09:21:56,526 - mmseg - INFO - Iter [25450/160000]	lr: 8.571e-03, eta: 1 day, 11:11:33, time: 0.880, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1355, decode.acc_seg: 51.1661, loss: 1.1355
2021-08-14 09:22:39,791 - mmseg - INFO - Iter [25500/160000]	lr: 8.568e-03, eta: 1 day, 11:10:26, time: 0.865, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1344, decode.acc_seg: 51.7107, loss: 1.1344
2021-08-14 09:23:23,212 - mmseg - INFO - Iter [25550/160000]	lr: 8.565e-03, eta: 1 day, 11:09:20, time: 0.868, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1076, decode.acc_seg: 50.3680, loss: 1.1076
2021-08-14 09:24:06,733 - mmseg - INFO - Iter [25600/160000]	lr: 8.562e-03, eta: 1 day, 11:08:14, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1637, decode.acc_seg: 49.3500, loss: 1.1637
2021-08-14 09:24:50,229 - mmseg - INFO - Iter [25650/160000]	lr: 8.559e-03, eta: 1 day, 11:07:08, time: 0.870, data_time: 0.009, memory: 4777, decode.loss_seg: 1.0911, decode.acc_seg: 51.8625, loss: 1.0911
2021-08-14 09:25:33,873 - mmseg - INFO - Iter [25700/160000]	lr: 8.557e-03, eta: 1 day, 11:06:03, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1108, decode.acc_seg: 50.4344, loss: 1.1108
2021-08-14 09:26:17,478 - mmseg - INFO - Iter [25750/160000]	lr: 8.554e-03, eta: 1 day, 11:04:58, time: 0.872, data_time: 0.009, memory: 4777, decode.loss_seg: 1.1333, decode.acc_seg: 50.3347, loss: 1.1333
2021-08-14 09:27:01,565 - mmseg - INFO - Iter [25800/160000]	lr: 8.551e-03, eta: 1 day, 11:03:56, time: 0.882, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0977, decode.acc_seg: 51.0674, loss: 1.0977
2021-08-14 09:27:44,655 - mmseg - INFO - Iter [25850/160000]	lr: 8.548e-03, eta: 1 day, 11:02:48, time: 0.862, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1180, decode.acc_seg: 51.6261, loss: 1.1180
2021-08-14 09:29:03,269 - mmseg - INFO - Iter [25900/160000]	lr: 8.545e-03, eta: 1 day, 11:04:45, time: 1.572, data_time: 0.700, memory: 4777, decode.loss_seg: 1.0866, decode.acc_seg: 51.6615, loss: 1.0866
2021-08-14 09:29:47,548 - mmseg - INFO - Iter [25950/160000]	lr: 8.542e-03, eta: 1 day, 11:03:43, time: 0.886, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0747, decode.acc_seg: 51.3311, loss: 1.0747
2021-08-14 09:30:31,020 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 09:30:31,021 - mmseg - INFO - Iter [26000/160000]	lr: 8.540e-03, eta: 1 day, 11:02:38, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0671, decode.acc_seg: 51.5720, loss: 1.0671
2021-08-14 09:31:15,327 - mmseg - INFO - Iter [26050/160000]	lr: 8.537e-03, eta: 1 day, 11:01:37, time: 0.887, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1001, decode.acc_seg: 51.2306, loss: 1.1001
2021-08-14 09:31:58,981 - mmseg - INFO - Iter [26100/160000]	lr: 8.534e-03, eta: 1 day, 11:00:32, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0862, decode.acc_seg: 51.5935, loss: 1.0862
2021-08-14 09:32:42,769 - mmseg - INFO - Iter [26150/160000]	lr: 8.531e-03, eta: 1 day, 10:59:28, time: 0.875, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1089, decode.acc_seg: 50.6261, loss: 1.1089
2021-08-14 09:33:25,996 - mmseg - INFO - Iter [26200/160000]	lr: 8.528e-03, eta: 1 day, 10:58:22, time: 0.865, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1302, decode.acc_seg: 51.1105, loss: 1.1302
2021-08-14 09:34:10,378 - mmseg - INFO - Iter [26250/160000]	lr: 8.525e-03, eta: 1 day, 10:57:21, time: 0.887, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0956, decode.acc_seg: 50.5500, loss: 1.0956
2021-08-14 09:34:53,623 - mmseg - INFO - Iter [26300/160000]	lr: 8.523e-03, eta: 1 day, 10:56:14, time: 0.864, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1232, decode.acc_seg: 49.9752, loss: 1.1232
2021-08-14 09:35:36,303 - mmseg - INFO - Iter [26350/160000]	lr: 8.520e-03, eta: 1 day, 10:55:05, time: 0.854, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1428, decode.acc_seg: 50.9836, loss: 1.1428
2021-08-14 09:36:20,145 - mmseg - INFO - Iter [26400/160000]	lr: 8.517e-03, eta: 1 day, 10:54:02, time: 0.877, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1109, decode.acc_seg: 52.3472, loss: 1.1109
2021-08-14 09:37:02,743 - mmseg - INFO - Iter [26450/160000]	lr: 8.514e-03, eta: 1 day, 10:52:53, time: 0.852, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1065, decode.acc_seg: 51.1013, loss: 1.1065
2021-08-14 09:37:46,713 - mmseg - INFO - Iter [26500/160000]	lr: 8.511e-03, eta: 1 day, 10:51:50, time: 0.879, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1000, decode.acc_seg: 51.3698, loss: 1.1000
2021-08-14 09:39:06,589 - mmseg - INFO - Iter [26550/160000]	lr: 8.508e-03, eta: 1 day, 10:53:49, time: 1.598, data_time: 0.723, memory: 4777, decode.loss_seg: 1.0495, decode.acc_seg: 52.1011, loss: 1.0495
2021-08-14 09:39:50,606 - mmseg - INFO - Iter [26600/160000]	lr: 8.506e-03, eta: 1 day, 10:52:46, time: 0.880, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1234, decode.acc_seg: 50.0234, loss: 1.1234
2021-08-14 09:40:33,490 - mmseg - INFO - Iter [26650/160000]	lr: 8.503e-03, eta: 1 day, 10:51:38, time: 0.858, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1102, decode.acc_seg: 50.6076, loss: 1.1102
2021-08-14 09:41:16,836 - mmseg - INFO - Iter [26700/160000]	lr: 8.500e-03, eta: 1 day, 10:50:33, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1072, decode.acc_seg: 50.5621, loss: 1.1072
2021-08-14 09:41:59,821 - mmseg - INFO - Iter [26750/160000]	lr: 8.497e-03, eta: 1 day, 10:49:25, time: 0.860, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0663, decode.acc_seg: 51.9827, loss: 1.0663
2021-08-14 09:42:42,465 - mmseg - INFO - Iter [26800/160000]	lr: 8.494e-03, eta: 1 day, 10:48:16, time: 0.853, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1006, decode.acc_seg: 50.8212, loss: 1.1006
2021-08-14 09:43:25,394 - mmseg - INFO - Iter [26850/160000]	lr: 8.491e-03, eta: 1 day, 10:47:09, time: 0.859, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1143, decode.acc_seg: 50.4695, loss: 1.1143
2021-08-14 09:44:09,670 - mmseg - INFO - Iter [26900/160000]	lr: 8.489e-03, eta: 1 day, 10:46:08, time: 0.885, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0962, decode.acc_seg: 51.3414, loss: 1.0962
2021-08-14 09:44:52,903 - mmseg - INFO - Iter [26950/160000]	lr: 8.486e-03, eta: 1 day, 10:45:03, time: 0.865, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0809, decode.acc_seg: 51.7845, loss: 1.0809
2021-08-14 09:45:37,360 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 09:45:37,361 - mmseg - INFO - Iter [27000/160000]	lr: 8.483e-03, eta: 1 day, 10:44:03, time: 0.889, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1156, decode.acc_seg: 51.2633, loss: 1.1156
2021-08-14 09:46:20,470 - mmseg - INFO - Iter [27050/160000]	lr: 8.480e-03, eta: 1 day, 10:42:57, time: 0.862, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0973, decode.acc_seg: 51.1431, loss: 1.0973
2021-08-14 09:47:03,332 - mmseg - INFO - Iter [27100/160000]	lr: 8.477e-03, eta: 1 day, 10:41:50, time: 0.858, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1238, decode.acc_seg: 51.2687, loss: 1.1238
2021-08-14 09:48:22,715 - mmseg - INFO - Iter [27150/160000]	lr: 8.474e-03, eta: 1 day, 10:43:41, time: 1.588, data_time: 0.742, memory: 4777, decode.loss_seg: 1.1057, decode.acc_seg: 51.7908, loss: 1.1057
2021-08-14 09:49:06,585 - mmseg - INFO - Iter [27200/160000]	lr: 8.472e-03, eta: 1 day, 10:42:39, time: 0.877, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1381, decode.acc_seg: 49.6117, loss: 1.1381
2021-08-14 09:49:49,640 - mmseg - INFO - Iter [27250/160000]	lr: 8.469e-03, eta: 1 day, 10:41:32, time: 0.861, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0850, decode.acc_seg: 51.9718, loss: 1.0850
2021-08-14 09:50:33,712 - mmseg - INFO - Iter [27300/160000]	lr: 8.466e-03, eta: 1 day, 10:40:31, time: 0.881, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0833, decode.acc_seg: 52.7072, loss: 1.0833
2021-08-14 09:51:18,076 - mmseg - INFO - Iter [27350/160000]	lr: 8.463e-03, eta: 1 day, 10:39:31, time: 0.887, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0721, decode.acc_seg: 51.5994, loss: 1.0721
2021-08-14 09:52:02,032 - mmseg - INFO - Iter [27400/160000]	lr: 8.460e-03, eta: 1 day, 10:38:29, time: 0.879, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1392, decode.acc_seg: 50.2244, loss: 1.1392
2021-08-14 09:52:47,111 - mmseg - INFO - Iter [27450/160000]	lr: 8.457e-03, eta: 1 day, 10:37:32, time: 0.901, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1110, decode.acc_seg: 51.4183, loss: 1.1110
2021-08-14 09:53:30,794 - mmseg - INFO - Iter [27500/160000]	lr: 8.455e-03, eta: 1 day, 10:36:29, time: 0.874, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0774, decode.acc_seg: 52.4302, loss: 1.0774
2021-08-14 09:54:14,978 - mmseg - INFO - Iter [27550/160000]	lr: 8.452e-03, eta: 1 day, 10:35:29, time: 0.884, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1251, decode.acc_seg: 50.6349, loss: 1.1251
2021-08-14 09:54:59,983 - mmseg - INFO - Iter [27600/160000]	lr: 8.449e-03, eta: 1 day, 10:34:32, time: 0.900, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1047, decode.acc_seg: 51.4961, loss: 1.1047
2021-08-14 09:55:44,790 - mmseg - INFO - Iter [27650/160000]	lr: 8.446e-03, eta: 1 day, 10:33:34, time: 0.897, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0951, decode.acc_seg: 51.5559, loss: 1.0951
2021-08-14 09:56:29,286 - mmseg - INFO - Iter [27700/160000]	lr: 8.443e-03, eta: 1 day, 10:32:35, time: 0.890, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0695, decode.acc_seg: 52.5707, loss: 1.0695
2021-08-14 09:57:13,067 - mmseg - INFO - Iter [27750/160000]	lr: 8.440e-03, eta: 1 day, 10:31:33, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1174, decode.acc_seg: 50.6169, loss: 1.1174
2021-08-14 09:58:31,797 - mmseg - INFO - Iter [27800/160000]	lr: 8.438e-03, eta: 1 day, 10:33:17, time: 1.574, data_time: 0.719, memory: 4777, decode.loss_seg: 1.1209, decode.acc_seg: 51.0370, loss: 1.1209
2021-08-14 09:59:15,839 - mmseg - INFO - Iter [27850/160000]	lr: 8.435e-03, eta: 1 day, 10:32:16, time: 0.881, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0544, decode.acc_seg: 52.4013, loss: 1.0544
2021-08-14 09:59:59,966 - mmseg - INFO - Iter [27900/160000]	lr: 8.432e-03, eta: 1 day, 10:31:15, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0793, decode.acc_seg: 51.5343, loss: 1.0793
2021-08-14 10:00:43,103 - mmseg - INFO - Iter [27950/160000]	lr: 8.429e-03, eta: 1 day, 10:30:09, time: 0.862, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0935, decode.acc_seg: 51.4617, loss: 1.0935
2021-08-14 10:01:26,753 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 10:01:26,754 - mmseg - INFO - Iter [28000/160000]	lr: 8.426e-03, eta: 1 day, 10:29:06, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0705, decode.acc_seg: 52.0380, loss: 1.0705
2021-08-14 10:02:10,240 - mmseg - INFO - Iter [28050/160000]	lr: 8.423e-03, eta: 1 day, 10:28:03, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0885, decode.acc_seg: 51.9951, loss: 1.0885
2021-08-14 10:02:53,714 - mmseg - INFO - Iter [28100/160000]	lr: 8.421e-03, eta: 1 day, 10:26:59, time: 0.869, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0879, decode.acc_seg: 51.4019, loss: 1.0879
2021-08-14 10:03:37,026 - mmseg - INFO - Iter [28150/160000]	lr: 8.418e-03, eta: 1 day, 10:25:55, time: 0.866, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0747, decode.acc_seg: 52.0055, loss: 1.0747
2021-08-14 10:04:20,967 - mmseg - INFO - Iter [28200/160000]	lr: 8.415e-03, eta: 1 day, 10:24:53, time: 0.879, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0815, decode.acc_seg: 52.2012, loss: 1.0815
2021-08-14 10:05:04,682 - mmseg - INFO - Iter [28250/160000]	lr: 8.412e-03, eta: 1 day, 10:23:51, time: 0.874, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1438, decode.acc_seg: 51.3337, loss: 1.1438
2021-08-14 10:05:47,617 - mmseg - INFO - Iter [28300/160000]	lr: 8.409e-03, eta: 1 day, 10:22:45, time: 0.859, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0539, decode.acc_seg: 51.9771, loss: 1.0539
2021-08-14 10:06:31,900 - mmseg - INFO - Iter [28350/160000]	lr: 8.406e-03, eta: 1 day, 10:21:46, time: 0.885, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1235, decode.acc_seg: 51.6870, loss: 1.1235
2021-08-14 10:07:49,168 - mmseg - INFO - Iter [28400/160000]	lr: 8.403e-03, eta: 1 day, 10:23:19, time: 1.546, data_time: 0.698, memory: 4777, decode.loss_seg: 1.1088, decode.acc_seg: 51.8606, loss: 1.1088
2021-08-14 10:08:32,814 - mmseg - INFO - Iter [28450/160000]	lr: 8.401e-03, eta: 1 day, 10:22:16, time: 0.873, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0997, decode.acc_seg: 51.2405, loss: 1.0997
2021-08-14 10:09:16,716 - mmseg - INFO - Iter [28500/160000]	lr: 8.398e-03, eta: 1 day, 10:21:15, time: 0.878, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0726, decode.acc_seg: 51.6932, loss: 1.0726
2021-08-14 10:10:00,054 - mmseg - INFO - Iter [28550/160000]	lr: 8.395e-03, eta: 1 day, 10:20:11, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0965, decode.acc_seg: 50.8391, loss: 1.0965
2021-08-14 10:10:43,825 - mmseg - INFO - Iter [28600/160000]	lr: 8.392e-03, eta: 1 day, 10:19:09, time: 0.875, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0490, decode.acc_seg: 52.0022, loss: 1.0490
2021-08-14 10:11:27,517 - mmseg - INFO - Iter [28650/160000]	lr: 8.389e-03, eta: 1 day, 10:18:07, time: 0.874, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0778, decode.acc_seg: 52.2300, loss: 1.0778
2021-08-14 10:12:10,277 - mmseg - INFO - Iter [28700/160000]	lr: 8.386e-03, eta: 1 day, 10:17:00, time: 0.855, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1095, decode.acc_seg: 51.1524, loss: 1.1095
2021-08-14 10:12:53,484 - mmseg - INFO - Iter [28750/160000]	lr: 8.384e-03, eta: 1 day, 10:15:56, time: 0.864, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0484, decode.acc_seg: 52.1196, loss: 1.0484
2021-08-14 10:13:35,920 - mmseg - INFO - Iter [28800/160000]	lr: 8.381e-03, eta: 1 day, 10:14:48, time: 0.849, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0550, decode.acc_seg: 50.9717, loss: 1.0550
2021-08-14 10:14:18,404 - mmseg - INFO - Iter [28850/160000]	lr: 8.378e-03, eta: 1 day, 10:13:41, time: 0.849, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0831, decode.acc_seg: 52.2454, loss: 1.0831
2021-08-14 10:15:01,071 - mmseg - INFO - Iter [28900/160000]	lr: 8.375e-03, eta: 1 day, 10:12:34, time: 0.853, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1080, decode.acc_seg: 50.8016, loss: 1.1080
2021-08-14 10:15:44,130 - mmseg - INFO - Iter [28950/160000]	lr: 8.372e-03, eta: 1 day, 10:11:29, time: 0.861, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0782, decode.acc_seg: 51.7605, loss: 1.0782
2021-08-14 10:16:27,753 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 10:16:27,755 - mmseg - INFO - Iter [29000/160000]	lr: 8.369e-03, eta: 1 day, 10:10:27, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0869, decode.acc_seg: 51.1518, loss: 1.0869
2021-08-14 10:17:46,689 - mmseg - INFO - Iter [29050/160000]	lr: 8.367e-03, eta: 1 day, 10:12:05, time: 1.578, data_time: 0.729, memory: 4777, decode.loss_seg: 1.1116, decode.acc_seg: 51.3196, loss: 1.1116
2021-08-14 10:18:29,758 - mmseg - INFO - Iter [29100/160000]	lr: 8.364e-03, eta: 1 day, 10:11:00, time: 0.861, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0641, decode.acc_seg: 51.1410, loss: 1.0641
2021-08-14 10:19:13,181 - mmseg - INFO - Iter [29150/160000]	lr: 8.361e-03, eta: 1 day, 10:09:57, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0682, decode.acc_seg: 52.3597, loss: 1.0682
2021-08-14 10:19:55,907 - mmseg - INFO - Iter [29200/160000]	lr: 8.358e-03, eta: 1 day, 10:08:51, time: 0.855, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0978, decode.acc_seg: 51.4974, loss: 1.0978
2021-08-14 10:20:39,933 - mmseg - INFO - Iter [29250/160000]	lr: 8.355e-03, eta: 1 day, 10:07:50, time: 0.881, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0583, decode.acc_seg: 51.8058, loss: 1.0583
2021-08-14 10:21:23,240 - mmseg - INFO - Iter [29300/160000]	lr: 8.352e-03, eta: 1 day, 10:06:47, time: 0.866, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0514, decode.acc_seg: 52.1272, loss: 1.0514
2021-08-14 10:22:06,334 - mmseg - INFO - Iter [29350/160000]	lr: 8.350e-03, eta: 1 day, 10:05:43, time: 0.862, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0805, decode.acc_seg: 51.6533, loss: 1.0805
2021-08-14 10:22:50,413 - mmseg - INFO - Iter [29400/160000]	lr: 8.347e-03, eta: 1 day, 10:04:43, time: 0.882, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0880, decode.acc_seg: 51.7832, loss: 1.0880
2021-08-14 10:23:33,204 - mmseg - INFO - Iter [29450/160000]	lr: 8.344e-03, eta: 1 day, 10:03:37, time: 0.856, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1028, decode.acc_seg: 51.2958, loss: 1.1028
2021-08-14 10:24:16,436 - mmseg - INFO - Iter [29500/160000]	lr: 8.341e-03, eta: 1 day, 10:02:34, time: 0.865, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1027, decode.acc_seg: 51.8100, loss: 1.1027
2021-08-14 10:24:59,746 - mmseg - INFO - Iter [29550/160000]	lr: 8.338e-03, eta: 1 day, 10:01:31, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1041, decode.acc_seg: 51.7514, loss: 1.1041
2021-08-14 10:25:43,584 - mmseg - INFO - Iter [29600/160000]	lr: 8.335e-03, eta: 1 day, 10:00:30, time: 0.877, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1018, decode.acc_seg: 51.0544, loss: 1.1018
2021-08-14 10:26:27,455 - mmseg - INFO - Iter [29650/160000]	lr: 8.332e-03, eta: 1 day, 9:59:30, time: 0.878, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0529, decode.acc_seg: 51.9565, loss: 1.0529
2021-08-14 10:27:46,651 - mmseg - INFO - Iter [29700/160000]	lr: 8.330e-03, eta: 1 day, 10:01:04, time: 1.584, data_time: 0.729, memory: 4777, decode.loss_seg: 1.0329, decode.acc_seg: 51.3784, loss: 1.0329
2021-08-14 10:28:30,082 - mmseg - INFO - Iter [29750/160000]	lr: 8.327e-03, eta: 1 day, 10:00:02, time: 0.869, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0524, decode.acc_seg: 52.4876, loss: 1.0524
2021-08-14 10:29:12,445 - mmseg - INFO - Iter [29800/160000]	lr: 8.324e-03, eta: 1 day, 9:58:54, time: 0.847, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0721, decode.acc_seg: 52.1925, loss: 1.0721
2021-08-14 10:29:55,645 - mmseg - INFO - Iter [29850/160000]	lr: 8.321e-03, eta: 1 day, 9:57:51, time: 0.864, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1286, decode.acc_seg: 51.5446, loss: 1.1286
2021-08-14 10:30:39,029 - mmseg - INFO - Iter [29900/160000]	lr: 8.318e-03, eta: 1 day, 9:56:48, time: 0.867, data_time: 0.009, memory: 4777, decode.loss_seg: 1.0752, decode.acc_seg: 51.7373, loss: 1.0752
2021-08-14 10:31:22,738 - mmseg - INFO - Iter [29950/160000]	lr: 8.315e-03, eta: 1 day, 9:55:47, time: 0.875, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0569, decode.acc_seg: 52.3215, loss: 1.0569
2021-08-14 10:32:05,948 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 10:32:05,948 - mmseg - INFO - Iter [30000/160000]	lr: 8.313e-03, eta: 1 day, 9:54:44, time: 0.864, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0714, decode.acc_seg: 51.5216, loss: 1.0714
2021-08-14 10:32:49,830 - mmseg - INFO - Iter [30050/160000]	lr: 8.310e-03, eta: 1 day, 9:53:44, time: 0.878, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0746, decode.acc_seg: 52.1254, loss: 1.0746
2021-08-14 10:33:33,163 - mmseg - INFO - Iter [30100/160000]	lr: 8.307e-03, eta: 1 day, 9:52:41, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0736, decode.acc_seg: 51.5578, loss: 1.0736
2021-08-14 10:34:16,764 - mmseg - INFO - Iter [30150/160000]	lr: 8.304e-03, eta: 1 day, 9:51:40, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0785, decode.acc_seg: 52.5632, loss: 1.0785
2021-08-14 10:35:00,564 - mmseg - INFO - Iter [30200/160000]	lr: 8.301e-03, eta: 1 day, 9:50:39, time: 0.876, data_time: 0.009, memory: 4777, decode.loss_seg: 1.0866, decode.acc_seg: 51.0556, loss: 1.0866
2021-08-14 10:35:43,969 - mmseg - INFO - Iter [30250/160000]	lr: 8.298e-03, eta: 1 day, 9:49:37, time: 0.868, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0984, decode.acc_seg: 52.0949, loss: 1.0984
2021-08-14 10:37:01,930 - mmseg - INFO - Iter [30300/160000]	lr: 8.296e-03, eta: 1 day, 9:51:03, time: 1.560, data_time: 0.703, memory: 4777, decode.loss_seg: 1.1239, decode.acc_seg: 50.1003, loss: 1.1239
2021-08-14 10:37:45,767 - mmseg - INFO - Iter [30350/160000]	lr: 8.293e-03, eta: 1 day, 9:50:03, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0723, decode.acc_seg: 51.1831, loss: 1.0723
2021-08-14 10:38:28,341 - mmseg - INFO - Iter [30400/160000]	lr: 8.290e-03, eta: 1 day, 9:48:57, time: 0.852, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0746, decode.acc_seg: 52.4942, loss: 1.0746
2021-08-14 10:39:12,253 - mmseg - INFO - Iter [30450/160000]	lr: 8.287e-03, eta: 1 day, 9:47:57, time: 0.879, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0946, decode.acc_seg: 51.9385, loss: 1.0946
2021-08-14 10:39:55,769 - mmseg - INFO - Iter [30500/160000]	lr: 8.284e-03, eta: 1 day, 9:46:56, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0717, decode.acc_seg: 51.6017, loss: 1.0717
2021-08-14 10:40:39,565 - mmseg - INFO - Iter [30550/160000]	lr: 8.281e-03, eta: 1 day, 9:45:55, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0457, decode.acc_seg: 51.3298, loss: 1.0457
2021-08-14 10:41:22,861 - mmseg - INFO - Iter [30600/160000]	lr: 8.278e-03, eta: 1 day, 9:44:53, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0633, decode.acc_seg: 51.6115, loss: 1.0633
2021-08-14 10:42:06,347 - mmseg - INFO - Iter [30650/160000]	lr: 8.276e-03, eta: 1 day, 9:43:51, time: 0.870, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0683, decode.acc_seg: 52.5284, loss: 1.0683
2021-08-14 10:42:50,141 - mmseg - INFO - Iter [30700/160000]	lr: 8.273e-03, eta: 1 day, 9:42:51, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0634, decode.acc_seg: 52.3847, loss: 1.0634
2021-08-14 10:43:32,935 - mmseg - INFO - Iter [30750/160000]	lr: 8.270e-03, eta: 1 day, 9:41:47, time: 0.856, data_time: 0.009, memory: 4777, decode.loss_seg: 1.1233, decode.acc_seg: 50.4358, loss: 1.1233
2021-08-14 10:44:16,386 - mmseg - INFO - Iter [30800/160000]	lr: 8.267e-03, eta: 1 day, 9:40:45, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0706, decode.acc_seg: 51.8188, loss: 1.0706
2021-08-14 10:45:00,633 - mmseg - INFO - Iter [30850/160000]	lr: 8.264e-03, eta: 1 day, 9:39:47, time: 0.885, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0589, decode.acc_seg: 52.1982, loss: 1.0589
2021-08-14 10:45:43,088 - mmseg - INFO - Iter [30900/160000]	lr: 8.261e-03, eta: 1 day, 9:38:42, time: 0.849, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1142, decode.acc_seg: 51.4692, loss: 1.1142
2021-08-14 10:47:02,461 - mmseg - INFO - Iter [30950/160000]	lr: 8.259e-03, eta: 1 day, 9:40:10, time: 1.587, data_time: 0.724, memory: 4777, decode.loss_seg: 1.0712, decode.acc_seg: 51.9055, loss: 1.0712
2021-08-14 10:47:45,936 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 10:47:45,938 - mmseg - INFO - Iter [31000/160000]	lr: 8.256e-03, eta: 1 day, 9:39:09, time: 0.870, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0470, decode.acc_seg: 52.6256, loss: 1.0470
2021-08-14 10:48:29,429 - mmseg - INFO - Iter [31050/160000]	lr: 8.253e-03, eta: 1 day, 9:38:07, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0652, decode.acc_seg: 52.1292, loss: 1.0652
2021-08-14 10:49:12,436 - mmseg - INFO - Iter [31100/160000]	lr: 8.250e-03, eta: 1 day, 9:37:04, time: 0.860, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0454, decode.acc_seg: 52.0753, loss: 1.0454
2021-08-14 10:49:56,563 - mmseg - INFO - Iter [31150/160000]	lr: 8.247e-03, eta: 1 day, 9:36:05, time: 0.882, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0707, decode.acc_seg: 51.5854, loss: 1.0707
2021-08-14 10:50:40,278 - mmseg - INFO - Iter [31200/160000]	lr: 8.244e-03, eta: 1 day, 9:35:05, time: 0.874, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1085, decode.acc_seg: 51.1017, loss: 1.1085
2021-08-14 10:51:23,430 - mmseg - INFO - Iter [31250/160000]	lr: 8.241e-03, eta: 1 day, 9:34:03, time: 0.864, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0816, decode.acc_seg: 51.9976, loss: 1.0816
2021-08-14 10:52:06,889 - mmseg - INFO - Iter [31300/160000]	lr: 8.239e-03, eta: 1 day, 9:33:01, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0657, decode.acc_seg: 52.2645, loss: 1.0657
2021-08-14 10:52:49,925 - mmseg - INFO - Iter [31350/160000]	lr: 8.236e-03, eta: 1 day, 9:31:58, time: 0.860, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0997, decode.acc_seg: 51.6990, loss: 1.0997
2021-08-14 10:53:33,748 - mmseg - INFO - Iter [31400/160000]	lr: 8.233e-03, eta: 1 day, 9:30:59, time: 0.877, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1007, decode.acc_seg: 52.0042, loss: 1.1007
2021-08-14 10:54:18,120 - mmseg - INFO - Iter [31450/160000]	lr: 8.230e-03, eta: 1 day, 9:30:02, time: 0.887, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0825, decode.acc_seg: 51.3084, loss: 1.0825
2021-08-14 10:55:02,517 - mmseg - INFO - Iter [31500/160000]	lr: 8.227e-03, eta: 1 day, 9:29:04, time: 0.888, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0921, decode.acc_seg: 50.6033, loss: 1.0921
2021-08-14 10:55:44,976 - mmseg - INFO - Iter [31550/160000]	lr: 8.224e-03, eta: 1 day, 9:27:59, time: 0.849, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0770, decode.acc_seg: 51.8453, loss: 1.0770
2021-08-14 10:57:04,530 - mmseg - INFO - Iter [31600/160000]	lr: 8.222e-03, eta: 1 day, 9:29:25, time: 1.590, data_time: 0.726, memory: 4777, decode.loss_seg: 1.0406, decode.acc_seg: 52.3639, loss: 1.0406
2021-08-14 10:57:47,515 - mmseg - INFO - Iter [31650/160000]	lr: 8.219e-03, eta: 1 day, 9:28:22, time: 0.861, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0502, decode.acc_seg: 53.0629, loss: 1.0502
2021-08-14 10:58:31,230 - mmseg - INFO - Iter [31700/160000]	lr: 8.216e-03, eta: 1 day, 9:27:22, time: 0.874, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0609, decode.acc_seg: 52.2592, loss: 1.0609
2021-08-14 10:59:14,323 - mmseg - INFO - Iter [31750/160000]	lr: 8.213e-03, eta: 1 day, 9:26:20, time: 0.862, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0392, decode.acc_seg: 52.4114, loss: 1.0392
2021-08-14 10:59:57,722 - mmseg - INFO - Iter [31800/160000]	lr: 8.210e-03, eta: 1 day, 9:25:18, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0784, decode.acc_seg: 51.7893, loss: 1.0784
2021-08-14 11:00:41,829 - mmseg - INFO - Iter [31850/160000]	lr: 8.207e-03, eta: 1 day, 9:24:20, time: 0.882, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0659, decode.acc_seg: 50.7606, loss: 1.0659
2021-08-14 11:01:24,783 - mmseg - INFO - Iter [31900/160000]	lr: 8.204e-03, eta: 1 day, 9:23:17, time: 0.860, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0930, decode.acc_seg: 51.2699, loss: 1.0930
2021-08-14 11:02:07,466 - mmseg - INFO - Iter [31950/160000]	lr: 8.202e-03, eta: 1 day, 9:22:14, time: 0.854, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0513, decode.acc_seg: 52.1704, loss: 1.0513
2021-08-14 11:02:51,144 - mmseg - INFO - Saving checkpoint at 32000 iterations
2021-08-14 11:02:51,384 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 11:02:51,391 - mmseg - INFO - Iter [32000/160000]	lr: 8.199e-03, eta: 1 day, 9:21:15, time: 0.878, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0920, decode.acc_seg: 52.0621, loss: 1.0920
2021-08-14 11:04:25,721 - mmseg - INFO - per class results:
2021-08-14 11:04:25,731 - mmseg - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 55.64 | 83.54 |
|       building      | 66.97 | 80.12 |
|         sky         | 89.19 | 92.75 |
|        floor        | 57.64 | 77.87 |
|         tree        | 58.72 | 83.29 |
|       ceiling       | 65.81 | 80.12 |
|         road        | 62.15 | 88.29 |
|         bed         | 52.18 | 86.23 |
|      windowpane     | 40.62 | 58.67 |
|        grass        | 56.19 | 69.63 |
|       cabinet       | 37.47 | 59.27 |
|       sidewalk      | 28.53 | 34.85 |
|        person       | 48.56 | 62.89 |
|        earth        | 21.37 | 30.04 |
|         door        | 15.26 | 21.25 |
|        table        |  25.5 |  39.5 |
|       mountain      | 34.86 | 57.12 |
|        plant        | 29.46 | 38.42 |
|       curtain       | 37.11 | 47.01 |
|        chair        | 24.86 | 37.46 |
|         car         | 51.05 | 81.88 |
|        water        | 35.59 | 50.86 |
|       painting      | 44.59 |  55.0 |
|         sofa        | 28.01 | 37.77 |
|        shelf        | 18.78 |  27.7 |
|        house        | 32.21 | 47.84 |
|         sea         | 36.18 | 68.55 |
|        mirror       |  9.77 | 10.34 |
|         rug         | 24.69 | 27.42 |
|        field        | 20.53 | 48.71 |
|       armchair      |  8.96 | 10.98 |
|         seat        | 25.02 |  37.5 |
|        fence        |  11.1 | 13.23 |
|         desk        |  8.82 | 10.99 |
|         rock        | 12.63 | 19.32 |
|       wardrobe      |  8.22 |  8.61 |
|         lamp        | 23.15 | 28.97 |
|       bathtub       | 18.43 | 20.52 |
|       railing       | 14.56 | 17.38 |
|       cushion       | 19.45 | 28.25 |
|         base        |  0.01 |  0.01 |
|         box         |  2.9  |  3.18 |
|        column       |  3.81 |  4.02 |
|      signboard      |  9.29 | 10.38 |
|   chest of drawers  | 20.96 | 24.99 |
|       counter       |  7.73 |  8.69 |
|         sand        | 13.46 | 16.31 |
|         sink        | 29.04 | 43.79 |
|      skyscraper     | 37.83 | 62.41 |
|      fireplace      | 42.04 | 54.04 |
|     refrigerator    | 23.97 | 27.37 |
|      grandstand     |  18.7 | 32.94 |
|         path        |  6.37 |  7.19 |
|        stairs       |  3.66 |  3.73 |
|        runway       | 47.02 | 60.53 |
|         case        | 20.27 | 25.83 |
|      pool table     | 64.66 | 78.22 |
|        pillow       | 27.48 | 36.66 |
|     screen door     |  8.79 |  9.02 |
|       stairway      |  8.25 | 13.12 |
|        river        |  0.91 |  0.97 |
|        bridge       | 12.74 | 20.32 |
|       bookcase      | 19.05 | 25.15 |
|        blind        |  6.51 |  6.8  |
|     coffee table    | 26.36 | 45.92 |
|        toilet       | 42.74 | 58.77 |
|        flower       | 15.08 | 22.74 |
|         book        | 15.18 |  18.3 |
|         hill        |  4.58 |  5.74 |
|        bench        | 15.12 | 17.15 |
|      countertop     |  8.89 |  9.91 |
|        stove        | 29.67 | 47.11 |
|         palm        | 18.04 | 19.26 |
|    kitchen island   |  7.23 |  8.03 |
|       computer      | 17.53 | 19.94 |
|     swivel chair    | 13.66 | 15.27 |
|         boat        |  9.41 | 10.35 |
|         bar         |  14.6 | 16.15 |
|    arcade machine   |  2.96 |  6.01 |
|        hovel        |  6.2  |  9.32 |
|         bus         | 18.67 | 21.18 |
|        towel        |  8.52 |  9.03 |
|        light        | 16.27 | 17.69 |
|        truck        |  0.41 |  0.47 |
|        tower        | 24.05 | 26.68 |
|      chandelier     | 34.96 | 60.07 |
|        awning       |  8.01 | 11.96 |
|     streetlight     |  2.04 |  2.16 |
|        booth        |  0.0  |  0.0  |
| television receiver | 21.28 | 25.91 |
|       airplane      | 25.64 | 38.58 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  0.32 |  0.36 |
|         pole        |  1.5  |  1.72 |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.01 |  0.01 |
|      escalator      |  0.88 |  1.51 |
|       ottoman       |  3.7  |  3.76 |
|        bottle       |  2.36 |  3.11 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  1.21 |  1.31 |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.05 |  0.05 |
|    conveyer belt    | 14.03 | 15.82 |
|        canopy       |  0.0  |  0.0  |
|        washer       | 29.21 | 32.44 |
|      plaything      |  0.2  |  0.2  |
|    swimming pool    |  15.0 | 19.69 |
|        stool        |  0.26 |  0.26 |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      | 24.11 | 28.61 |
|         tent        | 36.91 | 58.07 |
|         bag         |  0.0  |  0.0  |
|       minibike      | 10.61 | 11.69 |
|        cradle       | 49.03 | 68.41 |
|         oven        |  0.74 |  0.77 |
|         ball        |  13.1 |  41.2 |
|         food        |  24.8 |  34.6 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     | 10.03 | 11.17 |
|      microwave      | 13.71 | 14.57 |
|         pot         |  0.89 |  0.89 |
|        animal       |  3.26 |  3.3  |
|       bicycle       |  8.54 | 10.31 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  9.4  | 10.27 |
|        screen       | 33.02 | 44.13 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  8.8  |  9.32 |
|        sconce       |  0.0  |  0.0  |
|         vase        |  7.39 |  8.21 |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.46 |  0.47 |
|        ashcan       |  1.85 |  1.86 |
|         fan         |  0.08 |  0.08 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.02 |  0.02 |
|        plate        |  3.84 |  3.89 |
|       monitor       |  2.18 |  2.24 |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.0  |  0.0  |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
2021-08-14 11:04:25,731 - mmseg - INFO - Summary:
2021-08-14 11:04:25,731 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 66.09 | 16.89 | 22.96 |
+-------+-------+-------+
2021-08-14 11:04:25,816 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 11:04:25,817 - mmseg - INFO - Iter(val) [250]	aAcc: 0.6609, mIoU: 0.1689, mAcc: 0.2296, IoU.wall: 0.5564, IoU.building: 0.6697, IoU.sky: 0.8919, IoU.floor: 0.5764, IoU.tree: 0.5872, IoU.ceiling: 0.6581, IoU.road: 0.6215, IoU.bed : 0.5218, IoU.windowpane: 0.4062, IoU.grass: 0.5619, IoU.cabinet: 0.3747, IoU.sidewalk: 0.2853, IoU.person: 0.4856, IoU.earth: 0.2137, IoU.door: 0.1526, IoU.table: 0.2550, IoU.mountain: 0.3486, IoU.plant: 0.2946, IoU.curtain: 0.3711, IoU.chair: 0.2486, IoU.car: 0.5105, IoU.water: 0.3559, IoU.painting: 0.4459, IoU.sofa: 0.2801, IoU.shelf: 0.1878, IoU.house: 0.3221, IoU.sea: 0.3618, IoU.mirror: 0.0977, IoU.rug: 0.2469, IoU.field: 0.2053, IoU.armchair: 0.0896, IoU.seat: 0.2502, IoU.fence: 0.1110, IoU.desk: 0.0882, IoU.rock: 0.1263, IoU.wardrobe: 0.0822, IoU.lamp: 0.2315, IoU.bathtub: 0.1843, IoU.railing: 0.1456, IoU.cushion: 0.1945, IoU.base: 0.0001, IoU.box: 0.0290, IoU.column: 0.0381, IoU.signboard: 0.0929, IoU.chest of drawers: 0.2096, IoU.counter: 0.0773, IoU.sand: 0.1346, IoU.sink: 0.2904, IoU.skyscraper: 0.3783, IoU.fireplace: 0.4204, IoU.refrigerator: 0.2397, IoU.grandstand: 0.1870, IoU.path: 0.0637, IoU.stairs: 0.0366, IoU.runway: 0.4702, IoU.case: 0.2027, IoU.pool table: 0.6466, IoU.pillow: 0.2748, IoU.screen door: 0.0879, IoU.stairway: 0.0825, IoU.river: 0.0091, IoU.bridge: 0.1274, IoU.bookcase: 0.1905, IoU.blind: 0.0651, IoU.coffee table: 0.2636, IoU.toilet: 0.4274, IoU.flower: 0.1508, IoU.book: 0.1518, IoU.hill: 0.0458, IoU.bench: 0.1512, IoU.countertop: 0.0889, IoU.stove: 0.2967, IoU.palm: 0.1804, IoU.kitchen island: 0.0723, IoU.computer: 0.1753, IoU.swivel chair: 0.1366, IoU.boat: 0.0941, IoU.bar: 0.1460, IoU.arcade machine: 0.0296, IoU.hovel: 0.0620, IoU.bus: 0.1867, IoU.towel: 0.0852, IoU.light: 0.1627, IoU.truck: 0.0041, IoU.tower: 0.2405, IoU.chandelier: 0.3496, IoU.awning: 0.0801, IoU.streetlight: 0.0204, IoU.booth: 0.0000, IoU.television receiver: 0.2128, IoU.airplane: 0.2564, IoU.dirt track: 0.0000, IoU.apparel: 0.0032, IoU.pole: 0.0150, IoU.land: 0.0000, IoU.bannister: 0.0001, IoU.escalator: 0.0088, IoU.ottoman: 0.0370, IoU.bottle: 0.0236, IoU.buffet: 0.0000, IoU.poster: 0.0000, IoU.stage: 0.0121, IoU.van: 0.0000, IoU.ship: 0.0000, IoU.fountain: 0.0005, IoU.conveyer belt: 0.1403, IoU.canopy: 0.0000, IoU.washer: 0.2921, IoU.plaything: 0.0020, IoU.swimming pool: 0.1500, IoU.stool: 0.0026, IoU.barrel: 0.0000, IoU.basket: 0.0000, IoU.waterfall: 0.2411, IoU.tent: 0.3691, IoU.bag: 0.0000, IoU.minibike: 0.1061, IoU.cradle: 0.4903, IoU.oven: 0.0074, IoU.ball: 0.1310, IoU.food: 0.2480, IoU.step: 0.0000, IoU.tank: 0.0000, IoU.trade name: 0.1003, IoU.microwave: 0.1371, IoU.pot: 0.0089, IoU.animal: 0.0326, IoU.bicycle: 0.0854, IoU.lake: 0.0000, IoU.dishwasher: 0.0940, IoU.screen: 0.3302, IoU.blanket: 0.0000, IoU.sculpture: 0.0000, IoU.hood: 0.0880, IoU.sconce: 0.0000, IoU.vase: 0.0739, IoU.traffic light: 0.0000, IoU.tray: 0.0046, IoU.ashcan: 0.0185, IoU.fan: 0.0008, IoU.pier: 0.0000, IoU.crt screen: 0.0002, IoU.plate: 0.0384, IoU.monitor: 0.0218, IoU.bulletin board: 0.0000, IoU.shower: 0.0000, IoU.radiator: 0.0000, IoU.glass: 0.0000, IoU.clock: 0.0000, IoU.flag: 0.0000, Acc.wall: 0.8354, Acc.building: 0.8012, Acc.sky: 0.9275, Acc.floor: 0.7787, Acc.tree: 0.8329, Acc.ceiling: 0.8012, Acc.road: 0.8829, Acc.bed : 0.8623, Acc.windowpane: 0.5867, Acc.grass: 0.6963, Acc.cabinet: 0.5927, Acc.sidewalk: 0.3485, Acc.person: 0.6289, Acc.earth: 0.3004, Acc.door: 0.2125, Acc.table: 0.3950, Acc.mountain: 0.5712, Acc.plant: 0.3842, Acc.curtain: 0.4701, Acc.chair: 0.3746, Acc.car: 0.8188, Acc.water: 0.5086, Acc.painting: 0.5500, Acc.sofa: 0.3777, Acc.shelf: 0.2770, Acc.house: 0.4784, Acc.sea: 0.6855, Acc.mirror: 0.1034, Acc.rug: 0.2742, Acc.field: 0.4871, Acc.armchair: 0.1098, Acc.seat: 0.3750, Acc.fence: 0.1323, Acc.desk: 0.1099, Acc.rock: 0.1932, Acc.wardrobe: 0.0861, Acc.lamp: 0.2897, Acc.bathtub: 0.2052, Acc.railing: 0.1738, Acc.cushion: 0.2825, Acc.base: 0.0001, Acc.box: 0.0318, Acc.column: 0.0402, Acc.signboard: 0.1038, Acc.chest of drawers: 0.2499, Acc.counter: 0.0869, Acc.sand: 0.1631, Acc.sink: 0.4379, Acc.skyscraper: 0.6241, Acc.fireplace: 0.5404, Acc.refrigerator: 0.2737, Acc.grandstand: 0.3294, Acc.path: 0.0719, Acc.stairs: 0.0373, Acc.runway: 0.6053, Acc.case: 0.2583, Acc.pool table: 0.7822, Acc.pillow: 0.3666, Acc.screen door: 0.0902, Acc.stairway: 0.1312, Acc.river: 0.0097, Acc.bridge: 0.2032, Acc.bookcase: 0.2515, Acc.blind: 0.0680, Acc.coffee table: 0.4592, Acc.toilet: 0.5877, Acc.flower: 0.2274, Acc.book: 0.1830, Acc.hill: 0.0574, Acc.bench: 0.1715, Acc.countertop: 0.0991, Acc.stove: 0.4711, Acc.palm: 0.1926, Acc.kitchen island: 0.0803, Acc.computer: 0.1994, Acc.swivel chair: 0.1527, Acc.boat: 0.1035, Acc.bar: 0.1615, Acc.arcade machine: 0.0601, Acc.hovel: 0.0932, Acc.bus: 0.2118, Acc.towel: 0.0903, Acc.light: 0.1769, Acc.truck: 0.0047, Acc.tower: 0.2668, Acc.chandelier: 0.6007, Acc.awning: 0.1196, Acc.streetlight: 0.0216, Acc.booth: 0.0000, Acc.television receiver: 0.2591, Acc.airplane: 0.3858, Acc.dirt track: 0.0000, Acc.apparel: 0.0036, Acc.pole: 0.0172, Acc.land: 0.0000, Acc.bannister: 0.0001, Acc.escalator: 0.0151, Acc.ottoman: 0.0376, Acc.bottle: 0.0311, Acc.buffet: 0.0000, Acc.poster: 0.0000, Acc.stage: 0.0131, Acc.van: 0.0000, Acc.ship: 0.0000, Acc.fountain: 0.0005, Acc.conveyer belt: 0.1582, Acc.canopy: 0.0000, Acc.washer: 0.3244, Acc.plaything: 0.0020, Acc.swimming pool: 0.1969, Acc.stool: 0.0026, Acc.barrel: 0.0000, Acc.basket: 0.0000, Acc.waterfall: 0.2861, Acc.tent: 0.5807, Acc.bag: 0.0000, Acc.minibike: 0.1169, Acc.cradle: 0.6841, Acc.oven: 0.0077, Acc.ball: 0.4120, Acc.food: 0.3460, Acc.step: 0.0000, Acc.tank: 0.0000, Acc.trade name: 0.1117, Acc.microwave: 0.1457, Acc.pot: 0.0089, Acc.animal: 0.0330, Acc.bicycle: 0.1031, Acc.lake: 0.0000, Acc.dishwasher: 0.1027, Acc.screen: 0.4413, Acc.blanket: 0.0000, Acc.sculpture: 0.0000, Acc.hood: 0.0932, Acc.sconce: 0.0000, Acc.vase: 0.0821, Acc.traffic light: 0.0000, Acc.tray: 0.0047, Acc.ashcan: 0.0186, Acc.fan: 0.0008, Acc.pier: 0.0000, Acc.crt screen: 0.0002, Acc.plate: 0.0389, Acc.monitor: 0.0224, Acc.bulletin board: 0.0000, Acc.shower: 0.0000, Acc.radiator: 0.0000, Acc.glass: 0.0000, Acc.clock: 0.0000, Acc.flag: 0.0000
2021-08-14 11:05:09,479 - mmseg - INFO - Iter [32050/160000]	lr: 8.196e-03, eta: 1 day, 9:26:32, time: 2.762, data_time: 1.899, memory: 4777, decode.loss_seg: 1.0625, decode.acc_seg: 52.4724, loss: 1.0625
2021-08-14 11:05:52,299 - mmseg - INFO - Iter [32100/160000]	lr: 8.193e-03, eta: 1 day, 9:25:28, time: 0.856, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0737, decode.acc_seg: 51.8060, loss: 1.0737
2021-08-14 11:06:36,275 - mmseg - INFO - Iter [32150/160000]	lr: 8.190e-03, eta: 1 day, 9:24:29, time: 0.880, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0950, decode.acc_seg: 51.9883, loss: 1.0950
2021-08-14 11:07:55,545 - mmseg - INFO - Iter [32200/160000]	lr: 8.187e-03, eta: 1 day, 9:25:49, time: 1.585, data_time: 0.725, memory: 4777, decode.loss_seg: 1.0469, decode.acc_seg: 51.7195, loss: 1.0469
2021-08-14 11:08:40,374 - mmseg - INFO - Iter [32250/160000]	lr: 8.185e-03, eta: 1 day, 9:24:53, time: 0.897, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0373, decode.acc_seg: 53.3420, loss: 1.0373
2021-08-14 11:09:25,081 - mmseg - INFO - Iter [32300/160000]	lr: 8.182e-03, eta: 1 day, 9:23:57, time: 0.894, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0906, decode.acc_seg: 52.3815, loss: 1.0906
2021-08-14 11:10:08,413 - mmseg - INFO - Iter [32350/160000]	lr: 8.179e-03, eta: 1 day, 9:22:55, time: 0.867, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0478, decode.acc_seg: 51.9023, loss: 1.0478
2021-08-14 11:10:51,896 - mmseg - INFO - Iter [32400/160000]	lr: 8.176e-03, eta: 1 day, 9:21:54, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0672, decode.acc_seg: 51.6233, loss: 1.0672
2021-08-14 11:11:35,440 - mmseg - INFO - Iter [32450/160000]	lr: 8.173e-03, eta: 1 day, 9:20:53, time: 0.871, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0382, decode.acc_seg: 52.8989, loss: 1.0382
2021-08-14 11:12:18,340 - mmseg - INFO - Iter [32500/160000]	lr: 8.170e-03, eta: 1 day, 9:19:50, time: 0.858, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0708, decode.acc_seg: 51.0096, loss: 1.0708
2021-08-14 11:13:01,563 - mmseg - INFO - Iter [32550/160000]	lr: 8.167e-03, eta: 1 day, 9:18:48, time: 0.864, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0777, decode.acc_seg: 52.5924, loss: 1.0777
2021-08-14 11:13:45,413 - mmseg - INFO - Iter [32600/160000]	lr: 8.165e-03, eta: 1 day, 9:17:48, time: 0.877, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0556, decode.acc_seg: 51.6866, loss: 1.0556
2021-08-14 11:14:27,506 - mmseg - INFO - Iter [32650/160000]	lr: 8.162e-03, eta: 1 day, 9:16:42, time: 0.842, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0783, decode.acc_seg: 51.7461, loss: 1.0783
2021-08-14 11:15:09,996 - mmseg - INFO - Iter [32700/160000]	lr: 8.159e-03, eta: 1 day, 9:15:37, time: 0.850, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0635, decode.acc_seg: 52.9264, loss: 1.0635
2021-08-14 11:15:52,836 - mmseg - INFO - Iter [32750/160000]	lr: 8.156e-03, eta: 1 day, 9:14:34, time: 0.857, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0559, decode.acc_seg: 51.4301, loss: 1.0559
2021-08-14 11:16:36,044 - mmseg - INFO - Iter [32800/160000]	lr: 8.153e-03, eta: 1 day, 9:13:32, time: 0.864, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0770, decode.acc_seg: 51.8825, loss: 1.0770
2021-08-14 11:17:54,669 - mmseg - INFO - Iter [32850/160000]	lr: 8.150e-03, eta: 1 day, 9:14:47, time: 1.572, data_time: 0.721, memory: 4777, decode.loss_seg: 1.0548, decode.acc_seg: 52.2227, loss: 1.0548
2021-08-14 11:18:38,213 - mmseg - INFO - Iter [32900/160000]	lr: 8.148e-03, eta: 1 day, 9:13:46, time: 0.871, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0395, decode.acc_seg: 52.1244, loss: 1.0395
2021-08-14 11:19:21,610 - mmseg - INFO - Iter [32950/160000]	lr: 8.145e-03, eta: 1 day, 9:12:45, time: 0.868, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0653, decode.acc_seg: 51.6853, loss: 1.0653
2021-08-14 11:20:05,375 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 11:20:05,375 - mmseg - INFO - Iter [33000/160000]	lr: 8.142e-03, eta: 1 day, 9:11:46, time: 0.875, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0704, decode.acc_seg: 51.9930, loss: 1.0704
2021-08-14 11:20:48,844 - mmseg - INFO - Iter [33050/160000]	lr: 8.139e-03, eta: 1 day, 9:10:45, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0540, decode.acc_seg: 51.2100, loss: 1.0540
2021-08-14 11:21:32,103 - mmseg - INFO - Iter [33100/160000]	lr: 8.136e-03, eta: 1 day, 9:09:43, time: 0.865, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0327, decode.acc_seg: 53.0449, loss: 1.0327
2021-08-14 11:22:15,715 - mmseg - INFO - Iter [33150/160000]	lr: 8.133e-03, eta: 1 day, 9:08:43, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0630, decode.acc_seg: 52.4377, loss: 1.0630
2021-08-14 11:22:58,677 - mmseg - INFO - Iter [33200/160000]	lr: 8.130e-03, eta: 1 day, 9:07:40, time: 0.859, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0410, decode.acc_seg: 52.3223, loss: 1.0410
2021-08-14 11:23:42,057 - mmseg - INFO - Iter [33250/160000]	lr: 8.128e-03, eta: 1 day, 9:06:40, time: 0.868, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0752, decode.acc_seg: 51.4868, loss: 1.0752
2021-08-14 11:24:25,571 - mmseg - INFO - Iter [33300/160000]	lr: 8.125e-03, eta: 1 day, 9:05:39, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.1053, decode.acc_seg: 51.2898, loss: 1.1053
2021-08-14 11:25:08,896 - mmseg - INFO - Iter [33350/160000]	lr: 8.122e-03, eta: 1 day, 9:04:38, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0843, decode.acc_seg: 51.8928, loss: 1.0843
2021-08-14 11:25:51,785 - mmseg - INFO - Iter [33400/160000]	lr: 8.119e-03, eta: 1 day, 9:03:36, time: 0.858, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0509, decode.acc_seg: 52.6936, loss: 1.0509
2021-08-14 11:27:10,256 - mmseg - INFO - Iter [33450/160000]	lr: 8.116e-03, eta: 1 day, 9:04:48, time: 1.569, data_time: 0.721, memory: 4777, decode.loss_seg: 1.0762, decode.acc_seg: 52.3847, loss: 1.0762
2021-08-14 11:27:54,081 - mmseg - INFO - Iter [33500/160000]	lr: 8.113e-03, eta: 1 day, 9:03:48, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0304, decode.acc_seg: 51.9269, loss: 1.0304
2021-08-14 11:28:38,098 - mmseg - INFO - Iter [33550/160000]	lr: 8.110e-03, eta: 1 day, 9:02:50, time: 0.881, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0635, decode.acc_seg: 52.8862, loss: 1.0635
2021-08-14 11:29:21,358 - mmseg - INFO - Iter [33600/160000]	lr: 8.108e-03, eta: 1 day, 9:01:49, time: 0.865, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0819, decode.acc_seg: 52.3697, loss: 1.0819
2021-08-14 11:30:05,786 - mmseg - INFO - Iter [33650/160000]	lr: 8.105e-03, eta: 1 day, 9:00:52, time: 0.888, data_time: 0.009, memory: 4777, decode.loss_seg: 1.0575, decode.acc_seg: 52.0862, loss: 1.0575
2021-08-14 11:30:50,097 - mmseg - INFO - Iter [33700/160000]	lr: 8.102e-03, eta: 1 day, 8:59:54, time: 0.886, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0357, decode.acc_seg: 52.0925, loss: 1.0357
2021-08-14 11:31:33,011 - mmseg - INFO - Iter [33750/160000]	lr: 8.099e-03, eta: 1 day, 8:58:52, time: 0.858, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0705, decode.acc_seg: 51.8739, loss: 1.0705
2021-08-14 11:32:16,431 - mmseg - INFO - Iter [33800/160000]	lr: 8.096e-03, eta: 1 day, 8:57:52, time: 0.869, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0397, decode.acc_seg: 52.9084, loss: 1.0397
2021-08-14 11:33:00,324 - mmseg - INFO - Iter [33850/160000]	lr: 8.093e-03, eta: 1 day, 8:56:53, time: 0.877, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0720, decode.acc_seg: 51.6272, loss: 1.0720
2021-08-14 11:33:44,072 - mmseg - INFO - Iter [33900/160000]	lr: 8.090e-03, eta: 1 day, 8:55:54, time: 0.875, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0741, decode.acc_seg: 52.7360, loss: 1.0741
2021-08-14 11:34:27,625 - mmseg - INFO - Iter [33950/160000]	lr: 8.088e-03, eta: 1 day, 8:54:54, time: 0.871, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0924, decode.acc_seg: 52.0551, loss: 1.0924
2021-08-14 11:35:10,760 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 11:35:10,761 - mmseg - INFO - Iter [34000/160000]	lr: 8.085e-03, eta: 1 day, 8:53:53, time: 0.863, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0648, decode.acc_seg: 51.6723, loss: 1.0648
2021-08-14 11:35:54,039 - mmseg - INFO - Iter [34050/160000]	lr: 8.082e-03, eta: 1 day, 8:52:52, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0328, decode.acc_seg: 52.8229, loss: 1.0328
2021-08-14 11:37:12,564 - mmseg - INFO - Iter [34100/160000]	lr: 8.079e-03, eta: 1 day, 8:54:01, time: 1.570, data_time: 0.712, memory: 4777, decode.loss_seg: 1.0641, decode.acc_seg: 51.5464, loss: 1.0641
2021-08-14 11:37:57,339 - mmseg - INFO - Iter [34150/160000]	lr: 8.076e-03, eta: 1 day, 8:53:06, time: 0.896, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0482, decode.acc_seg: 51.1048, loss: 1.0482
2021-08-14 11:38:40,782 - mmseg - INFO - Iter [34200/160000]	lr: 8.073e-03, eta: 1 day, 8:52:06, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0508, decode.acc_seg: 52.2310, loss: 1.0508
2021-08-14 11:39:24,714 - mmseg - INFO - Iter [34250/160000]	lr: 8.071e-03, eta: 1 day, 8:51:07, time: 0.879, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0561, decode.acc_seg: 52.1295, loss: 1.0561
2021-08-14 11:40:08,148 - mmseg - INFO - Iter [34300/160000]	lr: 8.068e-03, eta: 1 day, 8:50:07, time: 0.869, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0391, decode.acc_seg: 52.9474, loss: 1.0391
2021-08-14 11:40:52,404 - mmseg - INFO - Iter [34350/160000]	lr: 8.065e-03, eta: 1 day, 8:49:10, time: 0.885, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0665, decode.acc_seg: 51.5594, loss: 1.0665
2021-08-14 11:41:36,063 - mmseg - INFO - Iter [34400/160000]	lr: 8.062e-03, eta: 1 day, 8:48:11, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0432, decode.acc_seg: 52.6738, loss: 1.0432
2021-08-14 11:42:19,552 - mmseg - INFO - Iter [34450/160000]	lr: 8.059e-03, eta: 1 day, 8:47:11, time: 0.869, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0462, decode.acc_seg: 52.1345, loss: 1.0462
2021-08-14 11:43:03,363 - mmseg - INFO - Iter [34500/160000]	lr: 8.056e-03, eta: 1 day, 8:46:12, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0821, decode.acc_seg: 52.0176, loss: 1.0821
2021-08-14 11:43:47,194 - mmseg - INFO - Iter [34550/160000]	lr: 8.053e-03, eta: 1 day, 8:45:14, time: 0.876, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0710, decode.acc_seg: 52.0385, loss: 1.0710
2021-08-14 11:44:29,503 - mmseg - INFO - Iter [34600/160000]	lr: 8.051e-03, eta: 1 day, 8:44:10, time: 0.846, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0557, decode.acc_seg: 52.4128, loss: 1.0557
2021-08-14 11:45:13,160 - mmseg - INFO - Iter [34650/160000]	lr: 8.048e-03, eta: 1 day, 8:43:11, time: 0.873, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9825, decode.acc_seg: 53.5024, loss: 0.9825
2021-08-14 11:45:56,593 - mmseg - INFO - Iter [34700/160000]	lr: 8.045e-03, eta: 1 day, 8:42:11, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0908, decode.acc_seg: 51.5850, loss: 1.0908
2021-08-14 11:47:14,624 - mmseg - INFO - Iter [34750/160000]	lr: 8.042e-03, eta: 1 day, 8:43:16, time: 1.560, data_time: 0.698, memory: 4777, decode.loss_seg: 1.0306, decode.acc_seg: 52.1377, loss: 1.0306
2021-08-14 11:47:59,633 - mmseg - INFO - Iter [34800/160000]	lr: 8.039e-03, eta: 1 day, 8:42:21, time: 0.901, data_time: 0.013, memory: 4777, decode.loss_seg: 1.0411, decode.acc_seg: 53.0347, loss: 1.0411
2021-08-14 11:48:43,238 - mmseg - INFO - Iter [34850/160000]	lr: 8.036e-03, eta: 1 day, 8:41:22, time: 0.872, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0324, decode.acc_seg: 51.6670, loss: 1.0324
2021-08-14 11:49:27,559 - mmseg - INFO - Iter [34900/160000]	lr: 8.033e-03, eta: 1 day, 8:40:25, time: 0.886, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0684, decode.acc_seg: 52.6313, loss: 1.0684
2021-08-14 11:50:10,788 - mmseg - INFO - Iter [34950/160000]	lr: 8.031e-03, eta: 1 day, 8:39:25, time: 0.864, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0379, decode.acc_seg: 52.5754, loss: 1.0379
2021-08-14 11:50:54,947 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 11:50:54,947 - mmseg - INFO - Iter [35000/160000]	lr: 8.028e-03, eta: 1 day, 8:38:28, time: 0.883, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0633, decode.acc_seg: 52.4013, loss: 1.0633
2021-08-14 11:51:38,426 - mmseg - INFO - Iter [35050/160000]	lr: 8.025e-03, eta: 1 day, 8:37:28, time: 0.870, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0629, decode.acc_seg: 50.8155, loss: 1.0629
2021-08-14 11:52:22,264 - mmseg - INFO - Iter [35100/160000]	lr: 8.022e-03, eta: 1 day, 8:36:30, time: 0.877, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0415, decode.acc_seg: 52.2687, loss: 1.0415
2021-08-14 11:53:06,318 - mmseg - INFO - Iter [35150/160000]	lr: 8.019e-03, eta: 1 day, 8:35:32, time: 0.881, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0752, decode.acc_seg: 52.5707, loss: 1.0752
2021-08-14 11:53:49,435 - mmseg - INFO - Iter [35200/160000]	lr: 8.016e-03, eta: 1 day, 8:34:32, time: 0.863, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0830, decode.acc_seg: 52.3915, loss: 1.0830
2021-08-14 11:54:33,218 - mmseg - INFO - Iter [35250/160000]	lr: 8.013e-03, eta: 1 day, 8:33:33, time: 0.875, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0461, decode.acc_seg: 53.0151, loss: 1.0461
2021-08-14 11:55:18,333 - mmseg - INFO - Iter [35300/160000]	lr: 8.011e-03, eta: 1 day, 8:32:40, time: 0.902, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0497, decode.acc_seg: 51.8914, loss: 1.0497
2021-08-14 11:56:37,393 - mmseg - INFO - Iter [35350/160000]	lr: 8.008e-03, eta: 1 day, 8:33:46, time: 1.582, data_time: 0.737, memory: 4777, decode.loss_seg: 1.0742, decode.acc_seg: 51.7274, loss: 1.0742
2021-08-14 11:57:21,378 - mmseg - INFO - Iter [35400/160000]	lr: 8.005e-03, eta: 1 day, 8:32:48, time: 0.879, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0459, decode.acc_seg: 52.8963, loss: 1.0459
2021-08-14 11:58:04,775 - mmseg - INFO - Iter [35450/160000]	lr: 8.002e-03, eta: 1 day, 8:31:49, time: 0.868, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0696, decode.acc_seg: 51.4362, loss: 1.0696
2021-08-14 11:58:49,901 - mmseg - INFO - Iter [35500/160000]	lr: 7.999e-03, eta: 1 day, 8:30:55, time: 0.902, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0635, decode.acc_seg: 52.5597, loss: 1.0635
2021-08-14 11:59:34,828 - mmseg - INFO - Iter [35550/160000]	lr: 7.996e-03, eta: 1 day, 8:30:01, time: 0.898, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0250, decode.acc_seg: 52.3316, loss: 1.0250
2021-08-14 12:00:19,023 - mmseg - INFO - Iter [35600/160000]	lr: 7.993e-03, eta: 1 day, 8:29:04, time: 0.883, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0821, decode.acc_seg: 51.1980, loss: 1.0821
2021-08-14 12:01:03,993 - mmseg - INFO - Iter [35650/160000]	lr: 7.991e-03, eta: 1 day, 8:28:10, time: 0.901, data_time: 0.013, memory: 4777, decode.loss_seg: 1.0745, decode.acc_seg: 51.5541, loss: 1.0745
2021-08-14 12:01:49,004 - mmseg - INFO - Iter [35700/160000]	lr: 7.988e-03, eta: 1 day, 8:27:16, time: 0.900, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0256, decode.acc_seg: 52.8517, loss: 1.0256
2021-08-14 12:02:34,081 - mmseg - INFO - Iter [35750/160000]	lr: 7.985e-03, eta: 1 day, 8:26:22, time: 0.902, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0486, decode.acc_seg: 51.8571, loss: 1.0486
2021-08-14 12:03:18,020 - mmseg - INFO - Iter [35800/160000]	lr: 7.982e-03, eta: 1 day, 8:25:25, time: 0.878, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0516, decode.acc_seg: 52.6988, loss: 1.0516
2021-08-14 12:04:03,123 - mmseg - INFO - Iter [35850/160000]	lr: 7.979e-03, eta: 1 day, 8:24:31, time: 0.902, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0503, decode.acc_seg: 52.5365, loss: 1.0503
2021-08-14 12:04:47,972 - mmseg - INFO - Iter [35900/160000]	lr: 7.976e-03, eta: 1 day, 8:23:37, time: 0.897, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0559, decode.acc_seg: 52.0602, loss: 1.0559
2021-08-14 12:05:32,428 - mmseg - INFO - Iter [35950/160000]	lr: 7.973e-03, eta: 1 day, 8:22:41, time: 0.889, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0631, decode.acc_seg: 51.8429, loss: 1.0631
2021-08-14 12:07:10,402 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 12:07:10,406 - mmseg - INFO - Iter [36000/160000]	lr: 7.971e-03, eta: 1 day, 8:24:50, time: 1.960, data_time: 1.086, memory: 4777, decode.loss_seg: 1.0327, decode.acc_seg: 51.7213, loss: 1.0327
2021-08-14 12:07:55,367 - mmseg - INFO - Iter [36050/160000]	lr: 7.968e-03, eta: 1 day, 8:23:55, time: 0.900, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0874, decode.acc_seg: 52.3419, loss: 1.0874
2021-08-14 12:08:39,919 - mmseg - INFO - Iter [36100/160000]	lr: 7.965e-03, eta: 1 day, 8:23:00, time: 0.891, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0254, decode.acc_seg: 53.6087, loss: 1.0254
2021-08-14 12:09:25,494 - mmseg - INFO - Iter [36150/160000]	lr: 7.962e-03, eta: 1 day, 8:22:07, time: 0.911, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0210, decode.acc_seg: 52.5982, loss: 1.0210
2021-08-14 12:10:10,915 - mmseg - INFO - Iter [36200/160000]	lr: 7.959e-03, eta: 1 day, 8:21:15, time: 0.909, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0078, decode.acc_seg: 52.7688, loss: 1.0078
2021-08-14 12:10:55,393 - mmseg - INFO - Iter [36250/160000]	lr: 7.956e-03, eta: 1 day, 8:20:19, time: 0.889, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0398, decode.acc_seg: 52.3921, loss: 1.0398
2021-08-14 12:11:40,227 - mmseg - INFO - Iter [36300/160000]	lr: 7.953e-03, eta: 1 day, 8:19:25, time: 0.898, data_time: 0.011, memory: 4777, decode.loss_seg: 1.1211, decode.acc_seg: 51.6824, loss: 1.1211
2021-08-14 12:12:23,469 - mmseg - INFO - Iter [36350/160000]	lr: 7.951e-03, eta: 1 day, 8:18:25, time: 0.864, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0643, decode.acc_seg: 52.5371, loss: 1.0643
2021-08-14 12:13:07,277 - mmseg - INFO - Iter [36400/160000]	lr: 7.948e-03, eta: 1 day, 8:17:27, time: 0.876, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0175, decode.acc_seg: 52.1897, loss: 1.0175
2021-08-14 12:13:50,917 - mmseg - INFO - Iter [36450/160000]	lr: 7.945e-03, eta: 1 day, 8:16:28, time: 0.873, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0483, decode.acc_seg: 52.0029, loss: 1.0483
2021-08-14 12:14:35,357 - mmseg - INFO - Iter [36500/160000]	lr: 7.942e-03, eta: 1 day, 8:15:32, time: 0.889, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0511, decode.acc_seg: 52.4084, loss: 1.0511
2021-08-14 12:15:19,933 - mmseg - INFO - Iter [36550/160000]	lr: 7.939e-03, eta: 1 day, 8:14:37, time: 0.892, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0512, decode.acc_seg: 52.2380, loss: 1.0512
2021-08-14 12:16:39,297 - mmseg - INFO - Iter [36600/160000]	lr: 7.936e-03, eta: 1 day, 8:15:39, time: 1.587, data_time: 0.732, memory: 4777, decode.loss_seg: 1.0592, decode.acc_seg: 52.6333, loss: 1.0592
2021-08-14 12:17:23,968 - mmseg - INFO - Iter [36650/160000]	lr: 7.933e-03, eta: 1 day, 8:14:44, time: 0.893, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0339, decode.acc_seg: 52.7095, loss: 1.0339
2021-08-14 12:18:08,192 - mmseg - INFO - Iter [36700/160000]	lr: 7.931e-03, eta: 1 day, 8:13:48, time: 0.885, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0402, decode.acc_seg: 52.9754, loss: 1.0402
2021-08-14 12:18:52,844 - mmseg - INFO - Iter [36750/160000]	lr: 7.928e-03, eta: 1 day, 8:12:52, time: 0.893, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0009, decode.acc_seg: 53.3383, loss: 1.0009
2021-08-14 12:19:36,341 - mmseg - INFO - Iter [36800/160000]	lr: 7.925e-03, eta: 1 day, 8:11:54, time: 0.870, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0814, decode.acc_seg: 52.6771, loss: 1.0814
2021-08-14 12:20:20,551 - mmseg - INFO - Iter [36850/160000]	lr: 7.922e-03, eta: 1 day, 8:10:57, time: 0.884, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0834, decode.acc_seg: 51.6071, loss: 1.0834
2021-08-14 12:21:06,302 - mmseg - INFO - Iter [36900/160000]	lr: 7.919e-03, eta: 1 day, 8:10:06, time: 0.915, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0604, decode.acc_seg: 51.8496, loss: 1.0604
2021-08-14 12:21:51,699 - mmseg - INFO - Iter [36950/160000]	lr: 7.916e-03, eta: 1 day, 8:09:13, time: 0.908, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0458, decode.acc_seg: 52.8494, loss: 1.0458
2021-08-14 12:22:35,663 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 12:22:35,663 - mmseg - INFO - Iter [37000/160000]	lr: 7.913e-03, eta: 1 day, 8:08:16, time: 0.879, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0376, decode.acc_seg: 52.2649, loss: 1.0376
2021-08-14 12:23:21,184 - mmseg - INFO - Iter [37050/160000]	lr: 7.911e-03, eta: 1 day, 8:07:24, time: 0.911, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0552, decode.acc_seg: 51.8149, loss: 1.0552
2021-08-14 12:24:07,332 - mmseg - INFO - Iter [37100/160000]	lr: 7.908e-03, eta: 1 day, 8:06:34, time: 0.922, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0493, decode.acc_seg: 52.8631, loss: 1.0493
2021-08-14 12:24:53,664 - mmseg - INFO - Iter [37150/160000]	lr: 7.905e-03, eta: 1 day, 8:05:45, time: 0.927, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0320, decode.acc_seg: 51.3646, loss: 1.0320
2021-08-14 12:25:38,706 - mmseg - INFO - Iter [37200/160000]	lr: 7.902e-03, eta: 1 day, 8:04:51, time: 0.901, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0896, decode.acc_seg: 52.2638, loss: 1.0896
2021-08-14 12:26:58,054 - mmseg - INFO - Iter [37250/160000]	lr: 7.899e-03, eta: 1 day, 8:05:50, time: 1.587, data_time: 0.709, memory: 4777, decode.loss_seg: 1.0256, decode.acc_seg: 52.2628, loss: 1.0256
2021-08-14 12:27:43,021 - mmseg - INFO - Iter [37300/160000]	lr: 7.896e-03, eta: 1 day, 8:04:57, time: 0.899, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0256, decode.acc_seg: 52.5094, loss: 1.0256
2021-08-14 12:28:29,464 - mmseg - INFO - Iter [37350/160000]	lr: 7.893e-03, eta: 1 day, 8:04:07, time: 0.929, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0283, decode.acc_seg: 52.9442, loss: 1.0283
2021-08-14 12:29:15,007 - mmseg - INFO - Iter [37400/160000]	lr: 7.891e-03, eta: 1 day, 8:03:15, time: 0.911, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0500, decode.acc_seg: 53.3760, loss: 1.0500
2021-08-14 12:30:00,372 - mmseg - INFO - Iter [37450/160000]	lr: 7.888e-03, eta: 1 day, 8:02:23, time: 0.907, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0634, decode.acc_seg: 52.7211, loss: 1.0634
2021-08-14 12:30:45,856 - mmseg - INFO - Iter [37500/160000]	lr: 7.885e-03, eta: 1 day, 8:01:31, time: 0.911, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0294, decode.acc_seg: 52.5959, loss: 1.0294
2021-08-14 12:31:30,284 - mmseg - INFO - Iter [37550/160000]	lr: 7.882e-03, eta: 1 day, 8:00:35, time: 0.888, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0006, decode.acc_seg: 53.6122, loss: 1.0006
2021-08-14 12:32:15,168 - mmseg - INFO - Iter [37600/160000]	lr: 7.879e-03, eta: 1 day, 7:59:41, time: 0.897, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0391, decode.acc_seg: 52.4382, loss: 1.0391
2021-08-14 12:33:00,489 - mmseg - INFO - Iter [37650/160000]	lr: 7.876e-03, eta: 1 day, 7:58:48, time: 0.907, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0482, decode.acc_seg: 52.0031, loss: 1.0482
2021-08-14 12:33:46,347 - mmseg - INFO - Iter [37700/160000]	lr: 7.873e-03, eta: 1 day, 7:57:57, time: 0.917, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0367, decode.acc_seg: 52.2113, loss: 1.0367
2021-08-14 12:34:30,128 - mmseg - INFO - Iter [37750/160000]	lr: 7.871e-03, eta: 1 day, 7:57:00, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0707, decode.acc_seg: 52.2296, loss: 1.0707
2021-08-14 12:35:14,642 - mmseg - INFO - Iter [37800/160000]	lr: 7.868e-03, eta: 1 day, 7:56:04, time: 0.890, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0360, decode.acc_seg: 53.2592, loss: 1.0360
2021-08-14 12:35:59,958 - mmseg - INFO - Iter [37850/160000]	lr: 7.865e-03, eta: 1 day, 7:55:12, time: 0.906, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0688, decode.acc_seg: 51.6067, loss: 1.0688
2021-08-14 12:37:18,410 - mmseg - INFO - Iter [37900/160000]	lr: 7.862e-03, eta: 1 day, 7:56:06, time: 1.569, data_time: 0.713, memory: 4777, decode.loss_seg: 0.9927, decode.acc_seg: 52.6963, loss: 0.9927
2021-08-14 12:38:01,790 - mmseg - INFO - Iter [37950/160000]	lr: 7.859e-03, eta: 1 day, 7:55:07, time: 0.868, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0265, decode.acc_seg: 51.9920, loss: 1.0265
2021-08-14 12:38:44,566 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 12:38:44,567 - mmseg - INFO - Iter [38000/160000]	lr: 7.856e-03, eta: 1 day, 7:54:06, time: 0.856, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0460, decode.acc_seg: 52.5334, loss: 1.0460
2021-08-14 12:39:27,373 - mmseg - INFO - Iter [38050/160000]	lr: 7.853e-03, eta: 1 day, 7:53:05, time: 0.856, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0422, decode.acc_seg: 53.6111, loss: 1.0422
2021-08-14 12:40:10,709 - mmseg - INFO - Iter [38100/160000]	lr: 7.851e-03, eta: 1 day, 7:52:06, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0136, decode.acc_seg: 53.5755, loss: 1.0136
2021-08-14 12:40:54,789 - mmseg - INFO - Iter [38150/160000]	lr: 7.848e-03, eta: 1 day, 7:51:10, time: 0.881, data_time: 0.009, memory: 4777, decode.loss_seg: 1.0333, decode.acc_seg: 53.3497, loss: 1.0333
2021-08-14 12:41:37,769 - mmseg - INFO - Iter [38200/160000]	lr: 7.845e-03, eta: 1 day, 7:50:10, time: 0.860, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0556, decode.acc_seg: 52.1715, loss: 1.0556
2021-08-14 12:42:20,773 - mmseg - INFO - Iter [38250/160000]	lr: 7.842e-03, eta: 1 day, 7:49:10, time: 0.860, data_time: 0.009, memory: 4777, decode.loss_seg: 1.0217, decode.acc_seg: 51.9425, loss: 1.0217
2021-08-14 12:43:03,689 - mmseg - INFO - Iter [38300/160000]	lr: 7.839e-03, eta: 1 day, 7:48:10, time: 0.858, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0351, decode.acc_seg: 53.1994, loss: 1.0351
2021-08-14 12:43:46,525 - mmseg - INFO - Iter [38350/160000]	lr: 7.836e-03, eta: 1 day, 7:47:09, time: 0.857, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0550, decode.acc_seg: 52.7138, loss: 1.0550
2021-08-14 12:44:30,468 - mmseg - INFO - Iter [38400/160000]	lr: 7.833e-03, eta: 1 day, 7:46:12, time: 0.879, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0580, decode.acc_seg: 52.3458, loss: 1.0580
2021-08-14 12:45:16,064 - mmseg - INFO - Iter [38450/160000]	lr: 7.831e-03, eta: 1 day, 7:45:21, time: 0.911, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0432, decode.acc_seg: 53.3598, loss: 1.0432
2021-08-14 12:46:36,741 - mmseg - INFO - Iter [38500/160000]	lr: 7.828e-03, eta: 1 day, 7:46:20, time: 1.614, data_time: 0.715, memory: 4777, decode.loss_seg: 1.0660, decode.acc_seg: 51.4007, loss: 1.0660
2021-08-14 12:47:20,504 - mmseg - INFO - Iter [38550/160000]	lr: 7.825e-03, eta: 1 day, 7:45:23, time: 0.875, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9725, decode.acc_seg: 53.3084, loss: 0.9725
2021-08-14 12:48:04,645 - mmseg - INFO - Iter [38600/160000]	lr: 7.822e-03, eta: 1 day, 7:44:26, time: 0.883, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0110, decode.acc_seg: 52.4171, loss: 1.0110
2021-08-14 12:48:48,350 - mmseg - INFO - Iter [38650/160000]	lr: 7.819e-03, eta: 1 day, 7:43:29, time: 0.875, data_time: 0.010, memory: 4777, decode.loss_seg: 0.9759, decode.acc_seg: 53.5265, loss: 0.9759
2021-08-14 12:49:32,330 - mmseg - INFO - Iter [38700/160000]	lr: 7.816e-03, eta: 1 day, 7:42:32, time: 0.880, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0464, decode.acc_seg: 52.5785, loss: 1.0464
2021-08-14 12:50:15,100 - mmseg - INFO - Iter [38750/160000]	lr: 7.813e-03, eta: 1 day, 7:41:32, time: 0.855, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0366, decode.acc_seg: 52.7977, loss: 1.0366
2021-08-14 12:50:58,454 - mmseg - INFO - Iter [38800/160000]	lr: 7.811e-03, eta: 1 day, 7:40:33, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0594, decode.acc_seg: 52.7450, loss: 1.0594
2021-08-14 12:51:41,574 - mmseg - INFO - Iter [38850/160000]	lr: 7.808e-03, eta: 1 day, 7:39:34, time: 0.862, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0620, decode.acc_seg: 52.6951, loss: 1.0620
2021-08-14 12:52:24,907 - mmseg - INFO - Iter [38900/160000]	lr: 7.805e-03, eta: 1 day, 7:38:35, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0628, decode.acc_seg: 51.6663, loss: 1.0628
2021-08-14 12:53:09,072 - mmseg - INFO - Iter [38950/160000]	lr: 7.802e-03, eta: 1 day, 7:37:39, time: 0.884, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0962, decode.acc_seg: 50.8778, loss: 1.0962
2021-08-14 12:53:52,566 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 12:53:52,567 - mmseg - INFO - Iter [39000/160000]	lr: 7.799e-03, eta: 1 day, 7:36:41, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0326, decode.acc_seg: 52.3936, loss: 1.0326
2021-08-14 12:54:38,310 - mmseg - INFO - Iter [39050/160000]	lr: 7.796e-03, eta: 1 day, 7:35:50, time: 0.914, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0177, decode.acc_seg: 51.9449, loss: 1.0177
2021-08-14 12:55:22,856 - mmseg - INFO - Iter [39100/160000]	lr: 7.793e-03, eta: 1 day, 7:34:56, time: 0.892, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0447, decode.acc_seg: 51.9411, loss: 1.0447
2021-08-14 12:56:42,404 - mmseg - INFO - Iter [39150/160000]	lr: 7.790e-03, eta: 1 day, 7:35:49, time: 1.590, data_time: 0.724, memory: 4777, decode.loss_seg: 1.0341, decode.acc_seg: 51.7181, loss: 1.0341
2021-08-14 12:57:26,448 - mmseg - INFO - Iter [39200/160000]	lr: 7.788e-03, eta: 1 day, 7:34:52, time: 0.881, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0538, decode.acc_seg: 52.6840, loss: 1.0538
2021-08-14 12:58:09,781 - mmseg - INFO - Iter [39250/160000]	lr: 7.785e-03, eta: 1 day, 7:33:54, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0068, decode.acc_seg: 53.4828, loss: 1.0068
2021-08-14 12:58:53,302 - mmseg - INFO - Iter [39300/160000]	lr: 7.782e-03, eta: 1 day, 7:32:56, time: 0.870, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0188, decode.acc_seg: 53.0848, loss: 1.0188
2021-08-14 12:59:37,621 - mmseg - INFO - Iter [39350/160000]	lr: 7.779e-03, eta: 1 day, 7:32:01, time: 0.886, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0278, decode.acc_seg: 52.6098, loss: 1.0278
2021-08-14 13:00:20,690 - mmseg - INFO - Iter [39400/160000]	lr: 7.776e-03, eta: 1 day, 7:31:01, time: 0.861, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0382, decode.acc_seg: 53.1690, loss: 1.0382
2021-08-14 13:01:03,338 - mmseg - INFO - Iter [39450/160000]	lr: 7.773e-03, eta: 1 day, 7:30:01, time: 0.853, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0446, decode.acc_seg: 53.2059, loss: 1.0446
2021-08-14 13:01:46,925 - mmseg - INFO - Iter [39500/160000]	lr: 7.770e-03, eta: 1 day, 7:29:03, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0460, decode.acc_seg: 51.7798, loss: 1.0460
2021-08-14 13:02:31,490 - mmseg - INFO - Iter [39550/160000]	lr: 7.768e-03, eta: 1 day, 7:28:09, time: 0.891, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0531, decode.acc_seg: 52.0536, loss: 1.0531
2021-08-14 13:03:15,186 - mmseg - INFO - Iter [39600/160000]	lr: 7.765e-03, eta: 1 day, 7:27:12, time: 0.874, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0297, decode.acc_seg: 53.0377, loss: 1.0297
2021-08-14 13:03:57,935 - mmseg - INFO - Iter [39650/160000]	lr: 7.762e-03, eta: 1 day, 7:26:12, time: 0.855, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0247, decode.acc_seg: 52.9547, loss: 1.0247
2021-08-14 13:04:42,819 - mmseg - INFO - Iter [39700/160000]	lr: 7.759e-03, eta: 1 day, 7:25:18, time: 0.897, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0611, decode.acc_seg: 52.3622, loss: 1.0611
2021-08-14 13:05:28,598 - mmseg - INFO - Iter [39750/160000]	lr: 7.756e-03, eta: 1 day, 7:24:27, time: 0.916, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0473, decode.acc_seg: 51.7044, loss: 1.0473
2021-08-14 13:06:48,139 - mmseg - INFO - Iter [39800/160000]	lr: 7.753e-03, eta: 1 day, 7:25:19, time: 1.592, data_time: 0.723, memory: 4777, decode.loss_seg: 1.0071, decode.acc_seg: 53.2467, loss: 1.0071
2021-08-14 13:07:31,895 - mmseg - INFO - Iter [39850/160000]	lr: 7.750e-03, eta: 1 day, 7:24:22, time: 0.875, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0425, decode.acc_seg: 52.1114, loss: 1.0425
2021-08-14 13:08:16,029 - mmseg - INFO - Iter [39900/160000]	lr: 7.747e-03, eta: 1 day, 7:23:26, time: 0.882, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0457, decode.acc_seg: 52.8649, loss: 1.0457
2021-08-14 13:08:59,683 - mmseg - INFO - Iter [39950/160000]	lr: 7.745e-03, eta: 1 day, 7:22:29, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0371, decode.acc_seg: 53.1040, loss: 1.0371
2021-08-14 13:09:43,766 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 13:09:43,766 - mmseg - INFO - Iter [40000/160000]	lr: 7.742e-03, eta: 1 day, 7:21:33, time: 0.882, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0386, decode.acc_seg: 52.9041, loss: 1.0386
2021-08-14 13:10:26,821 - mmseg - INFO - Iter [40050/160000]	lr: 7.739e-03, eta: 1 day, 7:20:34, time: 0.861, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0301, decode.acc_seg: 53.3343, loss: 1.0301
2021-08-14 13:11:10,760 - mmseg - INFO - Iter [40100/160000]	lr: 7.736e-03, eta: 1 day, 7:19:37, time: 0.879, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0415, decode.acc_seg: 52.3185, loss: 1.0415
2021-08-14 13:11:53,652 - mmseg - INFO - Iter [40150/160000]	lr: 7.733e-03, eta: 1 day, 7:18:38, time: 0.858, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0472, decode.acc_seg: 52.7847, loss: 1.0472
2021-08-14 13:12:37,006 - mmseg - INFO - Iter [40200/160000]	lr: 7.730e-03, eta: 1 day, 7:17:40, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0006, decode.acc_seg: 52.8236, loss: 1.0006
2021-08-14 13:13:20,597 - mmseg - INFO - Iter [40250/160000]	lr: 7.727e-03, eta: 1 day, 7:16:43, time: 0.871, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0488, decode.acc_seg: 53.0007, loss: 1.0488
2021-08-14 13:14:04,401 - mmseg - INFO - Iter [40300/160000]	lr: 7.725e-03, eta: 1 day, 7:15:46, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0577, decode.acc_seg: 52.3206, loss: 1.0577
2021-08-14 13:14:47,170 - mmseg - INFO - Iter [40350/160000]	lr: 7.722e-03, eta: 1 day, 7:14:47, time: 0.855, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0165, decode.acc_seg: 52.7327, loss: 1.0165
2021-08-14 13:16:05,444 - mmseg - INFO - Iter [40400/160000]	lr: 7.719e-03, eta: 1 day, 7:15:32, time: 1.566, data_time: 0.709, memory: 4777, decode.loss_seg: 1.0291, decode.acc_seg: 52.0343, loss: 1.0291
2021-08-14 13:16:49,187 - mmseg - INFO - Iter [40450/160000]	lr: 7.716e-03, eta: 1 day, 7:14:36, time: 0.875, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0317, decode.acc_seg: 52.9085, loss: 1.0317
2021-08-14 13:17:33,421 - mmseg - INFO - Iter [40500/160000]	lr: 7.713e-03, eta: 1 day, 7:13:40, time: 0.884, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0163, decode.acc_seg: 52.9559, loss: 1.0163
2021-08-14 13:18:17,470 - mmseg - INFO - Iter [40550/160000]	lr: 7.710e-03, eta: 1 day, 7:12:44, time: 0.881, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0584, decode.acc_seg: 52.8322, loss: 1.0584
2021-08-14 13:19:01,482 - mmseg - INFO - Iter [40600/160000]	lr: 7.707e-03, eta: 1 day, 7:11:48, time: 0.881, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0241, decode.acc_seg: 52.3008, loss: 1.0241
2021-08-14 13:19:46,185 - mmseg - INFO - Iter [40650/160000]	lr: 7.705e-03, eta: 1 day, 7:10:54, time: 0.893, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0397, decode.acc_seg: 52.2108, loss: 1.0397
2021-08-14 13:20:30,963 - mmseg - INFO - Iter [40700/160000]	lr: 7.702e-03, eta: 1 day, 7:10:01, time: 0.896, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0183, decode.acc_seg: 52.6969, loss: 1.0183
2021-08-14 13:21:16,641 - mmseg - INFO - Iter [40750/160000]	lr: 7.699e-03, eta: 1 day, 7:09:10, time: 0.913, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0313, decode.acc_seg: 53.2065, loss: 1.0313
2021-08-14 13:22:01,185 - mmseg - INFO - Iter [40800/160000]	lr: 7.696e-03, eta: 1 day, 7:08:16, time: 0.891, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0523, decode.acc_seg: 52.4674, loss: 1.0523
2021-08-14 13:22:45,301 - mmseg - INFO - Iter [40850/160000]	lr: 7.693e-03, eta: 1 day, 7:07:20, time: 0.883, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0432, decode.acc_seg: 52.3465, loss: 1.0432
2021-08-14 13:23:29,707 - mmseg - INFO - Iter [40900/160000]	lr: 7.690e-03, eta: 1 day, 7:06:26, time: 0.888, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0735, decode.acc_seg: 52.8454, loss: 1.0735
2021-08-14 13:24:14,217 - mmseg - INFO - Iter [40950/160000]	lr: 7.687e-03, eta: 1 day, 7:05:31, time: 0.890, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0355, decode.acc_seg: 53.7814, loss: 1.0355
2021-08-14 13:24:59,331 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 13:24:59,332 - mmseg - INFO - Iter [41000/160000]	lr: 7.684e-03, eta: 1 day, 7:04:39, time: 0.903, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0164, decode.acc_seg: 52.8820, loss: 1.0164
2021-08-14 13:26:19,365 - mmseg - INFO - Iter [41050/160000]	lr: 7.682e-03, eta: 1 day, 7:05:27, time: 1.601, data_time: 0.733, memory: 4777, decode.loss_seg: 1.0164, decode.acc_seg: 54.0425, loss: 1.0164
2021-08-14 13:27:05,209 - mmseg - INFO - Iter [41100/160000]	lr: 7.679e-03, eta: 1 day, 7:04:37, time: 0.916, data_time: 0.010, memory: 4777, decode.loss_seg: 0.9946, decode.acc_seg: 53.3593, loss: 0.9946
2021-08-14 13:27:49,377 - mmseg - INFO - Iter [41150/160000]	lr: 7.676e-03, eta: 1 day, 7:03:41, time: 0.884, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0527, decode.acc_seg: 52.8441, loss: 1.0527
2021-08-14 13:28:33,052 - mmseg - INFO - Iter [41200/160000]	lr: 7.673e-03, eta: 1 day, 7:02:45, time: 0.874, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0167, decode.acc_seg: 53.7320, loss: 1.0167
2021-08-14 13:29:16,882 - mmseg - INFO - Iter [41250/160000]	lr: 7.670e-03, eta: 1 day, 7:01:48, time: 0.876, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0400, decode.acc_seg: 53.2018, loss: 1.0400
2021-08-14 13:30:02,136 - mmseg - INFO - Iter [41300/160000]	lr: 7.667e-03, eta: 1 day, 7:00:56, time: 0.905, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0007, decode.acc_seg: 52.9799, loss: 1.0007
2021-08-14 13:30:45,712 - mmseg - INFO - Iter [41350/160000]	lr: 7.664e-03, eta: 1 day, 6:59:59, time: 0.872, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0305, decode.acc_seg: 53.0793, loss: 1.0305
2021-08-14 13:31:29,833 - mmseg - INFO - Iter [41400/160000]	lr: 7.661e-03, eta: 1 day, 6:59:04, time: 0.882, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0455, decode.acc_seg: 52.2994, loss: 1.0455
2021-08-14 13:32:13,459 - mmseg - INFO - Iter [41450/160000]	lr: 7.659e-03, eta: 1 day, 6:58:07, time: 0.872, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0516, decode.acc_seg: 52.0020, loss: 1.0516
2021-08-14 13:32:56,794 - mmseg - INFO - Iter [41500/160000]	lr: 7.656e-03, eta: 1 day, 6:57:10, time: 0.867, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0484, decode.acc_seg: 52.4887, loss: 1.0484
2021-08-14 13:33:39,797 - mmseg - INFO - Iter [41550/160000]	lr: 7.653e-03, eta: 1 day, 6:56:11, time: 0.860, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0064, decode.acc_seg: 52.6282, loss: 1.0064
2021-08-14 13:34:22,851 - mmseg - INFO - Iter [41600/160000]	lr: 7.650e-03, eta: 1 day, 6:55:13, time: 0.861, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0381, decode.acc_seg: 53.2602, loss: 1.0381
2021-08-14 13:35:41,449 - mmseg - INFO - Iter [41650/160000]	lr: 7.647e-03, eta: 1 day, 6:55:56, time: 1.572, data_time: 0.711, memory: 4777, decode.loss_seg: 1.0430, decode.acc_seg: 52.7398, loss: 1.0430
2021-08-14 13:36:25,108 - mmseg - INFO - Iter [41700/160000]	lr: 7.644e-03, eta: 1 day, 6:54:59, time: 0.874, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9813, decode.acc_seg: 53.1275, loss: 0.9813
2021-08-14 13:37:07,873 - mmseg - INFO - Iter [41750/160000]	lr: 7.641e-03, eta: 1 day, 6:54:00, time: 0.855, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0001, decode.acc_seg: 54.2249, loss: 1.0001
2021-08-14 13:37:51,788 - mmseg - INFO - Iter [41800/160000]	lr: 7.639e-03, eta: 1 day, 6:53:04, time: 0.879, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9891, decode.acc_seg: 53.5584, loss: 0.9891
2021-08-14 13:38:34,390 - mmseg - INFO - Iter [41850/160000]	lr: 7.636e-03, eta: 1 day, 6:52:04, time: 0.852, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0592, decode.acc_seg: 52.6716, loss: 1.0592
2021-08-14 13:39:17,462 - mmseg - INFO - Iter [41900/160000]	lr: 7.633e-03, eta: 1 day, 6:51:06, time: 0.862, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0379, decode.acc_seg: 51.9822, loss: 1.0379
2021-08-14 13:40:01,554 - mmseg - INFO - Iter [41950/160000]	lr: 7.630e-03, eta: 1 day, 6:50:11, time: 0.882, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0609, decode.acc_seg: 52.0894, loss: 1.0609
2021-08-14 13:40:45,197 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 13:40:45,198 - mmseg - INFO - Iter [42000/160000]	lr: 7.627e-03, eta: 1 day, 6:49:15, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0162, decode.acc_seg: 52.4863, loss: 1.0162
2021-08-14 13:41:28,328 - mmseg - INFO - Iter [42050/160000]	lr: 7.624e-03, eta: 1 day, 6:48:17, time: 0.863, data_time: 0.010, memory: 4777, decode.loss_seg: 0.9933, decode.acc_seg: 52.5940, loss: 0.9933
2021-08-14 13:42:11,508 - mmseg - INFO - Iter [42100/160000]	lr: 7.621e-03, eta: 1 day, 6:47:19, time: 0.864, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0316, decode.acc_seg: 52.2279, loss: 1.0316
2021-08-14 13:42:54,227 - mmseg - INFO - Iter [42150/160000]	lr: 7.618e-03, eta: 1 day, 6:46:20, time: 0.854, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0282, decode.acc_seg: 52.5068, loss: 1.0282
2021-08-14 13:43:38,034 - mmseg - INFO - Iter [42200/160000]	lr: 7.616e-03, eta: 1 day, 6:45:24, time: 0.876, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0469, decode.acc_seg: 51.8263, loss: 1.0469
2021-08-14 13:44:20,969 - mmseg - INFO - Iter [42250/160000]	lr: 7.613e-03, eta: 1 day, 6:44:26, time: 0.859, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0701, decode.acc_seg: 51.6990, loss: 1.0701
2021-08-14 13:45:40,036 - mmseg - INFO - Iter [42300/160000]	lr: 7.610e-03, eta: 1 day, 6:45:08, time: 1.582, data_time: 0.721, memory: 4777, decode.loss_seg: 1.0188, decode.acc_seg: 52.5482, loss: 1.0188
2021-08-14 13:46:23,167 - mmseg - INFO - Iter [42350/160000]	lr: 7.607e-03, eta: 1 day, 6:44:10, time: 0.863, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9824, decode.acc_seg: 53.1439, loss: 0.9824
2021-08-14 13:47:07,453 - mmseg - INFO - Iter [42400/160000]	lr: 7.604e-03, eta: 1 day, 6:43:15, time: 0.886, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0066, decode.acc_seg: 52.7629, loss: 1.0066
2021-08-14 13:47:51,049 - mmseg - INFO - Iter [42450/160000]	lr: 7.601e-03, eta: 1 day, 6:42:19, time: 0.872, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0430, decode.acc_seg: 52.0083, loss: 1.0430
2021-08-14 13:48:34,605 - mmseg - INFO - Iter [42500/160000]	lr: 7.598e-03, eta: 1 day, 6:41:22, time: 0.872, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0159, decode.acc_seg: 53.8577, loss: 1.0159
2021-08-14 13:49:17,830 - mmseg - INFO - Iter [42550/160000]	lr: 7.595e-03, eta: 1 day, 6:40:25, time: 0.864, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0170, decode.acc_seg: 52.9720, loss: 1.0170
2021-08-14 13:50:01,182 - mmseg - INFO - Iter [42600/160000]	lr: 7.593e-03, eta: 1 day, 6:39:28, time: 0.867, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0342, decode.acc_seg: 53.4065, loss: 1.0342
2021-08-14 13:50:44,447 - mmseg - INFO - Iter [42650/160000]	lr: 7.590e-03, eta: 1 day, 6:38:30, time: 0.865, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0382, decode.acc_seg: 52.4064, loss: 1.0382
2021-08-14 13:51:28,464 - mmseg - INFO - Iter [42700/160000]	lr: 7.587e-03, eta: 1 day, 6:37:35, time: 0.881, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0228, decode.acc_seg: 52.5620, loss: 1.0228
2021-08-14 13:52:11,762 - mmseg - INFO - Iter [42750/160000]	lr: 7.584e-03, eta: 1 day, 6:36:38, time: 0.866, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0228, decode.acc_seg: 53.3298, loss: 1.0228
2021-08-14 13:52:55,135 - mmseg - INFO - Iter [42800/160000]	lr: 7.581e-03, eta: 1 day, 6:35:41, time: 0.868, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9895, decode.acc_seg: 54.7426, loss: 0.9895
2021-08-14 13:53:39,114 - mmseg - INFO - Iter [42850/160000]	lr: 7.578e-03, eta: 1 day, 6:34:46, time: 0.880, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0452, decode.acc_seg: 52.9230, loss: 1.0452
2021-08-14 13:54:21,815 - mmseg - INFO - Iter [42900/160000]	lr: 7.575e-03, eta: 1 day, 6:33:47, time: 0.854, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0334, decode.acc_seg: 52.3559, loss: 1.0334
2021-08-14 13:55:39,111 - mmseg - INFO - Iter [42950/160000]	lr: 7.572e-03, eta: 1 day, 6:34:23, time: 1.546, data_time: 0.703, memory: 4777, decode.loss_seg: 0.9853, decode.acc_seg: 52.9665, loss: 0.9853
2021-08-14 13:56:23,847 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 13:56:23,848 - mmseg - INFO - Iter [43000/160000]	lr: 7.570e-03, eta: 1 day, 6:33:30, time: 0.894, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9671, decode.acc_seg: 54.0780, loss: 0.9671
2021-08-14 13:57:07,726 - mmseg - INFO - Iter [43050/160000]	lr: 7.567e-03, eta: 1 day, 6:32:34, time: 0.878, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0134, decode.acc_seg: 53.7289, loss: 1.0134
2021-08-14 13:57:52,833 - mmseg - INFO - Iter [43100/160000]	lr: 7.564e-03, eta: 1 day, 6:31:42, time: 0.902, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0294, decode.acc_seg: 52.3280, loss: 1.0294
2021-08-14 13:58:36,806 - mmseg - INFO - Iter [43150/160000]	lr: 7.561e-03, eta: 1 day, 6:30:47, time: 0.879, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9846, decode.acc_seg: 53.7445, loss: 0.9846
2021-08-14 13:59:20,216 - mmseg - INFO - Iter [43200/160000]	lr: 7.558e-03, eta: 1 day, 6:29:50, time: 0.868, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0158, decode.acc_seg: 53.9387, loss: 1.0158
2021-08-14 14:00:03,539 - mmseg - INFO - Iter [43250/160000]	lr: 7.555e-03, eta: 1 day, 6:28:53, time: 0.866, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0650, decode.acc_seg: 51.6149, loss: 1.0650
2021-08-14 14:00:47,325 - mmseg - INFO - Iter [43300/160000]	lr: 7.552e-03, eta: 1 day, 6:27:58, time: 0.876, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0455, decode.acc_seg: 53.0186, loss: 1.0455
2021-08-14 14:01:30,975 - mmseg - INFO - Iter [43350/160000]	lr: 7.549e-03, eta: 1 day, 6:27:02, time: 0.873, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0314, decode.acc_seg: 52.4263, loss: 1.0314
2021-08-14 14:02:14,888 - mmseg - INFO - Iter [43400/160000]	lr: 7.547e-03, eta: 1 day, 6:26:06, time: 0.879, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0719, decode.acc_seg: 51.9357, loss: 1.0719
2021-08-14 14:02:58,318 - mmseg - INFO - Iter [43450/160000]	lr: 7.544e-03, eta: 1 day, 6:25:10, time: 0.869, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0289, decode.acc_seg: 52.7737, loss: 1.0289
2021-08-14 14:03:41,409 - mmseg - INFO - Iter [43500/160000]	lr: 7.541e-03, eta: 1 day, 6:24:12, time: 0.861, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0057, decode.acc_seg: 54.1682, loss: 1.0057
2021-08-14 14:04:59,803 - mmseg - INFO - Iter [43550/160000]	lr: 7.538e-03, eta: 1 day, 6:24:49, time: 1.568, data_time: 0.723, memory: 4777, decode.loss_seg: 1.0235, decode.acc_seg: 53.2124, loss: 1.0235
2021-08-14 14:05:43,581 - mmseg - INFO - Iter [43600/160000]	lr: 7.535e-03, eta: 1 day, 6:23:54, time: 0.876, data_time: 0.012, memory: 4777, decode.loss_seg: 0.9696, decode.acc_seg: 53.4372, loss: 0.9696
2021-08-14 14:06:27,334 - mmseg - INFO - Iter [43650/160000]	lr: 7.532e-03, eta: 1 day, 6:22:58, time: 0.875, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0206, decode.acc_seg: 52.5220, loss: 1.0206
2021-08-14 14:07:11,258 - mmseg - INFO - Iter [43700/160000]	lr: 7.529e-03, eta: 1 day, 6:22:03, time: 0.878, data_time: 0.012, memory: 4777, decode.loss_seg: 0.9880, decode.acc_seg: 53.8136, loss: 0.9880
2021-08-14 14:07:55,435 - mmseg - INFO - Iter [43750/160000]	lr: 7.527e-03, eta: 1 day, 6:21:08, time: 0.883, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0099, decode.acc_seg: 53.7002, loss: 1.0099
2021-08-14 14:08:39,720 - mmseg - INFO - Iter [43800/160000]	lr: 7.524e-03, eta: 1 day, 6:20:14, time: 0.886, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0453, decode.acc_seg: 51.8899, loss: 1.0453
2021-08-14 14:09:22,567 - mmseg - INFO - Iter [43850/160000]	lr: 7.521e-03, eta: 1 day, 6:19:16, time: 0.857, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9828, decode.acc_seg: 53.9987, loss: 0.9828
2021-08-14 14:10:06,294 - mmseg - INFO - Iter [43900/160000]	lr: 7.518e-03, eta: 1 day, 6:18:21, time: 0.875, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0068, decode.acc_seg: 53.3404, loss: 1.0068
2021-08-14 14:10:49,184 - mmseg - INFO - Iter [43950/160000]	lr: 7.515e-03, eta: 1 day, 6:17:23, time: 0.858, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0870, decode.acc_seg: 52.2759, loss: 1.0870
2021-08-14 14:11:32,735 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 14:11:32,735 - mmseg - INFO - Iter [44000/160000]	lr: 7.512e-03, eta: 1 day, 6:16:27, time: 0.871, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0036, decode.acc_seg: 52.8055, loss: 1.0036
2021-08-14 14:12:16,788 - mmseg - INFO - Iter [44050/160000]	lr: 7.509e-03, eta: 1 day, 6:15:32, time: 0.881, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0217, decode.acc_seg: 52.6870, loss: 1.0217
2021-08-14 14:12:59,533 - mmseg - INFO - Iter [44100/160000]	lr: 7.506e-03, eta: 1 day, 6:14:34, time: 0.855, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0503, decode.acc_seg: 52.2159, loss: 1.0503
2021-08-14 14:13:43,137 - mmseg - INFO - Iter [44150/160000]	lr: 7.503e-03, eta: 1 day, 6:13:38, time: 0.873, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0130, decode.acc_seg: 53.3092, loss: 1.0130
2021-08-14 14:15:01,974 - mmseg - INFO - Iter [44200/160000]	lr: 7.501e-03, eta: 1 day, 6:14:15, time: 1.576, data_time: 0.723, memory: 4777, decode.loss_seg: 0.9996, decode.acc_seg: 54.1100, loss: 0.9996
2021-08-14 14:15:46,796 - mmseg - INFO - Iter [44250/160000]	lr: 7.498e-03, eta: 1 day, 6:13:22, time: 0.897, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0042, decode.acc_seg: 53.0179, loss: 1.0042
2021-08-14 14:16:31,997 - mmseg - INFO - Iter [44300/160000]	lr: 7.495e-03, eta: 1 day, 6:12:30, time: 0.904, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0812, decode.acc_seg: 53.0264, loss: 1.0812
2021-08-14 14:17:15,501 - mmseg - INFO - Iter [44350/160000]	lr: 7.492e-03, eta: 1 day, 6:11:34, time: 0.870, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0113, decode.acc_seg: 53.3437, loss: 1.0113
2021-08-14 14:17:59,753 - mmseg - INFO - Iter [44400/160000]	lr: 7.489e-03, eta: 1 day, 6:10:40, time: 0.885, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0260, decode.acc_seg: 52.9039, loss: 1.0260
2021-08-14 14:18:45,134 - mmseg - INFO - Iter [44450/160000]	lr: 7.486e-03, eta: 1 day, 6:09:49, time: 0.908, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0112, decode.acc_seg: 52.8700, loss: 1.0112
2021-08-14 14:19:28,411 - mmseg - INFO - Iter [44500/160000]	lr: 7.483e-03, eta: 1 day, 6:08:52, time: 0.866, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0184, decode.acc_seg: 53.3848, loss: 1.0184
2021-08-14 14:20:13,180 - mmseg - INFO - Iter [44550/160000]	lr: 7.480e-03, eta: 1 day, 6:08:00, time: 0.895, data_time: 0.010, memory: 4777, decode.loss_seg: 0.9778, decode.acc_seg: 53.6663, loss: 0.9778
2021-08-14 14:20:58,469 - mmseg - INFO - Iter [44600/160000]	lr: 7.478e-03, eta: 1 day, 6:07:08, time: 0.905, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0264, decode.acc_seg: 52.7397, loss: 1.0264
2021-08-14 14:21:43,134 - mmseg - INFO - Iter [44650/160000]	lr: 7.475e-03, eta: 1 day, 6:06:15, time: 0.894, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0352, decode.acc_seg: 52.9558, loss: 1.0352
2021-08-14 14:22:27,228 - mmseg - INFO - Iter [44700/160000]	lr: 7.472e-03, eta: 1 day, 6:05:21, time: 0.881, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0099, decode.acc_seg: 54.1225, loss: 1.0099
2021-08-14 14:23:11,066 - mmseg - INFO - Iter [44750/160000]	lr: 7.469e-03, eta: 1 day, 6:04:26, time: 0.877, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0431, decode.acc_seg: 52.8399, loss: 1.0431
2021-08-14 14:23:54,172 - mmseg - INFO - Iter [44800/160000]	lr: 7.466e-03, eta: 1 day, 6:03:29, time: 0.862, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0228, decode.acc_seg: 52.8569, loss: 1.0228
2021-08-14 14:25:12,800 - mmseg - INFO - Iter [44850/160000]	lr: 7.463e-03, eta: 1 day, 6:04:03, time: 1.572, data_time: 0.706, memory: 4777, decode.loss_seg: 0.9860, decode.acc_seg: 53.4143, loss: 0.9860
2021-08-14 14:25:56,501 - mmseg - INFO - Iter [44900/160000]	lr: 7.460e-03, eta: 1 day, 6:03:08, time: 0.874, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9976, decode.acc_seg: 53.8837, loss: 0.9976
2021-08-14 14:26:39,795 - mmseg - INFO - Iter [44950/160000]	lr: 7.457e-03, eta: 1 day, 6:02:11, time: 0.866, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0053, decode.acc_seg: 53.5750, loss: 1.0053
2021-08-14 14:27:23,085 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 14:27:23,085 - mmseg - INFO - Iter [45000/160000]	lr: 7.455e-03, eta: 1 day, 6:01:15, time: 0.866, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0101, decode.acc_seg: 53.4047, loss: 1.0101
2021-08-14 14:28:06,584 - mmseg - INFO - Iter [45050/160000]	lr: 7.452e-03, eta: 1 day, 6:00:19, time: 0.870, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0101, decode.acc_seg: 52.1773, loss: 1.0101
2021-08-14 14:28:50,513 - mmseg - INFO - Iter [45100/160000]	lr: 7.449e-03, eta: 1 day, 5:59:24, time: 0.879, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9985, decode.acc_seg: 52.9933, loss: 0.9985
2021-08-14 14:29:34,499 - mmseg - INFO - Iter [45150/160000]	lr: 7.446e-03, eta: 1 day, 5:58:29, time: 0.879, data_time: 0.010, memory: 4777, decode.loss_seg: 0.9962, decode.acc_seg: 53.2415, loss: 0.9962
2021-08-14 14:30:17,530 - mmseg - INFO - Iter [45200/160000]	lr: 7.443e-03, eta: 1 day, 5:57:33, time: 0.861, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0090, decode.acc_seg: 52.8209, loss: 1.0090
2021-08-14 14:31:00,843 - mmseg - INFO - Iter [45250/160000]	lr: 7.440e-03, eta: 1 day, 5:56:36, time: 0.866, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0419, decode.acc_seg: 52.4817, loss: 1.0419
2021-08-14 14:31:45,530 - mmseg - INFO - Iter [45300/160000]	lr: 7.437e-03, eta: 1 day, 5:55:43, time: 0.894, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0360, decode.acc_seg: 52.9643, loss: 1.0360
2021-08-14 14:32:30,347 - mmseg - INFO - Iter [45350/160000]	lr: 7.434e-03, eta: 1 day, 5:54:51, time: 0.896, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0352, decode.acc_seg: 52.1764, loss: 1.0352
2021-08-14 14:33:13,719 - mmseg - INFO - Iter [45400/160000]	lr: 7.432e-03, eta: 1 day, 5:53:55, time: 0.868, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0153, decode.acc_seg: 53.5847, loss: 1.0153
2021-08-14 14:34:32,596 - mmseg - INFO - Iter [45450/160000]	lr: 7.429e-03, eta: 1 day, 5:54:29, time: 1.577, data_time: 0.726, memory: 4777, decode.loss_seg: 1.0311, decode.acc_seg: 53.3163, loss: 1.0311
2021-08-14 14:35:17,422 - mmseg - INFO - Iter [45500/160000]	lr: 7.426e-03, eta: 1 day, 5:53:36, time: 0.896, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9712, decode.acc_seg: 53.3857, loss: 0.9712
2021-08-14 14:36:00,541 - mmseg - INFO - Iter [45550/160000]	lr: 7.423e-03, eta: 1 day, 5:52:39, time: 0.863, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9933, decode.acc_seg: 53.8022, loss: 0.9933
2021-08-14 14:36:44,291 - mmseg - INFO - Iter [45600/160000]	lr: 7.420e-03, eta: 1 day, 5:51:44, time: 0.875, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0302, decode.acc_seg: 53.0111, loss: 1.0302
2021-08-14 14:37:27,376 - mmseg - INFO - Iter [45650/160000]	lr: 7.417e-03, eta: 1 day, 5:50:47, time: 0.862, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9981, decode.acc_seg: 53.1038, loss: 0.9981
2021-08-14 14:38:11,145 - mmseg - INFO - Iter [45700/160000]	lr: 7.414e-03, eta: 1 day, 5:49:52, time: 0.876, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0201, decode.acc_seg: 53.1215, loss: 1.0201
2021-08-14 14:38:54,364 - mmseg - INFO - Iter [45750/160000]	lr: 7.411e-03, eta: 1 day, 5:48:56, time: 0.864, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0462, decode.acc_seg: 52.7106, loss: 1.0462
2021-08-14 14:39:37,226 - mmseg - INFO - Iter [45800/160000]	lr: 7.409e-03, eta: 1 day, 5:47:59, time: 0.857, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0099, decode.acc_seg: 53.3226, loss: 1.0099
2021-08-14 14:40:22,126 - mmseg - INFO - Iter [45850/160000]	lr: 7.406e-03, eta: 1 day, 5:47:07, time: 0.898, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0327, decode.acc_seg: 52.9036, loss: 1.0327
2021-08-14 14:41:05,623 - mmseg - INFO - Iter [45900/160000]	lr: 7.403e-03, eta: 1 day, 5:46:11, time: 0.870, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0317, decode.acc_seg: 52.8941, loss: 1.0317
2021-08-14 14:41:48,268 - mmseg - INFO - Iter [45950/160000]	lr: 7.400e-03, eta: 1 day, 5:45:13, time: 0.853, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9909, decode.acc_seg: 53.8328, loss: 0.9909
2021-08-14 14:42:31,172 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 14:42:31,172 - mmseg - INFO - Iter [46000/160000]	lr: 7.397e-03, eta: 1 day, 5:44:16, time: 0.858, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0386, decode.acc_seg: 53.6360, loss: 1.0386
2021-08-14 14:43:14,284 - mmseg - INFO - Iter [46050/160000]	lr: 7.394e-03, eta: 1 day, 5:43:20, time: 0.862, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9992, decode.acc_seg: 53.0895, loss: 0.9992
2021-08-14 14:44:33,580 - mmseg - INFO - Iter [46100/160000]	lr: 7.391e-03, eta: 1 day, 5:43:53, time: 1.586, data_time: 0.732, memory: 4777, decode.loss_seg: 0.9947, decode.acc_seg: 53.6130, loss: 0.9947
2021-08-14 14:45:18,621 - mmseg - INFO - Iter [46150/160000]	lr: 7.388e-03, eta: 1 day, 5:43:01, time: 0.901, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0007, decode.acc_seg: 53.5811, loss: 1.0007
2021-08-14 14:46:04,168 - mmseg - INFO - Iter [46200/160000]	lr: 7.385e-03, eta: 1 day, 5:42:11, time: 0.911, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0265, decode.acc_seg: 53.3315, loss: 1.0265
2021-08-14 14:46:49,751 - mmseg - INFO - Iter [46250/160000]	lr: 7.383e-03, eta: 1 day, 5:41:20, time: 0.911, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0113, decode.acc_seg: 53.3507, loss: 1.0113
2021-08-14 14:47:32,754 - mmseg - INFO - Iter [46300/160000]	lr: 7.380e-03, eta: 1 day, 5:40:23, time: 0.861, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0024, decode.acc_seg: 52.7160, loss: 1.0024
2021-08-14 14:48:16,260 - mmseg - INFO - Iter [46350/160000]	lr: 7.377e-03, eta: 1 day, 5:39:28, time: 0.870, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0264, decode.acc_seg: 52.0720, loss: 1.0264
2021-08-14 14:48:59,417 - mmseg - INFO - Iter [46400/160000]	lr: 7.374e-03, eta: 1 day, 5:38:32, time: 0.863, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0170, decode.acc_seg: 52.3476, loss: 1.0170
2021-08-14 14:49:43,093 - mmseg - INFO - Iter [46450/160000]	lr: 7.371e-03, eta: 1 day, 5:37:37, time: 0.874, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0078, decode.acc_seg: 53.5617, loss: 1.0078
2021-08-14 14:50:26,864 - mmseg - INFO - Iter [46500/160000]	lr: 7.368e-03, eta: 1 day, 5:36:42, time: 0.875, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0196, decode.acc_seg: 52.9066, loss: 1.0196
2021-08-14 14:51:10,185 - mmseg - INFO - Iter [46550/160000]	lr: 7.365e-03, eta: 1 day, 5:35:46, time: 0.867, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9864, decode.acc_seg: 53.8963, loss: 0.9864
2021-08-14 14:51:54,756 - mmseg - INFO - Iter [46600/160000]	lr: 7.362e-03, eta: 1 day, 5:34:53, time: 0.891, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0107, decode.acc_seg: 53.1683, loss: 1.0107
2021-08-14 14:52:38,877 - mmseg - INFO - Iter [46650/160000]	lr: 7.360e-03, eta: 1 day, 5:33:59, time: 0.883, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0324, decode.acc_seg: 53.4094, loss: 1.0324
2021-08-14 14:53:58,044 - mmseg - INFO - Iter [46700/160000]	lr: 7.357e-03, eta: 1 day, 5:34:31, time: 1.583, data_time: 0.736, memory: 4777, decode.loss_seg: 1.0340, decode.acc_seg: 53.2993, loss: 1.0340
2021-08-14 14:54:40,934 - mmseg - INFO - Iter [46750/160000]	lr: 7.354e-03, eta: 1 day, 5:33:34, time: 0.858, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0076, decode.acc_seg: 53.3967, loss: 1.0076
2021-08-14 14:55:25,506 - mmseg - INFO - Iter [46800/160000]	lr: 7.351e-03, eta: 1 day, 5:32:41, time: 0.891, data_time: 0.010, memory: 4777, decode.loss_seg: 0.9840, decode.acc_seg: 52.9939, loss: 0.9840
2021-08-14 14:56:08,830 - mmseg - INFO - Iter [46850/160000]	lr: 7.348e-03, eta: 1 day, 5:31:45, time: 0.867, data_time: 0.012, memory: 4777, decode.loss_seg: 0.9636, decode.acc_seg: 53.3215, loss: 0.9636
2021-08-14 14:56:52,421 - mmseg - INFO - Iter [46900/160000]	lr: 7.345e-03, eta: 1 day, 5:30:50, time: 0.871, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0214, decode.acc_seg: 53.4093, loss: 1.0214
2021-08-14 14:57:36,148 - mmseg - INFO - Iter [46950/160000]	lr: 7.342e-03, eta: 1 day, 5:29:55, time: 0.875, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0078, decode.acc_seg: 54.2171, loss: 1.0078
2021-08-14 14:58:19,108 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 14:58:19,109 - mmseg - INFO - Iter [47000/160000]	lr: 7.339e-03, eta: 1 day, 5:28:59, time: 0.859, data_time: 0.010, memory: 4777, decode.loss_seg: 0.9851, decode.acc_seg: 54.0904, loss: 0.9851
2021-08-14 14:59:03,395 - mmseg - INFO - Iter [47050/160000]	lr: 7.336e-03, eta: 1 day, 5:28:05, time: 0.886, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0255, decode.acc_seg: 52.8428, loss: 1.0255
2021-08-14 14:59:47,442 - mmseg - INFO - Iter [47100/160000]	lr: 7.334e-03, eta: 1 day, 5:27:11, time: 0.880, data_time: 0.010, memory: 4777, decode.loss_seg: 0.9927, decode.acc_seg: 52.9655, loss: 0.9927
2021-08-14 15:00:30,795 - mmseg - INFO - Iter [47150/160000]	lr: 7.331e-03, eta: 1 day, 5:26:16, time: 0.868, data_time: 0.012, memory: 4777, decode.loss_seg: 1.0036, decode.acc_seg: 53.9098, loss: 1.0036
2021-08-14 15:01:13,789 - mmseg - INFO - Iter [47200/160000]	lr: 7.328e-03, eta: 1 day, 5:25:19, time: 0.860, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0413, decode.acc_seg: 52.7821, loss: 1.0413
2021-08-14 15:01:58,564 - mmseg - INFO - Iter [47250/160000]	lr: 7.325e-03, eta: 1 day, 5:24:27, time: 0.895, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0240, decode.acc_seg: 52.7247, loss: 1.0240
2021-08-14 15:02:42,535 - mmseg - INFO - Iter [47300/160000]	lr: 7.322e-03, eta: 1 day, 5:23:33, time: 0.880, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0584, decode.acc_seg: 52.8982, loss: 1.0584
2021-08-14 15:04:02,801 - mmseg - INFO - Iter [47350/160000]	lr: 7.319e-03, eta: 1 day, 5:24:05, time: 1.605, data_time: 0.736, memory: 4777, decode.loss_seg: 0.9910, decode.acc_seg: 53.4670, loss: 0.9910
2021-08-14 15:04:46,822 - mmseg - INFO - Iter [47400/160000]	lr: 7.316e-03, eta: 1 day, 5:23:11, time: 0.880, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9989, decode.acc_seg: 52.2902, loss: 0.9989
2021-08-14 15:05:30,277 - mmseg - INFO - Iter [47450/160000]	lr: 7.313e-03, eta: 1 day, 5:22:16, time: 0.869, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0134, decode.acc_seg: 53.0628, loss: 1.0134
2021-08-14 15:06:13,960 - mmseg - INFO - Iter [47500/160000]	lr: 7.311e-03, eta: 1 day, 5:21:21, time: 0.874, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0167, decode.acc_seg: 53.5436, loss: 1.0167
2021-08-14 15:06:57,804 - mmseg - INFO - Iter [47550/160000]	lr: 7.308e-03, eta: 1 day, 5:20:27, time: 0.877, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0257, decode.acc_seg: 52.5565, loss: 1.0257
2021-08-14 15:07:41,359 - mmseg - INFO - Iter [47600/160000]	lr: 7.305e-03, eta: 1 day, 5:19:32, time: 0.871, data_time: 0.010, memory: 4777, decode.loss_seg: 0.9813, decode.acc_seg: 53.9388, loss: 0.9813
2021-08-14 15:08:24,815 - mmseg - INFO - Iter [47650/160000]	lr: 7.302e-03, eta: 1 day, 5:18:37, time: 0.869, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0416, decode.acc_seg: 53.8784, loss: 1.0416
2021-08-14 15:09:08,351 - mmseg - INFO - Iter [47700/160000]	lr: 7.299e-03, eta: 1 day, 5:17:42, time: 0.871, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9845, decode.acc_seg: 54.9922, loss: 0.9845
2021-08-14 15:09:52,497 - mmseg - INFO - Iter [47750/160000]	lr: 7.296e-03, eta: 1 day, 5:16:48, time: 0.883, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0293, decode.acc_seg: 51.9768, loss: 1.0293
2021-08-14 15:10:36,037 - mmseg - INFO - Iter [47800/160000]	lr: 7.293e-03, eta: 1 day, 5:15:53, time: 0.870, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9969, decode.acc_seg: 53.8608, loss: 0.9969
2021-08-14 15:11:20,093 - mmseg - INFO - Iter [47850/160000]	lr: 7.290e-03, eta: 1 day, 5:14:59, time: 0.881, data_time: 0.011, memory: 4777, decode.loss_seg: 1.0299, decode.acc_seg: 53.4159, loss: 1.0299
2021-08-14 15:12:04,498 - mmseg - INFO - Iter [47900/160000]	lr: 7.287e-03, eta: 1 day, 5:14:06, time: 0.889, data_time: 0.011, memory: 4777, decode.loss_seg: 0.9976, decode.acc_seg: 53.4464, loss: 0.9976
2021-08-14 15:12:47,663 - mmseg - INFO - Iter [47950/160000]	lr: 7.285e-03, eta: 1 day, 5:13:11, time: 0.863, data_time: 0.010, memory: 4777, decode.loss_seg: 1.0137, decode.acc_seg: 54.2642, loss: 1.0137
2021-08-14 15:14:06,909 - mmseg - INFO - Saving checkpoint at 48000 iterations
2021-08-14 15:14:07,274 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-without-head_512x512_160k_ade20k.py
2021-08-14 15:14:07,274 - mmseg - INFO - Iter [48000/160000]	lr: 7.282e-03, eta: 1 day, 5:13:40, time: 1.593, data_time: 0.709, memory: 4777, decode.loss_seg: 0.9660, decode.acc_seg: 53.7348, loss: 0.9660
