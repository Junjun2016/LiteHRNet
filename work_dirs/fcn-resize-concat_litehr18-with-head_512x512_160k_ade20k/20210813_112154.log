2021-08-13 11:21:55,141 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.6 (default, Jan  8 2020, 19:59:22) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3,4,5,6,7: TITAN Xp
CUDA_HOME: /mnt/lustre/share/polaris/dep/cuda-9.0-cudnn7.6.5
NVCC: Cuda compilation tools, release 9.0, V9.0.176
GCC: gcc (GCC) 5.4.0
PyTorch: 1.5.0
PyTorch compiling details: PyTorch built with:
  - GCC 5.4
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.1 Product Build 20200208 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 912ce228837d1ce28e1a61806118835de03f5751)
  - OpenMP 201307 (a.k.a. OpenMP 4.0)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 9.0
  - NVCC architecture flags: -gencode;arch=compute_52,code=sm_52;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_70,code=compute_70
  - CuDNN 7.6.5
  - Magma 2.5.0
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.6.0
OpenCV: 4.2.0
MMCV: 1.3.11
MMCV Compiler: n/a
MMCV CUDA Compiler: n/a
MMSegmentation: 0.16.0+2bb6f37
------------------------------------------------------------

2021-08-13 11:21:55,143 - mmseg - INFO - Distributed training: True
2021-08-13 11:21:55,553 - mmseg - INFO - Config:
norm_cfg = dict(type='SyncBN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    backbone=dict(
        type='LiteHRNet',
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        norm_eval=False,
        extra=dict(
            stem=dict(stem_channels=32, out_channels=32, expand_ratio=1),
            num_stages=3,
            stages_spec=dict(
                num_modules=(2, 4, 2),
                num_branches=(2, 3, 4),
                num_blocks=(2, 2, 2),
                module_type=('LITE', 'LITE', 'LITE'),
                with_fuse=(True, True, True),
                reduce_ratios=(8, 8, 8),
                num_channels=((40, 80), (40, 80, 160), (40, 80, 160, 320))),
            with_head=True)),
    decode_head=dict(
        type='FCNHead',
        in_channels=[40, 40, 80, 160],
        in_index=(0, 1, 2, 3),
        channels=320,
        input_transform='resize_concat',
        kernel_size=1,
        num_convs=1,
        concat_input=False,
        dropout_ratio=-1,
        num_classes=150,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'ADE20KDataset'
data_root = 'data/ade/ADEChallengeData2016'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (512, 512)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', reduce_zero_label=True),
    dict(type='Resize', img_scale=(2048, 512), ratio_range=(0.5, 2.0)),
    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 512),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=4,
    train=dict(
        type='ADE20KDataset',
        data_root='data/ade/ADEChallengeData2016',
        img_dir='images/training',
        ann_dir='annotations/training',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', reduce_zero_label=True),
            dict(type='Resize', img_scale=(2048, 512), ratio_range=(0.5, 2.0)),
            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='ADE20KDataset',
        data_root='data/ade/ADEChallengeData2016',
        img_dir='images/validation',
        ann_dir='annotations/validation',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='ADE20KDataset',
        data_root='data/ade/ADEChallengeData2016',
        img_dir='images/validation',
        ann_dir='annotations/validation',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optimizer_config = dict()
lr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)
runner = dict(type='IterBasedRunner', max_iters=160000)
checkpoint_config = dict(by_epoch=False, interval=16000)
evaluation = dict(interval=16000, metric='mIoU')
work_dir = './work_dirs/fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k'
gpu_ids = range(0, 1)

2021-08-13 11:21:55,553 - mmseg - INFO - Set random seed to 0, deterministic: False
2021-08-13 11:21:55,999 - mmseg - INFO - initialize LiteHRNet with init_cfg [{'type': 'Normal', 'std': 0.001, 'layer': 'Conv2d'}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2021-08-13 11:21:56,333 - mmseg - INFO - initialize FCNHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
Name of parameter - Initialization information

backbone.stem.conv1.conv.weight - torch.Size([32, 3, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.stem.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.branch1.0.conv.weight - torch.Size([16, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stem.branch1.0.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.branch1.0.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.branch1.1.conv.weight - torch.Size([16, 16, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stem.branch1.1.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.branch1.1.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.expand_conv.conv.weight - torch.Size([32, 16, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.stem.expand_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.expand_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.depthwise_conv.conv.weight - torch.Size([32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.stem.depthwise_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.depthwise_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.linear_conv.conv.weight - torch.Size([16, 32, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.stem.linear_conv.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stem.linear_conv.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.0.0.weight - torch.Size([32, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition0.0.1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.0.1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.0.2.weight - torch.Size([40, 32, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.1.0.0.weight - torch.Size([32, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition0.1.0.1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.1.0.1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.1.0.2.weight - torch.Size([80, 32, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition0.1.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition0.1.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([7, 60, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([60, 7, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([7, 60, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([60, 7, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.0.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.0.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([7, 60, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([60, 7, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([7, 60, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([60, 7, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([60]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage0.1.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage0.1.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition1.2.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition1.2.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition1.2.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition1.2.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition1.2.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition1.2.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.0.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.0.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.layers.1.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.layers.1.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.0.2.0.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.1.2.0.weight - torch.Size([80, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.1.2.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.1.2.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.2.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.2.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.2.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.1.2.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.2.0.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.0.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.2.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.1.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.0.fuse_layers.2.1.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.0.fuse_layers.2.1.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.0.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.0.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.layers.1.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.layers.1.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.0.2.0.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.1.2.0.weight - torch.Size([80, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.1.2.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.1.2.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.2.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.2.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.2.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.1.2.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.2.0.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.0.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.2.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.1.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.1.fuse_layers.2.1.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.1.fuse_layers.2.1.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.0.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.0.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.layers.1.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.layers.1.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.0.2.0.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.1.2.0.weight - torch.Size([80, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.1.2.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.1.2.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.2.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.2.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.2.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.1.2.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.2.0.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.0.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.2.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.1.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.2.fuse_layers.2.1.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.2.fuse_layers.2.1.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.0.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.0.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([17, 140, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([17]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([140, 17, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([140]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.layers.1.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.layers.1.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.0.2.0.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.1.2.0.weight - torch.Size([80, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.1.2.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.1.2.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.2.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.2.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.2.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.1.2.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.2.0.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.0.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.2.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.1.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage1.3.fuse_layers.2.1.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage1.3.fuse_layers.2.1.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition2.3.0.0.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition2.3.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition2.3.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition2.3.0.2.weight - torch.Size([320, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.transition2.3.0.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.transition2.3.0.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([37, 300, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([300, 37, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.3.conv.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.depthwise_convs.3.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.depthwise_convs.3.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.3.conv1.conv.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.3.conv1.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.0.spatial_weighting.3.conv2.conv.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.0.spatial_weighting.3.conv2.conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([37, 300, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([300, 37, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.3.conv.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.depthwise_convs.3.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.depthwise_convs.3.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.3.conv1.conv.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.3.conv1.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.layers.1.spatial_weighting.3.conv2.conv.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.layers.1.spatial_weighting.3.conv2.conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.0.2.0.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.0.3.0.weight - torch.Size([40, 320, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.0.3.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.0.3.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.2.0.weight - torch.Size([80, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.1.2.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.2.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.3.0.weight - torch.Size([80, 320, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.1.3.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.1.3.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.1.2.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.0.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.0.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.1.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.1.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.1.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.3.0.weight - torch.Size([160, 320, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.2.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.2.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.1.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.0.1.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.1.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.2.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.2.2.weight - torch.Size([320, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.0.2.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.0.2.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.0.2.weight - torch.Size([80, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.1.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.1.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.1.1.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.1.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.1.2.weight - torch.Size([320, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.1.1.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.1.1.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.2.0.0.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.2.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.2.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.2.0.2.weight - torch.Size([320, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.0.fuse_layers.3.2.0.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.0.fuse_layers.3.2.0.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.cross_resolution_weighting.conv1.conv.weight - torch.Size([37, 300, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.cross_resolution_weighting.conv1.bn.weight - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.cross_resolution_weighting.conv1.bn.bias - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.cross_resolution_weighting.conv2.conv.weight - torch.Size([300, 37, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.cross_resolution_weighting.conv2.bn.weight - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.cross_resolution_weighting.conv2.bn.bias - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.3.conv.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.depthwise_convs.3.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.depthwise_convs.3.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.3.conv1.conv.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.3.conv1.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.0.spatial_weighting.3.conv2.conv.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.0.spatial_weighting.3.conv2.conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.cross_resolution_weighting.conv1.conv.weight - torch.Size([37, 300, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.cross_resolution_weighting.conv1.bn.weight - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.cross_resolution_weighting.conv1.bn.bias - torch.Size([37]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.cross_resolution_weighting.conv2.conv.weight - torch.Size([300, 37, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.cross_resolution_weighting.conv2.bn.weight - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.cross_resolution_weighting.conv2.bn.bias - torch.Size([300]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.0.conv.weight - torch.Size([20, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.depthwise_convs.0.bn.weight - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.0.bn.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.1.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.depthwise_convs.1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.2.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.depthwise_convs.2.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.2.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.3.conv.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.depthwise_convs.3.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.depthwise_convs.3.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.0.conv1.conv.weight - torch.Size([5, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.0.conv1.conv.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.0.conv2.conv.weight - torch.Size([20, 5, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.0.conv2.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.1.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.1.conv1.conv.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.1.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.1.conv2.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.2.conv1.conv.weight - torch.Size([20, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.2.conv1.conv.bias - torch.Size([20]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.2.conv2.conv.weight - torch.Size([80, 20, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.2.conv2.conv.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.3.conv1.conv.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.3.conv1.conv.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.layers.1.spatial_weighting.3.conv2.conv.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.layers.1.spatial_weighting.3.conv2.conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.0.1.0.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.0.2.0.weight - torch.Size([40, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.0.3.0.weight - torch.Size([40, 320, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.0.3.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.0.3.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.1.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.0.0.2.weight - torch.Size([80, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.1.0.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.0.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.2.0.weight - torch.Size([80, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.1.2.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.2.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.3.0.weight - torch.Size([80, 320, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.1.3.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.1.3.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.1.2.weight - torch.Size([160, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.0.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.0.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.1.0.2.weight - torch.Size([160, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.1.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.1.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.3.0.weight - torch.Size([160, 320, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.2.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.2.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.0.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.0.0.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.0.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.0.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.0.0.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.0.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.1.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.0.1.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.1.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.1.2.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.0.1.3.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.1.3.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.2.0.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.0.2.1.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.2.1.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.2.2.weight - torch.Size([320, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.0.2.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.0.2.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.0.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.1.0.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.0.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.0.2.weight - torch.Size([80, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.1.0.3.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.0.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.1.0.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.1.1.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.1.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.1.2.weight - torch.Size([320, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.1.1.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.1.1.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.2.0.0.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.2.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.2.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.2.0.2.weight - torch.Size([320, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.stage2.1.fuse_layers.3.2.0.3.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.stage2.1.fuse_layers.3.2.0.3.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.0.depthwise_conv.conv.weight - torch.Size([320, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.head_layer.projects.0.depthwise_conv.bn.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.0.depthwise_conv.bn.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.0.pointwise_conv.conv.weight - torch.Size([160, 320, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.head_layer.projects.0.pointwise_conv.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.0.pointwise_conv.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.1.depthwise_conv.conv.weight - torch.Size([160, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.head_layer.projects.1.depthwise_conv.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.1.depthwise_conv.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.1.pointwise_conv.conv.weight - torch.Size([80, 160, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.head_layer.projects.1.pointwise_conv.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.1.pointwise_conv.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.2.depthwise_conv.conv.weight - torch.Size([80, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.head_layer.projects.2.depthwise_conv.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.2.depthwise_conv.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.2.pointwise_conv.conv.weight - torch.Size([40, 80, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.head_layer.projects.2.pointwise_conv.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.2.pointwise_conv.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.3.depthwise_conv.conv.weight - torch.Size([40, 1, 3, 3]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.head_layer.projects.3.depthwise_conv.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.3.depthwise_conv.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.3.pointwise_conv.conv.weight - torch.Size([40, 40, 1, 1]): 
NormalInit: mean=0, std=0.001, bias=0 

backbone.head_layer.projects.3.pointwise_conv.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.head_layer.projects.3.pointwise_conv.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.conv_seg.weight - torch.Size([150, 320, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([150]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.convs.0.conv.weight - torch.Size([320, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2021-08-13 11:21:56,397 - mmseg - INFO - EncoderDecoder(
  (backbone): LiteHRNet(
    (stem): Stem(
      (conv1): ConvModule(
        (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): ConvModule(
          (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
          (bn): SyncBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvModule(
          (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (expand_conv): ConvModule(
        (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (depthwise_conv): ConvModule(
        (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (linear_conv): ConvModule(
        (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
    (transition0): ModuleList(
      (0): Sequential(
        (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): Conv2d(32, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (4): ReLU()
      )
      (1): Sequential(
        (0): Sequential(
          (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
          (1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Conv2d(32, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU()
        )
      )
    )
    (stage0): Sequential(
      (0): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(60, 7, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(7, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(60, 7, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(7, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
          )
        )
        (relu): ReLU()
      )
      (1): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(60, 7, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(7, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(60, 7, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(7, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
          )
        )
        (relu): ReLU()
      )
    )
    (transition1): ModuleList(
      (0): None
      (1): None
      (2): Sequential(
        (0): Sequential(
          (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
          (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU()
        )
      )
    )
    (stage1): Sequential(
      (0): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (2): Sequential(
              (0): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (1): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (2): Sequential(
              (0): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (2): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (2): Sequential(
              (0): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (3): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(140, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(17, 140, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (2): Sequential(
              (0): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
    )
    (transition2): ModuleList(
      (0): None
      (1): None
      (2): None
      (3): Sequential(
        (0): Sequential(
          (0): Conv2d(160, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=160, bias=False)
          (1): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU()
        )
      )
    )
    (stage2): Sequential(
      (0): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(300, 37, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(37, 300, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (3): ConvModule(
                (conv): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)
                (bn): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (3): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(300, 37, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(37, 300, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (3): ConvModule(
                (conv): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)
                (bn): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (3): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (2): Sequential(
              (0): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
            (3): Sequential(
              (0): Conv2d(320, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=8.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (3): Sequential(
              (0): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(320, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (2): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(160, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=160, bias=False)
                (1): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
      (1): LiteHRModule(
        (layers): Sequential(
          (0): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(300, 37, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(37, 300, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (3): ConvModule(
                (conv): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)
                (bn): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (3): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
          (1): ConditionalChannelWeighting(
            (cross_resolution_weighting): CrossResolutionWeighting(
              (conv1): ConvModule(
                (conv): Conv2d(300, 37, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (conv2): ConvModule(
                (conv): Conv2d(37, 300, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): SyncBatchNorm(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): Sigmoid()
              )
            )
            (depthwise_convs): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
                (bn): SyncBatchNorm(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (1): ConvModule(
                (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
                (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (2): ConvModule(
                (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
                (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (3): ConvModule(
                (conv): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)
                (bn): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (spatial_weighting): ModuleList(
              (0): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(20, 5, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(5, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (1): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (2): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(80, 20, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(20, 80, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
              (3): SpatialWeighting(
                (global_avgpool): AdaptiveAvgPool2d(output_size=1)
                (conv1): ConvModule(
                  (conv): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
                  (activate): ReLU(inplace=True)
                )
                (conv2): ConvModule(
                  (conv): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1))
                  (activate): Sigmoid()
                )
              )
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (2): Sequential(
              (0): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
            (3): Sequential(
              (0): Conv2d(320, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=8.0, mode=nearest)
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
            (3): Sequential(
              (0): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=4.0, mode=nearest)
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(320, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample(scale_factor=2.0, mode=nearest)
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (2): Sequential(
                (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
                (1): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(40, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (4): ReLU(inplace=True)
              )
              (1): Sequential(
                (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)
                (1): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(160, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=160, bias=False)
                (1): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
    )
    (head_layer): IterativeHead(
      (projects): ModuleList(
        (0): DepthwiseSeparableConvModule(
          (depthwise_conv): ConvModule(
            (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320, bias=False)
            (bn): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise_conv): ConvModule(
            (conv): Conv2d(320, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (1): DepthwiseSeparableConvModule(
          (depthwise_conv): ConvModule(
            (conv): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)
            (bn): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise_conv): ConvModule(
            (conv): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (2): DepthwiseSeparableConvModule(
          (depthwise_conv): ConvModule(
            (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
            (bn): SyncBatchNorm(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise_conv): ConvModule(
            (conv): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (3): DepthwiseSeparableConvModule(
          (depthwise_conv): ConvModule(
            (conv): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
            (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise_conv): ConvModule(
            (conv): Conv2d(40, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
      )
    )
  )
  init_cfg=[{'type': 'Normal', 'std': 0.001, 'layer': 'Conv2d'}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
  (decode_head): FCNHead(
    input_transform=resize_concat, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss()
    (conv_seg): Conv2d(320, 150, kernel_size=(1, 1), stride=(1, 1))
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
)
2021-08-13 11:21:57,007 - mmseg - INFO - Loaded 20210 images
2021-08-13 11:22:04,016 - mmseg - INFO - Loaded 2000 images
2021-08-13 11:22:04,016 - mmseg - INFO - Start running, host: hejunjun@SH-IDC2-172-20-20-76, work_dir: /mnt/lustrenew/hejunjun/mmseg_dev/lite_hrnet/mmsegmentation/work_dirs/fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k
2021-08-13 11:22:04,017 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2021-08-13 11:22:04,017 - mmseg - INFO - workflow: [('train', 1)], max: 160000 iters
2021-08-13 11:23:27,178 - mmseg - INFO - Iter [50/160000]	lr: 9.997e-03, eta: 1 day, 19:19:59, time: 0.975, data_time: 0.016, memory: 8535, decode.loss_seg: 2.9708, decode.acc_seg: 17.7689, loss: 2.9708
2021-08-13 11:24:11,437 - mmseg - INFO - Iter [100/160000]	lr: 9.994e-03, eta: 1 day, 17:19:37, time: 0.886, data_time: 0.011, memory: 8535, decode.loss_seg: 2.5436, decode.acc_seg: 23.4480, loss: 2.5436
2021-08-13 11:24:55,031 - mmseg - INFO - Iter [150/160000]	lr: 9.992e-03, eta: 1 day, 16:26:37, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 2.5055, decode.acc_seg: 24.3957, loss: 2.5055
2021-08-13 11:25:39,183 - mmseg - INFO - Iter [200/160000]	lr: 9.989e-03, eta: 1 day, 16:07:05, time: 0.883, data_time: 0.010, memory: 8535, decode.loss_seg: 2.4430, decode.acc_seg: 25.6844, loss: 2.4430
2021-08-13 11:26:22,363 - mmseg - INFO - Iter [250/160000]	lr: 9.986e-03, eta: 1 day, 15:45:12, time: 0.864, data_time: 0.010, memory: 8535, decode.loss_seg: 2.3730, decode.acc_seg: 26.7941, loss: 2.3730
2021-08-13 11:27:06,206 - mmseg - INFO - Iter [300/160000]	lr: 9.983e-03, eta: 1 day, 15:35:49, time: 0.876, data_time: 0.010, memory: 8535, decode.loss_seg: 2.3211, decode.acc_seg: 27.4181, loss: 2.3211
2021-08-13 11:27:51,858 - mmseg - INFO - Iter [350/160000]	lr: 9.981e-03, eta: 1 day, 15:42:41, time: 0.913, data_time: 0.011, memory: 8535, decode.loss_seg: 2.3157, decode.acc_seg: 26.7541, loss: 2.3157
2021-08-13 11:28:35,320 - mmseg - INFO - Iter [400/160000]	lr: 9.978e-03, eta: 1 day, 15:33:18, time: 0.869, data_time: 0.011, memory: 8535, decode.loss_seg: 2.3075, decode.acc_seg: 28.5569, loss: 2.3075
2021-08-13 11:29:18,861 - mmseg - INFO - Iter [450/160000]	lr: 9.975e-03, eta: 1 day, 15:26:26, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 2.2198, decode.acc_seg: 28.5115, loss: 2.2198
2021-08-13 11:30:01,777 - mmseg - INFO - Iter [500/160000]	lr: 9.972e-03, eta: 1 day, 15:17:16, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 2.2487, decode.acc_seg: 29.0499, loss: 2.2487
2021-08-13 11:30:45,759 - mmseg - INFO - Iter [550/160000]	lr: 9.969e-03, eta: 1 day, 15:14:45, time: 0.879, data_time: 0.011, memory: 8535, decode.loss_seg: 2.2087, decode.acc_seg: 29.4287, loss: 2.2087
2021-08-13 11:31:29,860 - mmseg - INFO - Iter [600/160000]	lr: 9.967e-03, eta: 1 day, 15:13:10, time: 0.882, data_time: 0.011, memory: 8535, decode.loss_seg: 2.2072, decode.acc_seg: 31.0135, loss: 2.2072
2021-08-13 11:32:48,516 - mmseg - INFO - Iter [650/160000]	lr: 9.964e-03, eta: 1 day, 17:32:47, time: 1.573, data_time: 0.729, memory: 8535, decode.loss_seg: 2.1565, decode.acc_seg: 30.5130, loss: 2.1565
2021-08-13 11:33:30,699 - mmseg - INFO - Iter [700/160000]	lr: 9.961e-03, eta: 1 day, 17:14:01, time: 0.844, data_time: 0.011, memory: 8535, decode.loss_seg: 2.1557, decode.acc_seg: 29.7951, loss: 2.1557
2021-08-13 11:34:14,946 - mmseg - INFO - Iter [750/160000]	lr: 9.958e-03, eta: 1 day, 17:04:55, time: 0.885, data_time: 0.011, memory: 8535, decode.loss_seg: 2.1445, decode.acc_seg: 31.1037, loss: 2.1445
2021-08-13 11:34:58,637 - mmseg - INFO - Iter [800/160000]	lr: 9.955e-03, eta: 1 day, 16:55:03, time: 0.874, data_time: 0.012, memory: 8535, decode.loss_seg: 2.0343, decode.acc_seg: 33.9536, loss: 2.0343
2021-08-13 11:35:40,644 - mmseg - INFO - Iter [850/160000]	lr: 9.953e-03, eta: 1 day, 16:41:02, time: 0.840, data_time: 0.011, memory: 8535, decode.loss_seg: 2.0383, decode.acc_seg: 32.2644, loss: 2.0383
2021-08-13 11:36:22,785 - mmseg - INFO - Iter [900/160000]	lr: 9.950e-03, eta: 1 day, 16:28:49, time: 0.843, data_time: 0.011, memory: 8535, decode.loss_seg: 2.0584, decode.acc_seg: 31.9245, loss: 2.0584
2021-08-13 11:37:04,986 - mmseg - INFO - Iter [950/160000]	lr: 9.947e-03, eta: 1 day, 16:18:03, time: 0.844, data_time: 0.011, memory: 8535, decode.loss_seg: 1.9960, decode.acc_seg: 32.4982, loss: 1.9960
2021-08-13 11:37:47,499 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 11:37:47,499 - mmseg - INFO - Iter [1000/160000]	lr: 9.944e-03, eta: 1 day, 16:09:05, time: 0.850, data_time: 0.011, memory: 8535, decode.loss_seg: 2.0152, decode.acc_seg: 33.9750, loss: 2.0152
2021-08-13 11:38:29,330 - mmseg - INFO - Iter [1050/160000]	lr: 9.942e-03, eta: 1 day, 15:59:09, time: 0.836, data_time: 0.011, memory: 8535, decode.loss_seg: 1.9905, decode.acc_seg: 32.5778, loss: 1.9905
2021-08-13 11:39:13,102 - mmseg - INFO - Iter [1100/160000]	lr: 9.939e-03, eta: 1 day, 15:54:44, time: 0.875, data_time: 0.012, memory: 8535, decode.loss_seg: 1.9595, decode.acc_seg: 34.2199, loss: 1.9595
2021-08-13 11:39:55,678 - mmseg - INFO - Iter [1150/160000]	lr: 9.936e-03, eta: 1 day, 15:47:55, time: 0.852, data_time: 0.011, memory: 8535, decode.loss_seg: 1.9705, decode.acc_seg: 34.2173, loss: 1.9705
2021-08-13 11:40:38,635 - mmseg - INFO - Iter [1200/160000]	lr: 9.933e-03, eta: 1 day, 15:42:30, time: 0.860, data_time: 0.012, memory: 8535, decode.loss_seg: 1.9160, decode.acc_seg: 35.2932, loss: 1.9160
2021-08-13 11:41:22,838 - mmseg - INFO - Iter [1250/160000]	lr: 9.930e-03, eta: 1 day, 15:39:55, time: 0.883, data_time: 0.011, memory: 8535, decode.loss_seg: 1.8756, decode.acc_seg: 36.1818, loss: 1.8756
2021-08-13 11:42:41,869 - mmseg - INFO - Iter [1300/160000]	lr: 9.928e-03, eta: 1 day, 16:48:31, time: 1.581, data_time: 0.732, memory: 8535, decode.loss_seg: 1.9460, decode.acc_seg: 34.4511, loss: 1.9460
2021-08-13 11:43:24,186 - mmseg - INFO - Iter [1350/160000]	lr: 9.925e-03, eta: 1 day, 16:40:01, time: 0.847, data_time: 0.011, memory: 8535, decode.loss_seg: 1.8600, decode.acc_seg: 36.4487, loss: 1.8600
2021-08-13 11:44:06,702 - mmseg - INFO - Iter [1400/160000]	lr: 9.922e-03, eta: 1 day, 16:32:25, time: 0.850, data_time: 0.011, memory: 8535, decode.loss_seg: 1.8817, decode.acc_seg: 34.9666, loss: 1.8817
2021-08-13 11:44:49,723 - mmseg - INFO - Iter [1450/160000]	lr: 9.919e-03, eta: 1 day, 16:26:11, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 1.8369, decode.acc_seg: 35.8213, loss: 1.8369
2021-08-13 11:45:33,144 - mmseg - INFO - Iter [1500/160000]	lr: 9.916e-03, eta: 1 day, 16:21:00, time: 0.868, data_time: 0.011, memory: 8535, decode.loss_seg: 1.8572, decode.acc_seg: 35.9041, loss: 1.8572
2021-08-13 11:46:15,698 - mmseg - INFO - Iter [1550/160000]	lr: 9.914e-03, eta: 1 day, 16:14:41, time: 0.851, data_time: 0.012, memory: 8535, decode.loss_seg: 1.7762, decode.acc_seg: 37.3676, loss: 1.7762
2021-08-13 11:46:58,546 - mmseg - INFO - Iter [1600/160000]	lr: 9.911e-03, eta: 1 day, 16:09:10, time: 0.857, data_time: 0.012, memory: 8535, decode.loss_seg: 1.8467, decode.acc_seg: 35.6738, loss: 1.8467
2021-08-13 11:47:42,168 - mmseg - INFO - Iter [1650/160000]	lr: 9.908e-03, eta: 1 day, 16:05:13, time: 0.872, data_time: 0.012, memory: 8535, decode.loss_seg: 1.7795, decode.acc_seg: 36.8236, loss: 1.7795
2021-08-13 11:48:26,256 - mmseg - INFO - Iter [1700/160000]	lr: 9.905e-03, eta: 1 day, 16:02:10, time: 0.882, data_time: 0.011, memory: 8535, decode.loss_seg: 1.8145, decode.acc_seg: 37.3910, loss: 1.8145
2021-08-13 11:49:10,703 - mmseg - INFO - Iter [1750/160000]	lr: 9.903e-03, eta: 1 day, 15:59:46, time: 0.889, data_time: 0.011, memory: 8535, decode.loss_seg: 1.7939, decode.acc_seg: 37.9235, loss: 1.7939
2021-08-13 11:49:55,350 - mmseg - INFO - Iter [1800/160000]	lr: 9.900e-03, eta: 1 day, 15:57:44, time: 0.892, data_time: 0.011, memory: 8535, decode.loss_seg: 1.7870, decode.acc_seg: 37.6159, loss: 1.7870
2021-08-13 11:50:39,027 - mmseg - INFO - Iter [1850/160000]	lr: 9.897e-03, eta: 1 day, 15:54:28, time: 0.874, data_time: 0.012, memory: 8535, decode.loss_seg: 1.7838, decode.acc_seg: 37.0528, loss: 1.7838
2021-08-13 11:51:59,531 - mmseg - INFO - Iter [1900/160000]	lr: 9.894e-03, eta: 1 day, 16:42:21, time: 1.610, data_time: 0.731, memory: 8535, decode.loss_seg: 1.7911, decode.acc_seg: 37.9027, loss: 1.7911
2021-08-13 11:52:42,477 - mmseg - INFO - Iter [1950/160000]	lr: 9.891e-03, eta: 1 day, 16:37:01, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.7439, decode.acc_seg: 36.6610, loss: 1.7439
2021-08-13 11:53:25,045 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 11:53:25,046 - mmseg - INFO - Iter [2000/160000]	lr: 9.889e-03, eta: 1 day, 16:31:23, time: 0.851, data_time: 0.010, memory: 8535, decode.loss_seg: 1.7889, decode.acc_seg: 37.2155, loss: 1.7889
2021-08-13 11:54:07,611 - mmseg - INFO - Iter [2050/160000]	lr: 9.886e-03, eta: 1 day, 16:26:00, time: 0.851, data_time: 0.010, memory: 8535, decode.loss_seg: 1.6898, decode.acc_seg: 39.8571, loss: 1.6898
2021-08-13 11:54:49,876 - mmseg - INFO - Iter [2100/160000]	lr: 9.883e-03, eta: 1 day, 16:20:27, time: 0.845, data_time: 0.010, memory: 8535, decode.loss_seg: 1.7700, decode.acc_seg: 38.2541, loss: 1.7700
2021-08-13 11:55:33,233 - mmseg - INFO - Iter [2150/160000]	lr: 9.880e-03, eta: 1 day, 16:16:28, time: 0.867, data_time: 0.011, memory: 8535, decode.loss_seg: 1.7567, decode.acc_seg: 37.5043, loss: 1.7567
2021-08-13 11:56:15,906 - mmseg - INFO - Iter [2200/160000]	lr: 9.877e-03, eta: 1 day, 16:11:47, time: 0.853, data_time: 0.010, memory: 8535, decode.loss_seg: 1.6986, decode.acc_seg: 38.2783, loss: 1.6986
2021-08-13 11:56:58,934 - mmseg - INFO - Iter [2250/160000]	lr: 9.875e-03, eta: 1 day, 16:07:43, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.7239, decode.acc_seg: 38.5002, loss: 1.7239
2021-08-13 11:57:41,690 - mmseg - INFO - Iter [2300/160000]	lr: 9.872e-03, eta: 1 day, 16:03:29, time: 0.855, data_time: 0.010, memory: 8535, decode.loss_seg: 1.7424, decode.acc_seg: 38.2010, loss: 1.7424
2021-08-13 11:58:24,296 - mmseg - INFO - Iter [2350/160000]	lr: 9.869e-03, eta: 1 day, 15:59:16, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.7380, decode.acc_seg: 38.4296, loss: 1.7380
2021-08-13 11:59:07,413 - mmseg - INFO - Iter [2400/160000]	lr: 9.866e-03, eta: 1 day, 15:55:40, time: 0.861, data_time: 0.010, memory: 8535, decode.loss_seg: 1.6857, decode.acc_seg: 40.1177, loss: 1.6857
2021-08-13 11:59:52,462 - mmseg - INFO - Iter [2450/160000]	lr: 9.864e-03, eta: 1 day, 15:54:20, time: 0.902, data_time: 0.011, memory: 8535, decode.loss_seg: 1.6705, decode.acc_seg: 39.7124, loss: 1.6705
2021-08-13 12:00:36,622 - mmseg - INFO - Iter [2500/160000]	lr: 9.861e-03, eta: 1 day, 15:52:06, time: 0.884, data_time: 0.010, memory: 8535, decode.loss_seg: 1.7327, decode.acc_seg: 39.2085, loss: 1.7327
2021-08-13 12:02:01,496 - mmseg - INFO - Iter [2550/160000]	lr: 9.858e-03, eta: 1 day, 16:31:48, time: 1.697, data_time: 0.841, memory: 8535, decode.loss_seg: 1.6538, decode.acc_seg: 39.8261, loss: 1.6538
2021-08-13 12:02:46,787 - mmseg - INFO - Iter [2600/160000]	lr: 9.855e-03, eta: 1 day, 16:29:57, time: 0.905, data_time: 0.012, memory: 8535, decode.loss_seg: 1.6121, decode.acc_seg: 40.3353, loss: 1.6121
2021-08-13 12:03:30,715 - mmseg - INFO - Iter [2650/160000]	lr: 9.852e-03, eta: 1 day, 16:26:49, time: 0.879, data_time: 0.011, memory: 8535, decode.loss_seg: 1.7109, decode.acc_seg: 39.5980, loss: 1.7109
2021-08-13 12:04:14,764 - mmseg - INFO - Iter [2700/160000]	lr: 9.850e-03, eta: 1 day, 16:23:53, time: 0.881, data_time: 0.011, memory: 8535, decode.loss_seg: 1.6919, decode.acc_seg: 39.8940, loss: 1.6919
2021-08-13 12:04:58,276 - mmseg - INFO - Iter [2750/160000]	lr: 9.847e-03, eta: 1 day, 16:20:31, time: 0.870, data_time: 0.012, memory: 8535, decode.loss_seg: 1.6926, decode.acc_seg: 38.8720, loss: 1.6926
2021-08-13 12:05:41,865 - mmseg - INFO - Iter [2800/160000]	lr: 9.844e-03, eta: 1 day, 16:17:19, time: 0.872, data_time: 0.012, memory: 8535, decode.loss_seg: 1.5833, decode.acc_seg: 40.5084, loss: 1.5833
2021-08-13 12:06:25,145 - mmseg - INFO - Iter [2850/160000]	lr: 9.841e-03, eta: 1 day, 16:13:56, time: 0.866, data_time: 0.012, memory: 8535, decode.loss_seg: 1.6549, decode.acc_seg: 39.7643, loss: 1.6549
2021-08-13 12:07:08,771 - mmseg - INFO - Iter [2900/160000]	lr: 9.838e-03, eta: 1 day, 16:10:59, time: 0.873, data_time: 0.012, memory: 8535, decode.loss_seg: 1.6108, decode.acc_seg: 40.9506, loss: 1.6108
2021-08-13 12:07:52,545 - mmseg - INFO - Iter [2950/160000]	lr: 9.836e-03, eta: 1 day, 16:08:11, time: 0.875, data_time: 0.011, memory: 8535, decode.loss_seg: 1.6091, decode.acc_seg: 40.9645, loss: 1.6091
2021-08-13 12:08:36,475 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 12:08:36,476 - mmseg - INFO - Iter [3000/160000]	lr: 9.833e-03, eta: 1 day, 16:05:36, time: 0.879, data_time: 0.012, memory: 8535, decode.loss_seg: 1.6639, decode.acc_seg: 39.8046, loss: 1.6639
2021-08-13 12:09:19,798 - mmseg - INFO - Iter [3050/160000]	lr: 9.830e-03, eta: 1 day, 16:02:35, time: 0.867, data_time: 0.012, memory: 8535, decode.loss_seg: 1.6659, decode.acc_seg: 40.1776, loss: 1.6659
2021-08-13 12:10:03,062 - mmseg - INFO - Iter [3100/160000]	lr: 9.827e-03, eta: 1 day, 15:59:34, time: 0.865, data_time: 0.011, memory: 8535, decode.loss_seg: 1.6359, decode.acc_seg: 40.7952, loss: 1.6359
2021-08-13 12:10:46,069 - mmseg - INFO - Iter [3150/160000]	lr: 9.824e-03, eta: 1 day, 15:56:25, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 1.6181, decode.acc_seg: 41.2986, loss: 1.6181
2021-08-13 12:12:05,214 - mmseg - INFO - Iter [3200/160000]	lr: 9.822e-03, eta: 1 day, 16:22:52, time: 1.583, data_time: 0.728, memory: 8535, decode.loss_seg: 1.6347, decode.acc_seg: 40.0838, loss: 1.6347
2021-08-13 12:12:48,132 - mmseg - INFO - Iter [3250/160000]	lr: 9.819e-03, eta: 1 day, 16:19:20, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.6558, decode.acc_seg: 41.3422, loss: 1.6558
2021-08-13 12:13:31,152 - mmseg - INFO - Iter [3300/160000]	lr: 9.816e-03, eta: 1 day, 16:15:57, time: 0.860, data_time: 0.010, memory: 8535, decode.loss_seg: 1.6297, decode.acc_seg: 40.9814, loss: 1.6297
2021-08-13 12:14:13,432 - mmseg - INFO - Iter [3350/160000]	lr: 9.813e-03, eta: 1 day, 16:12:05, time: 0.846, data_time: 0.011, memory: 8535, decode.loss_seg: 1.6106, decode.acc_seg: 41.4342, loss: 1.6106
2021-08-13 12:14:56,312 - mmseg - INFO - Iter [3400/160000]	lr: 9.811e-03, eta: 1 day, 16:08:47, time: 0.858, data_time: 0.010, memory: 8535, decode.loss_seg: 1.5916, decode.acc_seg: 41.6365, loss: 1.5916
2021-08-13 12:15:39,448 - mmseg - INFO - Iter [3450/160000]	lr: 9.808e-03, eta: 1 day, 16:05:44, time: 0.863, data_time: 0.010, memory: 8535, decode.loss_seg: 1.6170, decode.acc_seg: 41.0221, loss: 1.6170
2021-08-13 12:16:23,252 - mmseg - INFO - Iter [3500/160000]	lr: 9.805e-03, eta: 1 day, 16:03:13, time: 0.875, data_time: 0.010, memory: 8535, decode.loss_seg: 1.6014, decode.acc_seg: 40.8834, loss: 1.6014
2021-08-13 12:17:06,147 - mmseg - INFO - Iter [3550/160000]	lr: 9.802e-03, eta: 1 day, 16:00:08, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5731, decode.acc_seg: 40.5373, loss: 1.5731
2021-08-13 12:17:48,708 - mmseg - INFO - Iter [3600/160000]	lr: 9.799e-03, eta: 1 day, 15:56:52, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5790, decode.acc_seg: 42.1289, loss: 1.5790
2021-08-13 12:18:31,802 - mmseg - INFO - Iter [3650/160000]	lr: 9.797e-03, eta: 1 day, 15:54:02, time: 0.862, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5706, decode.acc_seg: 41.7431, loss: 1.5706
2021-08-13 12:19:15,137 - mmseg - INFO - Iter [3700/160000]	lr: 9.794e-03, eta: 1 day, 15:51:27, time: 0.867, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5613, decode.acc_seg: 41.9528, loss: 1.5613
2021-08-13 12:19:57,766 - mmseg - INFO - Iter [3750/160000]	lr: 9.791e-03, eta: 1 day, 15:48:25, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5425, decode.acc_seg: 42.0248, loss: 1.5425
2021-08-13 12:21:15,764 - mmseg - INFO - Iter [3800/160000]	lr: 9.788e-03, eta: 1 day, 16:09:40, time: 1.560, data_time: 0.683, memory: 8535, decode.loss_seg: 1.5954, decode.acc_seg: 41.7829, loss: 1.5954
2021-08-13 12:21:59,843 - mmseg - INFO - Iter [3850/160000]	lr: 9.785e-03, eta: 1 day, 16:07:24, time: 0.881, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5620, decode.acc_seg: 41.5630, loss: 1.5620
2021-08-13 12:22:42,973 - mmseg - INFO - Iter [3900/160000]	lr: 9.783e-03, eta: 1 day, 16:04:33, time: 0.863, data_time: 0.010, memory: 8535, decode.loss_seg: 1.5015, decode.acc_seg: 42.7668, loss: 1.5015
2021-08-13 12:23:25,071 - mmseg - INFO - Iter [3950/160000]	lr: 9.780e-03, eta: 1 day, 16:01:05, time: 0.842, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5845, decode.acc_seg: 41.9262, loss: 1.5845
2021-08-13 12:24:08,680 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 12:24:08,681 - mmseg - INFO - Iter [4000/160000]	lr: 9.777e-03, eta: 1 day, 15:58:38, time: 0.872, data_time: 0.010, memory: 8535, decode.loss_seg: 1.5212, decode.acc_seg: 42.5927, loss: 1.5212
2021-08-13 12:24:51,367 - mmseg - INFO - Iter [4050/160000]	lr: 9.774e-03, eta: 1 day, 15:55:40, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5634, decode.acc_seg: 42.0012, loss: 1.5634
2021-08-13 12:25:34,851 - mmseg - INFO - Iter [4100/160000]	lr: 9.771e-03, eta: 1 day, 15:53:15, time: 0.870, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5441, decode.acc_seg: 42.1905, loss: 1.5441
2021-08-13 12:26:19,230 - mmseg - INFO - Iter [4150/160000]	lr: 9.769e-03, eta: 1 day, 15:51:26, time: 0.887, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5538, decode.acc_seg: 41.5977, loss: 1.5538
2021-08-13 12:27:04,048 - mmseg - INFO - Iter [4200/160000]	lr: 9.766e-03, eta: 1 day, 15:49:54, time: 0.896, data_time: 0.010, memory: 8535, decode.loss_seg: 1.5511, decode.acc_seg: 41.6272, loss: 1.5511
2021-08-13 12:27:49,349 - mmseg - INFO - Iter [4250/160000]	lr: 9.763e-03, eta: 1 day, 15:48:41, time: 0.906, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5105, decode.acc_seg: 43.0819, loss: 1.5105
2021-08-13 12:28:35,037 - mmseg - INFO - Iter [4300/160000]	lr: 9.760e-03, eta: 1 day, 15:47:44, time: 0.914, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5064, decode.acc_seg: 42.4456, loss: 1.5064
2021-08-13 12:29:20,278 - mmseg - INFO - Iter [4350/160000]	lr: 9.757e-03, eta: 1 day, 15:46:30, time: 0.905, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5383, decode.acc_seg: 42.3816, loss: 1.5383
2021-08-13 12:30:04,023 - mmseg - INFO - Iter [4400/160000]	lr: 9.755e-03, eta: 1 day, 15:44:25, time: 0.875, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5114, decode.acc_seg: 42.6922, loss: 1.5114
2021-08-13 12:31:21,173 - mmseg - INFO - Iter [4450/160000]	lr: 9.752e-03, eta: 1 day, 16:01:50, time: 1.543, data_time: 0.691, memory: 8535, decode.loss_seg: 1.5000, decode.acc_seg: 43.1444, loss: 1.5000
2021-08-13 12:32:04,991 - mmseg - INFO - Iter [4500/160000]	lr: 9.749e-03, eta: 1 day, 15:59:35, time: 0.875, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5038, decode.acc_seg: 41.8063, loss: 1.5038
2021-08-13 12:32:49,652 - mmseg - INFO - Iter [4550/160000]	lr: 9.746e-03, eta: 1 day, 15:57:54, time: 0.894, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5525, decode.acc_seg: 41.8110, loss: 1.5525
2021-08-13 12:33:31,703 - mmseg - INFO - Iter [4600/160000]	lr: 9.744e-03, eta: 1 day, 15:54:46, time: 0.841, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5408, decode.acc_seg: 43.0718, loss: 1.5408
2021-08-13 12:34:14,233 - mmseg - INFO - Iter [4650/160000]	lr: 9.741e-03, eta: 1 day, 15:51:55, time: 0.850, data_time: 0.010, memory: 8535, decode.loss_seg: 1.4410, decode.acc_seg: 44.0064, loss: 1.4410
2021-08-13 12:34:58,745 - mmseg - INFO - Iter [4700/160000]	lr: 9.738e-03, eta: 1 day, 15:50:13, time: 0.890, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4700, decode.acc_seg: 43.5301, loss: 1.4700
2021-08-13 12:35:42,992 - mmseg - INFO - Iter [4750/160000]	lr: 9.735e-03, eta: 1 day, 15:48:25, time: 0.885, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4962, decode.acc_seg: 42.5115, loss: 1.4962
2021-08-13 12:36:27,031 - mmseg - INFO - Iter [4800/160000]	lr: 9.732e-03, eta: 1 day, 15:46:29, time: 0.880, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4664, decode.acc_seg: 44.0795, loss: 1.4664
2021-08-13 12:37:09,539 - mmseg - INFO - Iter [4850/160000]	lr: 9.730e-03, eta: 1 day, 15:43:48, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5171, decode.acc_seg: 43.2206, loss: 1.5171
2021-08-13 12:37:51,947 - mmseg - INFO - Iter [4900/160000]	lr: 9.727e-03, eta: 1 day, 15:41:05, time: 0.848, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4616, decode.acc_seg: 44.8818, loss: 1.4616
2021-08-13 12:38:34,809 - mmseg - INFO - Iter [4950/160000]	lr: 9.724e-03, eta: 1 day, 15:38:39, time: 0.857, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5245, decode.acc_seg: 42.5763, loss: 1.5245
2021-08-13 12:39:17,451 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 12:39:17,451 - mmseg - INFO - Iter [5000/160000]	lr: 9.721e-03, eta: 1 day, 15:36:08, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4850, decode.acc_seg: 43.6849, loss: 1.4850
2021-08-13 12:40:37,104 - mmseg - INFO - Iter [5050/160000]	lr: 9.718e-03, eta: 1 day, 15:52:35, time: 1.593, data_time: 0.719, memory: 8535, decode.loss_seg: 1.4894, decode.acc_seg: 43.2891, loss: 1.4894
2021-08-13 12:41:19,607 - mmseg - INFO - Iter [5100/160000]	lr: 9.716e-03, eta: 1 day, 15:49:52, time: 0.850, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3782, decode.acc_seg: 44.3914, loss: 1.3782
2021-08-13 12:42:03,795 - mmseg - INFO - Iter [5150/160000]	lr: 9.713e-03, eta: 1 day, 15:48:02, time: 0.883, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4891, decode.acc_seg: 42.7318, loss: 1.4891
2021-08-13 12:42:48,796 - mmseg - INFO - Iter [5200/160000]	lr: 9.710e-03, eta: 1 day, 15:46:39, time: 0.900, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4755, decode.acc_seg: 43.9722, loss: 1.4755
2021-08-13 12:43:30,675 - mmseg - INFO - Iter [5250/160000]	lr: 9.707e-03, eta: 1 day, 15:43:45, time: 0.838, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4484, decode.acc_seg: 44.7098, loss: 1.4484
2021-08-13 12:44:13,962 - mmseg - INFO - Iter [5300/160000]	lr: 9.704e-03, eta: 1 day, 15:41:33, time: 0.865, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4817, decode.acc_seg: 44.0050, loss: 1.4817
2021-08-13 12:44:57,801 - mmseg - INFO - Iter [5350/160000]	lr: 9.702e-03, eta: 1 day, 15:39:38, time: 0.877, data_time: 0.011, memory: 8535, decode.loss_seg: 1.5197, decode.acc_seg: 43.3300, loss: 1.5197
2021-08-13 12:45:41,515 - mmseg - INFO - Iter [5400/160000]	lr: 9.699e-03, eta: 1 day, 15:37:41, time: 0.874, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4928, decode.acc_seg: 44.6856, loss: 1.4928
2021-08-13 12:46:24,578 - mmseg - INFO - Iter [5450/160000]	lr: 9.696e-03, eta: 1 day, 15:35:29, time: 0.862, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4296, decode.acc_seg: 44.3327, loss: 1.4296
2021-08-13 12:47:06,951 - mmseg - INFO - Iter [5500/160000]	lr: 9.693e-03, eta: 1 day, 15:32:58, time: 0.847, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3916, decode.acc_seg: 44.7869, loss: 1.3916
2021-08-13 12:47:49,367 - mmseg - INFO - Iter [5550/160000]	lr: 9.690e-03, eta: 1 day, 15:30:30, time: 0.848, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4667, decode.acc_seg: 44.5189, loss: 1.4667
2021-08-13 12:48:32,702 - mmseg - INFO - Iter [5600/160000]	lr: 9.688e-03, eta: 1 day, 15:28:29, time: 0.867, data_time: 0.012, memory: 8535, decode.loss_seg: 1.4020, decode.acc_seg: 43.8928, loss: 1.4020
2021-08-13 12:49:15,482 - mmseg - INFO - Iter [5650/160000]	lr: 9.685e-03, eta: 1 day, 15:26:15, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4181, decode.acc_seg: 44.1636, loss: 1.4181
2021-08-13 12:50:34,131 - mmseg - INFO - Iter [5700/160000]	lr: 9.682e-03, eta: 1 day, 15:40:13, time: 1.573, data_time: 0.729, memory: 8535, decode.loss_seg: 1.4452, decode.acc_seg: 43.8278, loss: 1.4452
2021-08-13 12:51:17,738 - mmseg - INFO - Iter [5750/160000]	lr: 9.679e-03, eta: 1 day, 15:38:15, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4332, decode.acc_seg: 43.2615, loss: 1.4332
2021-08-13 12:52:02,190 - mmseg - INFO - Iter [5800/160000]	lr: 9.676e-03, eta: 1 day, 15:36:40, time: 0.888, data_time: 0.010, memory: 8535, decode.loss_seg: 1.4574, decode.acc_seg: 44.6726, loss: 1.4574
2021-08-13 12:52:44,672 - mmseg - INFO - Iter [5850/160000]	lr: 9.674e-03, eta: 1 day, 15:34:15, time: 0.850, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4374, decode.acc_seg: 44.0029, loss: 1.4374
2021-08-13 12:53:27,009 - mmseg - INFO - Iter [5900/160000]	lr: 9.671e-03, eta: 1 day, 15:31:47, time: 0.846, data_time: 0.010, memory: 8535, decode.loss_seg: 1.4376, decode.acc_seg: 44.4294, loss: 1.4376
2021-08-13 12:54:09,643 - mmseg - INFO - Iter [5950/160000]	lr: 9.668e-03, eta: 1 day, 15:29:30, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4463, decode.acc_seg: 43.2232, loss: 1.4463
2021-08-13 12:54:52,416 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 12:54:52,417 - mmseg - INFO - Iter [6000/160000]	lr: 9.665e-03, eta: 1 day, 15:27:17, time: 0.855, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3816, decode.acc_seg: 44.6766, loss: 1.3816
2021-08-13 12:55:35,542 - mmseg - INFO - Iter [6050/160000]	lr: 9.663e-03, eta: 1 day, 15:25:16, time: 0.863, data_time: 0.010, memory: 8535, decode.loss_seg: 1.4138, decode.acc_seg: 45.2339, loss: 1.4138
2021-08-13 12:56:18,141 - mmseg - INFO - Iter [6100/160000]	lr: 9.660e-03, eta: 1 day, 15:23:01, time: 0.851, data_time: 0.010, memory: 8535, decode.loss_seg: 1.4391, decode.acc_seg: 44.2900, loss: 1.4391
2021-08-13 12:57:00,579 - mmseg - INFO - Iter [6150/160000]	lr: 9.657e-03, eta: 1 day, 15:20:44, time: 0.848, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4096, decode.acc_seg: 46.5193, loss: 1.4096
2021-08-13 12:57:43,922 - mmseg - INFO - Iter [6200/160000]	lr: 9.654e-03, eta: 1 day, 15:18:51, time: 0.867, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4050, decode.acc_seg: 45.8936, loss: 1.4050
2021-08-13 12:58:28,948 - mmseg - INFO - Iter [6250/160000]	lr: 9.651e-03, eta: 1 day, 15:17:40, time: 0.900, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4237, decode.acc_seg: 44.5339, loss: 1.4237
2021-08-13 12:59:14,903 - mmseg - INFO - Iter [6300/160000]	lr: 9.649e-03, eta: 1 day, 15:16:53, time: 0.919, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4744, decode.acc_seg: 44.2880, loss: 1.4744
2021-08-13 13:00:34,187 - mmseg - INFO - Iter [6350/160000]	lr: 9.646e-03, eta: 1 day, 15:29:33, time: 1.586, data_time: 0.716, memory: 8535, decode.loss_seg: 1.4459, decode.acc_seg: 45.4132, loss: 1.4459
2021-08-13 13:01:17,682 - mmseg - INFO - Iter [6400/160000]	lr: 9.643e-03, eta: 1 day, 15:27:41, time: 0.871, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3841, decode.acc_seg: 45.6390, loss: 1.3841
2021-08-13 13:02:00,933 - mmseg - INFO - Iter [6450/160000]	lr: 9.640e-03, eta: 1 day, 15:25:43, time: 0.864, data_time: 0.010, memory: 8535, decode.loss_seg: 1.4003, decode.acc_seg: 44.4492, loss: 1.4003
2021-08-13 13:02:44,839 - mmseg - INFO - Iter [6500/160000]	lr: 9.637e-03, eta: 1 day, 15:24:02, time: 0.878, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4482, decode.acc_seg: 43.9789, loss: 1.4482
2021-08-13 13:03:27,411 - mmseg - INFO - Iter [6550/160000]	lr: 9.635e-03, eta: 1 day, 15:21:50, time: 0.851, data_time: 0.010, memory: 8535, decode.loss_seg: 1.4056, decode.acc_seg: 44.3189, loss: 1.4056
2021-08-13 13:04:11,566 - mmseg - INFO - Iter [6600/160000]	lr: 9.632e-03, eta: 1 day, 15:20:17, time: 0.883, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3950, decode.acc_seg: 44.8419, loss: 1.3950
2021-08-13 13:04:54,238 - mmseg - INFO - Iter [6650/160000]	lr: 9.629e-03, eta: 1 day, 15:18:11, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4046, decode.acc_seg: 45.1712, loss: 1.4046
2021-08-13 13:05:37,636 - mmseg - INFO - Iter [6700/160000]	lr: 9.626e-03, eta: 1 day, 15:16:23, time: 0.868, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3771, decode.acc_seg: 46.4373, loss: 1.3771
2021-08-13 13:06:21,311 - mmseg - INFO - Iter [6750/160000]	lr: 9.623e-03, eta: 1 day, 15:14:41, time: 0.873, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3915, decode.acc_seg: 44.8827, loss: 1.3915
2021-08-13 13:07:06,249 - mmseg - INFO - Iter [6800/160000]	lr: 9.621e-03, eta: 1 day, 15:13:28, time: 0.898, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4189, decode.acc_seg: 45.6365, loss: 1.4189
2021-08-13 13:07:50,220 - mmseg - INFO - Iter [6850/160000]	lr: 9.618e-03, eta: 1 day, 15:11:56, time: 0.880, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4127, decode.acc_seg: 45.4790, loss: 1.4127
2021-08-13 13:08:32,914 - mmseg - INFO - Iter [6900/160000]	lr: 9.615e-03, eta: 1 day, 15:09:54, time: 0.853, data_time: 0.010, memory: 8535, decode.loss_seg: 1.4045, decode.acc_seg: 46.2398, loss: 1.4045
2021-08-13 13:09:50,195 - mmseg - INFO - Iter [6950/160000]	lr: 9.612e-03, eta: 1 day, 15:20:36, time: 1.545, data_time: 0.712, memory: 8535, decode.loss_seg: 1.3591, decode.acc_seg: 45.2194, loss: 1.3591
2021-08-13 13:10:33,141 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 13:10:33,141 - mmseg - INFO - Iter [7000/160000]	lr: 9.609e-03, eta: 1 day, 15:18:37, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3916, decode.acc_seg: 45.0322, loss: 1.3916
2021-08-13 13:11:16,533 - mmseg - INFO - Iter [7050/160000]	lr: 9.607e-03, eta: 1 day, 15:16:49, time: 0.867, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3974, decode.acc_seg: 45.5465, loss: 1.3974
2021-08-13 13:12:01,044 - mmseg - INFO - Iter [7100/160000]	lr: 9.604e-03, eta: 1 day, 15:15:26, time: 0.890, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3934, decode.acc_seg: 44.7917, loss: 1.3934
2021-08-13 13:12:45,404 - mmseg - INFO - Iter [7150/160000]	lr: 9.601e-03, eta: 1 day, 15:14:00, time: 0.887, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3779, decode.acc_seg: 45.8670, loss: 1.3779
2021-08-13 13:13:29,950 - mmseg - INFO - Iter [7200/160000]	lr: 9.598e-03, eta: 1 day, 15:12:38, time: 0.890, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3230, decode.acc_seg: 45.9267, loss: 1.3230
2021-08-13 13:14:15,130 - mmseg - INFO - Iter [7250/160000]	lr: 9.595e-03, eta: 1 day, 15:11:30, time: 0.904, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3694, decode.acc_seg: 46.1889, loss: 1.3694
2021-08-13 13:14:58,700 - mmseg - INFO - Iter [7300/160000]	lr: 9.593e-03, eta: 1 day, 15:09:50, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3883, decode.acc_seg: 45.9029, loss: 1.3883
2021-08-13 13:15:41,381 - mmseg - INFO - Iter [7350/160000]	lr: 9.590e-03, eta: 1 day, 15:07:51, time: 0.854, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3761, decode.acc_seg: 46.0011, loss: 1.3761
2021-08-13 13:16:23,595 - mmseg - INFO - Iter [7400/160000]	lr: 9.587e-03, eta: 1 day, 15:05:44, time: 0.844, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3389, decode.acc_seg: 45.8460, loss: 1.3389
2021-08-13 13:17:06,502 - mmseg - INFO - Iter [7450/160000]	lr: 9.584e-03, eta: 1 day, 15:03:52, time: 0.858, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3870, decode.acc_seg: 46.8544, loss: 1.3870
2021-08-13 13:17:49,319 - mmseg - INFO - Iter [7500/160000]	lr: 9.581e-03, eta: 1 day, 15:02:00, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 1.4369, decode.acc_seg: 45.3360, loss: 1.4369
2021-08-13 13:18:33,873 - mmseg - INFO - Iter [7550/160000]	lr: 9.579e-03, eta: 1 day, 15:00:42, time: 0.891, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3751, decode.acc_seg: 46.1252, loss: 1.3751
2021-08-13 13:19:53,325 - mmseg - INFO - Iter [7600/160000]	lr: 9.576e-03, eta: 1 day, 15:11:07, time: 1.590, data_time: 0.719, memory: 8535, decode.loss_seg: 1.3238, decode.acc_seg: 46.2537, loss: 1.3238
2021-08-13 13:20:35,741 - mmseg - INFO - Iter [7650/160000]	lr: 9.573e-03, eta: 1 day, 15:09:04, time: 0.848, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3563, decode.acc_seg: 45.8382, loss: 1.3563
2021-08-13 13:21:18,798 - mmseg - INFO - Iter [7700/160000]	lr: 9.570e-03, eta: 1 day, 15:07:13, time: 0.860, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3274, decode.acc_seg: 47.1636, loss: 1.3274
2021-08-13 13:22:01,524 - mmseg - INFO - Iter [7750/160000]	lr: 9.567e-03, eta: 1 day, 15:05:18, time: 0.855, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3512, decode.acc_seg: 45.8510, loss: 1.3512
2021-08-13 13:22:43,500 - mmseg - INFO - Iter [7800/160000]	lr: 9.565e-03, eta: 1 day, 15:03:10, time: 0.840, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3771, decode.acc_seg: 45.2416, loss: 1.3771
2021-08-13 13:23:26,557 - mmseg - INFO - Iter [7850/160000]	lr: 9.562e-03, eta: 1 day, 15:01:23, time: 0.861, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3369, decode.acc_seg: 46.1439, loss: 1.3369
2021-08-13 13:24:08,700 - mmseg - INFO - Iter [7900/160000]	lr: 9.559e-03, eta: 1 day, 14:59:19, time: 0.843, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3692, decode.acc_seg: 45.8047, loss: 1.3692
2021-08-13 13:24:51,273 - mmseg - INFO - Iter [7950/160000]	lr: 9.556e-03, eta: 1 day, 14:57:25, time: 0.851, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3581, decode.acc_seg: 46.1812, loss: 1.3581
2021-08-13 13:25:33,910 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 13:25:33,911 - mmseg - INFO - Iter [8000/160000]	lr: 9.553e-03, eta: 1 day, 14:55:33, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3580, decode.acc_seg: 46.1331, loss: 1.3580
2021-08-13 13:26:16,928 - mmseg - INFO - Iter [8050/160000]	lr: 9.551e-03, eta: 1 day, 14:53:49, time: 0.860, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3219, decode.acc_seg: 46.6525, loss: 1.3219
2021-08-13 13:26:59,936 - mmseg - INFO - Iter [8100/160000]	lr: 9.548e-03, eta: 1 day, 14:52:04, time: 0.859, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3662, decode.acc_seg: 46.8002, loss: 1.3662
2021-08-13 13:27:43,382 - mmseg - INFO - Iter [8150/160000]	lr: 9.545e-03, eta: 1 day, 14:50:29, time: 0.869, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3658, decode.acc_seg: 46.3948, loss: 1.3658
2021-08-13 13:28:27,040 - mmseg - INFO - Iter [8200/160000]	lr: 9.542e-03, eta: 1 day, 14:49:00, time: 0.874, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3548, decode.acc_seg: 45.4139, loss: 1.3548
2021-08-13 13:29:45,456 - mmseg - INFO - Iter [8250/160000]	lr: 9.539e-03, eta: 1 day, 14:58:09, time: 1.568, data_time: 0.665, memory: 8535, decode.loss_seg: 1.2992, decode.acc_seg: 46.9892, loss: 1.2992
2021-08-13 13:30:28,885 - mmseg - INFO - Iter [8300/160000]	lr: 9.537e-03, eta: 1 day, 14:56:32, time: 0.868, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3604, decode.acc_seg: 46.3975, loss: 1.3604
2021-08-13 13:31:11,219 - mmseg - INFO - Iter [8350/160000]	lr: 9.534e-03, eta: 1 day, 14:54:36, time: 0.847, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3533, decode.acc_seg: 46.7989, loss: 1.3533
2021-08-13 13:31:53,447 - mmseg - INFO - Iter [8400/160000]	lr: 9.531e-03, eta: 1 day, 14:52:38, time: 0.844, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3191, decode.acc_seg: 46.5521, loss: 1.3191
2021-08-13 13:32:36,750 - mmseg - INFO - Iter [8450/160000]	lr: 9.528e-03, eta: 1 day, 14:51:00, time: 0.866, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3159, decode.acc_seg: 46.6211, loss: 1.3159
2021-08-13 13:33:21,132 - mmseg - INFO - Iter [8500/160000]	lr: 9.525e-03, eta: 1 day, 14:49:43, time: 0.888, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3370, decode.acc_seg: 45.9997, loss: 1.3370
2021-08-13 13:34:04,019 - mmseg - INFO - Iter [8550/160000]	lr: 9.523e-03, eta: 1 day, 14:47:59, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3695, decode.acc_seg: 45.7696, loss: 1.3695
2021-08-13 13:34:46,473 - mmseg - INFO - Iter [8600/160000]	lr: 9.520e-03, eta: 1 day, 14:46:09, time: 0.849, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3325, decode.acc_seg: 46.6324, loss: 1.3325
2021-08-13 13:35:29,390 - mmseg - INFO - Iter [8650/160000]	lr: 9.517e-03, eta: 1 day, 14:44:27, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3371, decode.acc_seg: 46.9077, loss: 1.3371
2021-08-13 13:36:11,639 - mmseg - INFO - Iter [8700/160000]	lr: 9.514e-03, eta: 1 day, 14:42:34, time: 0.845, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3163, decode.acc_seg: 47.3734, loss: 1.3163
2021-08-13 13:36:53,393 - mmseg - INFO - Iter [8750/160000]	lr: 9.511e-03, eta: 1 day, 14:40:34, time: 0.835, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3207, decode.acc_seg: 46.7323, loss: 1.3207
2021-08-13 13:37:36,530 - mmseg - INFO - Iter [8800/160000]	lr: 9.509e-03, eta: 1 day, 14:38:59, time: 0.863, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3224, decode.acc_seg: 46.2635, loss: 1.3224
2021-08-13 13:38:53,396 - mmseg - INFO - Iter [8850/160000]	lr: 9.506e-03, eta: 1 day, 14:47:00, time: 1.537, data_time: 0.699, memory: 8535, decode.loss_seg: 1.3560, decode.acc_seg: 45.8693, loss: 1.3560
2021-08-13 13:39:36,939 - mmseg - INFO - Iter [8900/160000]	lr: 9.503e-03, eta: 1 day, 14:45:28, time: 0.870, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2968, decode.acc_seg: 47.2048, loss: 1.2968
2021-08-13 13:40:19,867 - mmseg - INFO - Iter [8950/160000]	lr: 9.500e-03, eta: 1 day, 14:43:47, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3019, decode.acc_seg: 46.8112, loss: 1.3019
2021-08-13 13:41:03,166 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 13:41:03,167 - mmseg - INFO - Iter [9000/160000]	lr: 9.497e-03, eta: 1 day, 14:42:13, time: 0.866, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3380, decode.acc_seg: 46.4101, loss: 1.3380
2021-08-13 13:41:45,276 - mmseg - INFO - Iter [9050/160000]	lr: 9.495e-03, eta: 1 day, 14:40:20, time: 0.842, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3110, decode.acc_seg: 47.2020, loss: 1.3110
2021-08-13 13:42:28,144 - mmseg - INFO - Iter [9100/160000]	lr: 9.492e-03, eta: 1 day, 14:38:40, time: 0.857, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3025, decode.acc_seg: 46.7896, loss: 1.3025
2021-08-13 13:43:13,562 - mmseg - INFO - Iter [9150/160000]	lr: 9.489e-03, eta: 1 day, 14:37:42, time: 0.908, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3356, decode.acc_seg: 47.2327, loss: 1.3356
2021-08-13 13:43:57,705 - mmseg - INFO - Iter [9200/160000]	lr: 9.486e-03, eta: 1 day, 14:36:25, time: 0.884, data_time: 0.012, memory: 8535, decode.loss_seg: 1.3243, decode.acc_seg: 46.4388, loss: 1.3243
2021-08-13 13:44:40,666 - mmseg - INFO - Iter [9250/160000]	lr: 9.483e-03, eta: 1 day, 14:34:48, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2700, decode.acc_seg: 46.8504, loss: 1.2700
2021-08-13 13:45:23,516 - mmseg - INFO - Iter [9300/160000]	lr: 9.481e-03, eta: 1 day, 14:33:09, time: 0.857, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3178, decode.acc_seg: 46.5186, loss: 1.3178
2021-08-13 13:46:06,281 - mmseg - INFO - Iter [9350/160000]	lr: 9.478e-03, eta: 1 day, 14:31:31, time: 0.856, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3545, decode.acc_seg: 46.9274, loss: 1.3545
2021-08-13 13:46:49,158 - mmseg - INFO - Iter [9400/160000]	lr: 9.475e-03, eta: 1 day, 14:29:54, time: 0.857, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3075, decode.acc_seg: 46.7889, loss: 1.3075
2021-08-13 13:47:31,039 - mmseg - INFO - Iter [9450/160000]	lr: 9.472e-03, eta: 1 day, 14:28:02, time: 0.838, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3362, decode.acc_seg: 45.9398, loss: 1.3362
2021-08-13 13:48:49,213 - mmseg - INFO - Iter [9500/160000]	lr: 9.469e-03, eta: 1 day, 14:35:46, time: 1.563, data_time: 0.733, memory: 8535, decode.loss_seg: 1.2598, decode.acc_seg: 48.8320, loss: 1.2598
2021-08-13 13:49:31,665 - mmseg - INFO - Iter [9550/160000]	lr: 9.467e-03, eta: 1 day, 14:34:01, time: 0.849, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3068, decode.acc_seg: 46.5150, loss: 1.3068
2021-08-13 13:50:13,785 - mmseg - INFO - Iter [9600/160000]	lr: 9.464e-03, eta: 1 day, 14:32:12, time: 0.842, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3184, decode.acc_seg: 47.3159, loss: 1.3184
2021-08-13 13:50:57,822 - mmseg - INFO - Iter [9650/160000]	lr: 9.461e-03, eta: 1 day, 14:30:54, time: 0.881, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3281, decode.acc_seg: 47.1158, loss: 1.3281
2021-08-13 13:51:40,495 - mmseg - INFO - Iter [9700/160000]	lr: 9.458e-03, eta: 1 day, 14:29:14, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2958, decode.acc_seg: 46.5795, loss: 1.2958
2021-08-13 13:52:22,014 - mmseg - INFO - Iter [9750/160000]	lr: 9.455e-03, eta: 1 day, 14:27:18, time: 0.831, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2517, decode.acc_seg: 49.1639, loss: 1.2517
2021-08-13 13:53:03,816 - mmseg - INFO - Iter [9800/160000]	lr: 9.453e-03, eta: 1 day, 14:25:26, time: 0.836, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3010, decode.acc_seg: 47.0485, loss: 1.3010
2021-08-13 13:53:47,066 - mmseg - INFO - Iter [9850/160000]	lr: 9.450e-03, eta: 1 day, 14:23:57, time: 0.865, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2854, decode.acc_seg: 47.6124, loss: 1.2854
2021-08-13 13:54:29,651 - mmseg - INFO - Iter [9900/160000]	lr: 9.447e-03, eta: 1 day, 14:22:19, time: 0.852, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3067, decode.acc_seg: 48.5496, loss: 1.3067
2021-08-13 13:55:12,433 - mmseg - INFO - Iter [9950/160000]	lr: 9.444e-03, eta: 1 day, 14:20:44, time: 0.855, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2857, decode.acc_seg: 46.3215, loss: 1.2857
2021-08-13 13:55:56,429 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 13:55:56,429 - mmseg - INFO - Iter [10000/160000]	lr: 9.441e-03, eta: 1 day, 14:19:28, time: 0.880, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3137, decode.acc_seg: 47.4815, loss: 1.3137
2021-08-13 13:56:38,505 - mmseg - INFO - Iter [10050/160000]	lr: 9.439e-03, eta: 1 day, 14:17:44, time: 0.842, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2752, decode.acc_seg: 47.9265, loss: 1.2752
2021-08-13 13:57:56,468 - mmseg - INFO - Iter [10100/160000]	lr: 9.436e-03, eta: 1 day, 14:24:53, time: 1.559, data_time: 0.725, memory: 8535, decode.loss_seg: 1.3013, decode.acc_seg: 47.0925, loss: 1.3013
2021-08-13 13:58:40,148 - mmseg - INFO - Iter [10150/160000]	lr: 9.433e-03, eta: 1 day, 14:23:30, time: 0.873, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2522, decode.acc_seg: 48.1731, loss: 1.2522
2021-08-13 13:59:23,743 - mmseg - INFO - Iter [10200/160000]	lr: 9.430e-03, eta: 1 day, 14:22:07, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2470, decode.acc_seg: 49.1077, loss: 1.2470
2021-08-13 14:00:07,481 - mmseg - INFO - Iter [10250/160000]	lr: 9.427e-03, eta: 1 day, 14:20:47, time: 0.875, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2836, decode.acc_seg: 47.8648, loss: 1.2836
2021-08-13 14:00:50,484 - mmseg - INFO - Iter [10300/160000]	lr: 9.425e-03, eta: 1 day, 14:19:16, time: 0.860, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2785, decode.acc_seg: 47.6692, loss: 1.2785
2021-08-13 14:01:33,123 - mmseg - INFO - Iter [10350/160000]	lr: 9.422e-03, eta: 1 day, 14:17:40, time: 0.852, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2946, decode.acc_seg: 47.5195, loss: 1.2946
2021-08-13 14:02:16,093 - mmseg - INFO - Iter [10400/160000]	lr: 9.419e-03, eta: 1 day, 14:16:09, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2859, decode.acc_seg: 47.6349, loss: 1.2859
2021-08-13 14:02:59,041 - mmseg - INFO - Iter [10450/160000]	lr: 9.416e-03, eta: 1 day, 14:14:39, time: 0.859, data_time: 0.010, memory: 8535, decode.loss_seg: 1.3040, decode.acc_seg: 47.2414, loss: 1.3040
2021-08-13 14:03:41,136 - mmseg - INFO - Iter [10500/160000]	lr: 9.413e-03, eta: 1 day, 14:12:57, time: 0.842, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2770, decode.acc_seg: 47.3065, loss: 1.2770
2021-08-13 14:04:23,345 - mmseg - INFO - Iter [10550/160000]	lr: 9.411e-03, eta: 1 day, 14:11:17, time: 0.844, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2918, decode.acc_seg: 47.1384, loss: 1.2918
2021-08-13 14:05:05,925 - mmseg - INFO - Iter [10600/160000]	lr: 9.408e-03, eta: 1 day, 14:09:43, time: 0.852, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2666, decode.acc_seg: 48.7438, loss: 1.2666
2021-08-13 14:05:48,277 - mmseg - INFO - Iter [10650/160000]	lr: 9.405e-03, eta: 1 day, 14:08:06, time: 0.847, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2534, decode.acc_seg: 47.8392, loss: 1.2534
2021-08-13 14:06:31,269 - mmseg - INFO - Iter [10700/160000]	lr: 9.402e-03, eta: 1 day, 14:06:39, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 1.3161, decode.acc_seg: 47.2354, loss: 1.3161
2021-08-13 14:07:48,734 - mmseg - INFO - Iter [10750/160000]	lr: 9.399e-03, eta: 1 day, 14:13:10, time: 1.549, data_time: 0.679, memory: 8535, decode.loss_seg: 1.2675, decode.acc_seg: 47.3844, loss: 1.2675
2021-08-13 14:08:32,095 - mmseg - INFO - Iter [10800/160000]	lr: 9.397e-03, eta: 1 day, 14:11:46, time: 0.867, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2389, decode.acc_seg: 47.9292, loss: 1.2389
2021-08-13 14:09:14,835 - mmseg - INFO - Iter [10850/160000]	lr: 9.394e-03, eta: 1 day, 14:10:14, time: 0.855, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2801, decode.acc_seg: 48.1074, loss: 1.2801
2021-08-13 14:09:57,916 - mmseg - INFO - Iter [10900/160000]	lr: 9.391e-03, eta: 1 day, 14:08:47, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2852, decode.acc_seg: 48.0058, loss: 1.2852
2021-08-13 14:10:41,006 - mmseg - INFO - Iter [10950/160000]	lr: 9.388e-03, eta: 1 day, 14:07:21, time: 0.862, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2505, decode.acc_seg: 46.7778, loss: 1.2505
2021-08-13 14:11:25,012 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 14:11:25,013 - mmseg - INFO - Iter [11000/160000]	lr: 9.385e-03, eta: 1 day, 14:06:07, time: 0.880, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2874, decode.acc_seg: 48.2798, loss: 1.2874
2021-08-13 14:12:09,098 - mmseg - INFO - Iter [11050/160000]	lr: 9.383e-03, eta: 1 day, 14:04:55, time: 0.882, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2793, decode.acc_seg: 47.5413, loss: 1.2793
2021-08-13 14:12:53,780 - mmseg - INFO - Iter [11100/160000]	lr: 9.380e-03, eta: 1 day, 14:03:51, time: 0.893, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2790, decode.acc_seg: 47.2781, loss: 1.2790
2021-08-13 14:13:38,098 - mmseg - INFO - Iter [11150/160000]	lr: 9.377e-03, eta: 1 day, 14:02:43, time: 0.887, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2871, decode.acc_seg: 47.1620, loss: 1.2871
2021-08-13 14:14:20,746 - mmseg - INFO - Iter [11200/160000]	lr: 9.374e-03, eta: 1 day, 14:01:12, time: 0.853, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2409, decode.acc_seg: 48.5389, loss: 1.2409
2021-08-13 14:15:03,615 - mmseg - INFO - Iter [11250/160000]	lr: 9.371e-03, eta: 1 day, 13:59:45, time: 0.857, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2859, decode.acc_seg: 47.1288, loss: 1.2859
2021-08-13 14:15:46,146 - mmseg - INFO - Iter [11300/160000]	lr: 9.369e-03, eta: 1 day, 13:58:14, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2995, decode.acc_seg: 47.4883, loss: 1.2995
2021-08-13 14:16:28,844 - mmseg - INFO - Iter [11350/160000]	lr: 9.366e-03, eta: 1 day, 13:56:45, time: 0.854, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2458, decode.acc_seg: 48.7709, loss: 1.2458
2021-08-13 14:17:48,777 - mmseg - INFO - Iter [11400/160000]	lr: 9.363e-03, eta: 1 day, 14:03:21, time: 1.598, data_time: 0.658, memory: 8535, decode.loss_seg: 1.2524, decode.acc_seg: 47.6573, loss: 1.2524
2021-08-13 14:18:32,991 - mmseg - INFO - Iter [11450/160000]	lr: 9.360e-03, eta: 1 day, 14:02:11, time: 0.885, data_time: 0.012, memory: 8535, decode.loss_seg: 1.2989, decode.acc_seg: 47.9756, loss: 1.2989
2021-08-13 14:19:15,999 - mmseg - INFO - Iter [11500/160000]	lr: 9.357e-03, eta: 1 day, 14:00:45, time: 0.860, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2865, decode.acc_seg: 47.5387, loss: 1.2865
2021-08-13 14:19:58,731 - mmseg - INFO - Iter [11550/160000]	lr: 9.354e-03, eta: 1 day, 13:59:16, time: 0.855, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2709, decode.acc_seg: 48.8770, loss: 1.2709
2021-08-13 14:20:41,700 - mmseg - INFO - Iter [11600/160000]	lr: 9.352e-03, eta: 1 day, 13:57:51, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2514, decode.acc_seg: 48.1995, loss: 1.2514
2021-08-13 14:21:24,563 - mmseg - INFO - Iter [11650/160000]	lr: 9.349e-03, eta: 1 day, 13:56:24, time: 0.857, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2615, decode.acc_seg: 48.4921, loss: 1.2615
2021-08-13 14:22:07,688 - mmseg - INFO - Iter [11700/160000]	lr: 9.346e-03, eta: 1 day, 13:55:01, time: 0.862, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2338, decode.acc_seg: 49.2096, loss: 1.2338
2021-08-13 14:22:50,774 - mmseg - INFO - Iter [11750/160000]	lr: 9.343e-03, eta: 1 day, 13:53:38, time: 0.862, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2357, decode.acc_seg: 48.7184, loss: 1.2357
2021-08-13 14:23:33,092 - mmseg - INFO - Iter [11800/160000]	lr: 9.340e-03, eta: 1 day, 13:52:06, time: 0.846, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2692, decode.acc_seg: 48.3047, loss: 1.2692
2021-08-13 14:24:16,099 - mmseg - INFO - Iter [11850/160000]	lr: 9.338e-03, eta: 1 day, 13:50:42, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2878, decode.acc_seg: 47.2113, loss: 1.2878
2021-08-13 14:24:58,115 - mmseg - INFO - Iter [11900/160000]	lr: 9.335e-03, eta: 1 day, 13:49:07, time: 0.840, data_time: 0.012, memory: 8535, decode.loss_seg: 1.2368, decode.acc_seg: 47.5967, loss: 1.2368
2021-08-13 14:25:40,464 - mmseg - INFO - Iter [11950/160000]	lr: 9.332e-03, eta: 1 day, 13:47:36, time: 0.847, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2547, decode.acc_seg: 49.0875, loss: 1.2547
2021-08-13 14:26:58,063 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 14:26:58,068 - mmseg - INFO - Iter [12000/160000]	lr: 9.329e-03, eta: 1 day, 13:53:20, time: 1.552, data_time: 0.648, memory: 8535, decode.loss_seg: 1.2650, decode.acc_seg: 47.8965, loss: 1.2650
2021-08-13 14:27:42,713 - mmseg - INFO - Iter [12050/160000]	lr: 9.326e-03, eta: 1 day, 13:52:16, time: 0.892, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2568, decode.acc_seg: 47.8565, loss: 1.2568
2021-08-13 14:28:27,853 - mmseg - INFO - Iter [12100/160000]	lr: 9.324e-03, eta: 1 day, 13:51:19, time: 0.904, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2370, decode.acc_seg: 48.6386, loss: 1.2370
2021-08-13 14:29:11,979 - mmseg - INFO - Iter [12150/160000]	lr: 9.321e-03, eta: 1 day, 13:50:09, time: 0.882, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2527, decode.acc_seg: 48.3150, loss: 1.2527
2021-08-13 14:29:55,137 - mmseg - INFO - Iter [12200/160000]	lr: 9.318e-03, eta: 1 day, 13:48:48, time: 0.864, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2728, decode.acc_seg: 47.4687, loss: 1.2728
2021-08-13 14:30:40,352 - mmseg - INFO - Iter [12250/160000]	lr: 9.315e-03, eta: 1 day, 13:47:52, time: 0.903, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2419, decode.acc_seg: 49.3685, loss: 1.2419
2021-08-13 14:31:26,052 - mmseg - INFO - Iter [12300/160000]	lr: 9.312e-03, eta: 1 day, 13:47:02, time: 0.914, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2413, decode.acc_seg: 48.3976, loss: 1.2413
2021-08-13 14:32:09,889 - mmseg - INFO - Iter [12350/160000]	lr: 9.310e-03, eta: 1 day, 13:45:50, time: 0.878, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2361, decode.acc_seg: 48.7176, loss: 1.2361
2021-08-13 14:32:52,951 - mmseg - INFO - Iter [12400/160000]	lr: 9.307e-03, eta: 1 day, 13:44:28, time: 0.860, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2238, decode.acc_seg: 48.3090, loss: 1.2238
2021-08-13 14:33:36,781 - mmseg - INFO - Iter [12450/160000]	lr: 9.304e-03, eta: 1 day, 13:43:16, time: 0.877, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2592, decode.acc_seg: 48.0511, loss: 1.2592
2021-08-13 14:34:19,247 - mmseg - INFO - Iter [12500/160000]	lr: 9.301e-03, eta: 1 day, 13:41:48, time: 0.850, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2561, decode.acc_seg: 49.0992, loss: 1.2561
2021-08-13 14:35:03,221 - mmseg - INFO - Iter [12550/160000]	lr: 9.298e-03, eta: 1 day, 13:40:38, time: 0.879, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2504, decode.acc_seg: 47.6803, loss: 1.2504
2021-08-13 14:35:46,678 - mmseg - INFO - Iter [12600/160000]	lr: 9.296e-03, eta: 1 day, 13:39:22, time: 0.869, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2285, decode.acc_seg: 48.9851, loss: 1.2285
2021-08-13 14:37:06,098 - mmseg - INFO - Iter [12650/160000]	lr: 9.293e-03, eta: 1 day, 13:45:06, time: 1.589, data_time: 0.731, memory: 8535, decode.loss_seg: 1.2094, decode.acc_seg: 49.1489, loss: 1.2094
2021-08-13 14:37:49,283 - mmseg - INFO - Iter [12700/160000]	lr: 9.290e-03, eta: 1 day, 13:43:46, time: 0.863, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2106, decode.acc_seg: 48.8955, loss: 1.2106
2021-08-13 14:38:32,679 - mmseg - INFO - Iter [12750/160000]	lr: 9.287e-03, eta: 1 day, 13:42:29, time: 0.868, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2039, decode.acc_seg: 49.5455, loss: 1.2039
2021-08-13 14:39:17,429 - mmseg - INFO - Iter [12800/160000]	lr: 9.284e-03, eta: 1 day, 13:41:26, time: 0.894, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2325, decode.acc_seg: 48.8706, loss: 1.2325
2021-08-13 14:40:00,587 - mmseg - INFO - Iter [12850/160000]	lr: 9.282e-03, eta: 1 day, 13:40:07, time: 0.864, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2141, decode.acc_seg: 48.7530, loss: 1.2141
2021-08-13 14:40:43,905 - mmseg - INFO - Iter [12900/160000]	lr: 9.279e-03, eta: 1 day, 13:38:50, time: 0.866, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2111, decode.acc_seg: 48.3889, loss: 1.2111
2021-08-13 14:41:27,428 - mmseg - INFO - Iter [12950/160000]	lr: 9.276e-03, eta: 1 day, 13:37:35, time: 0.871, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2337, decode.acc_seg: 49.2312, loss: 1.2337
2021-08-13 14:42:09,639 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 14:42:09,639 - mmseg - INFO - Iter [13000/160000]	lr: 9.273e-03, eta: 1 day, 13:36:05, time: 0.844, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2446, decode.acc_seg: 49.2993, loss: 1.2446
2021-08-13 14:42:52,645 - mmseg - INFO - Iter [13050/160000]	lr: 9.270e-03, eta: 1 day, 13:34:45, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2316, decode.acc_seg: 48.9681, loss: 1.2316
2021-08-13 14:43:35,351 - mmseg - INFO - Iter [13100/160000]	lr: 9.267e-03, eta: 1 day, 13:33:21, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1974, decode.acc_seg: 47.6693, loss: 1.1974
2021-08-13 14:44:18,072 - mmseg - INFO - Iter [13150/160000]	lr: 9.265e-03, eta: 1 day, 13:31:59, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2572, decode.acc_seg: 47.7037, loss: 1.2572
2021-08-13 14:45:01,110 - mmseg - INFO - Iter [13200/160000]	lr: 9.262e-03, eta: 1 day, 13:30:39, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2277, decode.acc_seg: 48.8780, loss: 1.2277
2021-08-13 14:45:42,430 - mmseg - INFO - Iter [13250/160000]	lr: 9.259e-03, eta: 1 day, 13:29:02, time: 0.827, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2423, decode.acc_seg: 48.0596, loss: 1.2423
2021-08-13 14:47:01,659 - mmseg - INFO - Iter [13300/160000]	lr: 9.256e-03, eta: 1 day, 13:34:23, time: 1.585, data_time: 0.740, memory: 8535, decode.loss_seg: 1.2255, decode.acc_seg: 48.2483, loss: 1.2255
2021-08-13 14:47:44,262 - mmseg - INFO - Iter [13350/160000]	lr: 9.253e-03, eta: 1 day, 13:32:58, time: 0.852, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1988, decode.acc_seg: 49.0427, loss: 1.1988
2021-08-13 14:48:28,460 - mmseg - INFO - Iter [13400/160000]	lr: 9.251e-03, eta: 1 day, 13:31:51, time: 0.884, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1950, decode.acc_seg: 49.5826, loss: 1.1950
2021-08-13 14:49:11,108 - mmseg - INFO - Iter [13450/160000]	lr: 9.248e-03, eta: 1 day, 13:30:28, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2427, decode.acc_seg: 48.6589, loss: 1.2427
2021-08-13 14:49:55,489 - mmseg - INFO - Iter [13500/160000]	lr: 9.245e-03, eta: 1 day, 13:29:23, time: 0.887, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2304, decode.acc_seg: 48.4828, loss: 1.2304
2021-08-13 14:50:39,359 - mmseg - INFO - Iter [13550/160000]	lr: 9.242e-03, eta: 1 day, 13:28:14, time: 0.878, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1796, decode.acc_seg: 49.0496, loss: 1.1796
2021-08-13 14:51:22,001 - mmseg - INFO - Iter [13600/160000]	lr: 9.239e-03, eta: 1 day, 13:26:51, time: 0.853, data_time: 0.012, memory: 8535, decode.loss_seg: 1.2453, decode.acc_seg: 49.3026, loss: 1.2453
2021-08-13 14:52:05,099 - mmseg - INFO - Iter [13650/160000]	lr: 9.237e-03, eta: 1 day, 13:25:33, time: 0.862, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2010, decode.acc_seg: 49.6275, loss: 1.2010
2021-08-13 14:52:47,731 - mmseg - INFO - Iter [13700/160000]	lr: 9.234e-03, eta: 1 day, 13:24:11, time: 0.853, data_time: 0.012, memory: 8535, decode.loss_seg: 1.2551, decode.acc_seg: 48.5473, loss: 1.2551
2021-08-13 14:53:30,359 - mmseg - INFO - Iter [13750/160000]	lr: 9.231e-03, eta: 1 day, 13:22:49, time: 0.852, data_time: 0.012, memory: 8535, decode.loss_seg: 1.2342, decode.acc_seg: 48.8678, loss: 1.2342
2021-08-13 14:54:13,518 - mmseg - INFO - Iter [13800/160000]	lr: 9.228e-03, eta: 1 day, 13:21:33, time: 0.864, data_time: 0.012, memory: 8535, decode.loss_seg: 1.2033, decode.acc_seg: 49.1174, loss: 1.2033
2021-08-13 14:54:56,093 - mmseg - INFO - Iter [13850/160000]	lr: 9.225e-03, eta: 1 day, 13:20:11, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2368, decode.acc_seg: 48.4156, loss: 1.2368
2021-08-13 14:56:15,058 - mmseg - INFO - Iter [13900/160000]	lr: 9.223e-03, eta: 1 day, 13:25:11, time: 1.580, data_time: 0.722, memory: 8535, decode.loss_seg: 1.2349, decode.acc_seg: 48.5629, loss: 1.2349
2021-08-13 14:56:57,797 - mmseg - INFO - Iter [13950/160000]	lr: 9.220e-03, eta: 1 day, 13:23:50, time: 0.855, data_time: 0.012, memory: 8535, decode.loss_seg: 1.2062, decode.acc_seg: 48.6665, loss: 1.2062
2021-08-13 14:57:41,046 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 14:57:41,046 - mmseg - INFO - Iter [14000/160000]	lr: 9.217e-03, eta: 1 day, 13:22:34, time: 0.864, data_time: 0.012, memory: 8535, decode.loss_seg: 1.2398, decode.acc_seg: 49.0770, loss: 1.2398
2021-08-13 14:58:24,084 - mmseg - INFO - Iter [14050/160000]	lr: 9.214e-03, eta: 1 day, 13:21:16, time: 0.861, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1757, decode.acc_seg: 49.2815, loss: 1.1757
2021-08-13 14:59:07,260 - mmseg - INFO - Iter [14100/160000]	lr: 9.211e-03, eta: 1 day, 13:20:00, time: 0.864, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2329, decode.acc_seg: 47.9507, loss: 1.2329
2021-08-13 14:59:50,026 - mmseg - INFO - Iter [14150/160000]	lr: 9.208e-03, eta: 1 day, 13:18:40, time: 0.855, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2218, decode.acc_seg: 48.6046, loss: 1.2218
2021-08-13 15:00:33,770 - mmseg - INFO - Iter [14200/160000]	lr: 9.206e-03, eta: 1 day, 13:17:31, time: 0.875, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2084, decode.acc_seg: 49.5710, loss: 1.2084
2021-08-13 15:01:17,334 - mmseg - INFO - Iter [14250/160000]	lr: 9.203e-03, eta: 1 day, 13:16:19, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2025, decode.acc_seg: 49.5289, loss: 1.2025
2021-08-13 15:02:00,535 - mmseg - INFO - Iter [14300/160000]	lr: 9.200e-03, eta: 1 day, 13:15:05, time: 0.864, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2172, decode.acc_seg: 47.9626, loss: 1.2172
2021-08-13 15:02:44,369 - mmseg - INFO - Iter [14350/160000]	lr: 9.197e-03, eta: 1 day, 13:13:56, time: 0.876, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1887, decode.acc_seg: 49.8334, loss: 1.1887
2021-08-13 15:03:26,919 - mmseg - INFO - Iter [14400/160000]	lr: 9.194e-03, eta: 1 day, 13:12:35, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2301, decode.acc_seg: 49.5680, loss: 1.2301
2021-08-13 15:04:10,514 - mmseg - INFO - Iter [14450/160000]	lr: 9.192e-03, eta: 1 day, 13:11:25, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2019, decode.acc_seg: 49.4855, loss: 1.2019
2021-08-13 15:04:54,560 - mmseg - INFO - Iter [14500/160000]	lr: 9.189e-03, eta: 1 day, 13:10:19, time: 0.880, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1659, decode.acc_seg: 50.8402, loss: 1.1659
2021-08-13 15:06:14,114 - mmseg - INFO - Iter [14550/160000]	lr: 9.186e-03, eta: 1 day, 13:15:09, time: 1.591, data_time: 0.734, memory: 8535, decode.loss_seg: 1.2216, decode.acc_seg: 48.2333, loss: 1.2216
2021-08-13 15:06:58,129 - mmseg - INFO - Iter [14600/160000]	lr: 9.183e-03, eta: 1 day, 13:14:02, time: 0.880, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2037, decode.acc_seg: 49.2518, loss: 1.2037
2021-08-13 15:07:42,247 - mmseg - INFO - Iter [14650/160000]	lr: 9.180e-03, eta: 1 day, 13:12:56, time: 0.882, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2039, decode.acc_seg: 49.0027, loss: 1.2039
2021-08-13 15:08:26,715 - mmseg - INFO - Iter [14700/160000]	lr: 9.178e-03, eta: 1 day, 13:11:54, time: 0.890, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1903, decode.acc_seg: 48.8431, loss: 1.1903
2021-08-13 15:09:11,884 - mmseg - INFO - Iter [14750/160000]	lr: 9.175e-03, eta: 1 day, 13:10:59, time: 0.903, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1838, decode.acc_seg: 49.2560, loss: 1.1838
2021-08-13 15:09:57,098 - mmseg - INFO - Iter [14800/160000]	lr: 9.172e-03, eta: 1 day, 13:10:05, time: 0.904, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2280, decode.acc_seg: 49.5518, loss: 1.2280
2021-08-13 15:10:39,723 - mmseg - INFO - Iter [14850/160000]	lr: 9.169e-03, eta: 1 day, 13:08:45, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1898, decode.acc_seg: 49.7474, loss: 1.1898
2021-08-13 15:11:23,263 - mmseg - INFO - Iter [14900/160000]	lr: 9.166e-03, eta: 1 day, 13:07:34, time: 0.871, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2088, decode.acc_seg: 49.3299, loss: 1.2088
2021-08-13 15:12:06,994 - mmseg - INFO - Iter [14950/160000]	lr: 9.163e-03, eta: 1 day, 13:06:26, time: 0.875, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1966, decode.acc_seg: 49.1534, loss: 1.1966
2021-08-13 15:12:50,071 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 15:12:50,071 - mmseg - INFO - Iter [15000/160000]	lr: 9.161e-03, eta: 1 day, 13:05:11, time: 0.861, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2147, decode.acc_seg: 49.0090, loss: 1.2147
2021-08-13 15:13:33,508 - mmseg - INFO - Iter [15050/160000]	lr: 9.158e-03, eta: 1 day, 13:04:00, time: 0.869, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1645, decode.acc_seg: 50.0636, loss: 1.1645
2021-08-13 15:14:15,883 - mmseg - INFO - Iter [15100/160000]	lr: 9.155e-03, eta: 1 day, 13:02:39, time: 0.848, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1813, decode.acc_seg: 49.4102, loss: 1.1813
2021-08-13 15:15:33,429 - mmseg - INFO - Iter [15150/160000]	lr: 9.152e-03, eta: 1 day, 13:06:54, time: 1.551, data_time: 0.710, memory: 8535, decode.loss_seg: 1.1684, decode.acc_seg: 49.8294, loss: 1.1684
2021-08-13 15:16:18,450 - mmseg - INFO - Iter [15200/160000]	lr: 9.149e-03, eta: 1 day, 13:05:57, time: 0.900, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1792, decode.acc_seg: 48.8550, loss: 1.1792
2021-08-13 15:17:02,618 - mmseg - INFO - Iter [15250/160000]	lr: 9.147e-03, eta: 1 day, 13:04:53, time: 0.883, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1984, decode.acc_seg: 49.1578, loss: 1.1984
2021-08-13 15:17:46,342 - mmseg - INFO - Iter [15300/160000]	lr: 9.144e-03, eta: 1 day, 13:03:44, time: 0.875, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2156, decode.acc_seg: 50.2367, loss: 1.2156
2021-08-13 15:18:30,400 - mmseg - INFO - Iter [15350/160000]	lr: 9.141e-03, eta: 1 day, 13:02:39, time: 0.881, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1880, decode.acc_seg: 49.2797, loss: 1.1880
2021-08-13 15:19:14,273 - mmseg - INFO - Iter [15400/160000]	lr: 9.138e-03, eta: 1 day, 13:01:32, time: 0.878, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2203, decode.acc_seg: 49.6619, loss: 1.2203
2021-08-13 15:19:57,068 - mmseg - INFO - Iter [15450/160000]	lr: 9.135e-03, eta: 1 day, 13:00:15, time: 0.856, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2060, decode.acc_seg: 50.4316, loss: 1.2060
2021-08-13 15:20:40,472 - mmseg - INFO - Iter [15500/160000]	lr: 9.133e-03, eta: 1 day, 12:59:04, time: 0.868, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1931, decode.acc_seg: 48.7266, loss: 1.1931
2021-08-13 15:21:24,856 - mmseg - INFO - Iter [15550/160000]	lr: 9.130e-03, eta: 1 day, 12:58:02, time: 0.887, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1816, decode.acc_seg: 49.1016, loss: 1.1816
2021-08-13 15:22:10,132 - mmseg - INFO - Iter [15600/160000]	lr: 9.127e-03, eta: 1 day, 12:57:09, time: 0.906, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1977, decode.acc_seg: 48.7998, loss: 1.1977
2021-08-13 15:22:54,263 - mmseg - INFO - Iter [15650/160000]	lr: 9.124e-03, eta: 1 day, 12:56:05, time: 0.883, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1999, decode.acc_seg: 49.4564, loss: 1.1999
2021-08-13 15:23:36,376 - mmseg - INFO - Iter [15700/160000]	lr: 9.121e-03, eta: 1 day, 12:54:43, time: 0.843, data_time: 0.010, memory: 8535, decode.loss_seg: 1.2071, decode.acc_seg: 49.6188, loss: 1.2071
2021-08-13 15:24:18,880 - mmseg - INFO - Iter [15750/160000]	lr: 9.118e-03, eta: 1 day, 12:53:24, time: 0.849, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1591, decode.acc_seg: 49.0233, loss: 1.1591
2021-08-13 15:25:39,137 - mmseg - INFO - Iter [15800/160000]	lr: 9.116e-03, eta: 1 day, 12:57:50, time: 1.605, data_time: 0.678, memory: 8535, decode.loss_seg: 1.1825, decode.acc_seg: 50.1103, loss: 1.1825
2021-08-13 15:26:22,957 - mmseg - INFO - Iter [15850/160000]	lr: 9.113e-03, eta: 1 day, 12:56:43, time: 0.877, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1600, decode.acc_seg: 48.9735, loss: 1.1600
2021-08-13 15:27:05,392 - mmseg - INFO - Iter [15900/160000]	lr: 9.110e-03, eta: 1 day, 12:55:24, time: 0.849, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1660, decode.acc_seg: 51.0001, loss: 1.1660
2021-08-13 15:27:48,976 - mmseg - INFO - Iter [15950/160000]	lr: 9.107e-03, eta: 1 day, 12:54:14, time: 0.871, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1560, decode.acc_seg: 49.3192, loss: 1.1560
2021-08-13 15:28:32,080 - mmseg - INFO - Saving checkpoint at 16000 iterations
2021-08-13 15:28:32,327 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 15:28:32,330 - mmseg - INFO - Iter [16000/160000]	lr: 9.104e-03, eta: 1 day, 12:53:04, time: 0.867, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2279, decode.acc_seg: 49.1314, loss: 1.2279
2021-08-13 15:31:00,163 - mmseg - INFO - per class results:
2021-08-13 15:31:00,177 - mmseg - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 51.53 | 83.88 |
|       building      | 62.33 | 86.91 |
|         sky         | 86.55 | 95.63 |
|        floor        | 55.78 | 80.59 |
|         tree        | 54.88 | 73.13 |
|       ceiling       | 64.89 |  78.5 |
|         road        | 62.23 | 76.64 |
|         bed         | 58.41 | 69.88 |
|      windowpane     | 39.18 | 64.14 |
|        grass        | 51.46 | 85.09 |
|       cabinet       | 33.24 | 48.36 |
|       sidewalk      | 29.48 | 35.94 |
|        person       | 38.55 | 50.44 |
|        earth        | 19.03 | 27.46 |
|         door        | 10.72 | 14.43 |
|        table        | 19.94 | 25.49 |
|       mountain      | 31.93 | 42.37 |
|        plant        | 17.68 | 19.17 |
|       curtain       | 32.63 | 44.95 |
|        chair        |  20.0 | 28.31 |
|         car         |  53.2 | 64.83 |
|        water        | 14.56 | 20.44 |
|       painting      | 42.92 | 54.77 |
|         sofa        | 27.86 | 41.89 |
|        shelf        | 11.58 | 13.53 |
|        house        | 25.19 | 33.06 |
|         sea         | 24.04 | 71.22 |
|        mirror       | 16.52 | 21.58 |
|         rug         | 18.35 | 20.58 |
|        field        | 14.38 | 27.91 |
|       armchair      |  4.81 |  5.94 |
|         seat        | 14.83 | 18.32 |
|        fence        |  7.93 | 11.65 |
|         desk        |  7.35 |  8.56 |
|         rock        |  5.2  |  5.92 |
|       wardrobe      |  4.22 |  4.39 |
|         lamp        | 15.84 | 17.84 |
|       bathtub       | 10.57 | 12.52 |
|       railing       |  7.55 |  8.21 |
|       cushion       | 13.24 | 16.22 |
|         base        |  0.22 |  0.22 |
|         box         |  0.2  |  0.2  |
|        column       |  0.5  |  0.51 |
|      signboard      |  6.73 |  7.89 |
|   chest of drawers  | 20.62 | 29.93 |
|       counter       |  4.03 |  4.11 |
|         sand        | 11.28 | 14.85 |
|         sink        | 20.73 | 32.67 |
|      skyscraper     | 32.39 |  57.9 |
|      fireplace      | 35.39 | 41.07 |
|     refrigerator    |  5.56 |  6.12 |
|      grandstand     | 13.96 | 22.41 |
|         path        |  1.03 |  1.08 |
|        stairs       |  8.23 |  8.55 |
|        runway       |  35.1 | 68.87 |
|         case        |  4.31 |  4.93 |
|      pool table     | 43.09 | 74.28 |
|        pillow       | 20.93 | 23.99 |
|     screen door     |  0.68 |  0.69 |
|       stairway      |  3.24 |  3.71 |
|        river        |  6.54 | 17.95 |
|        bridge       |  1.45 |  2.06 |
|       bookcase      |  3.79 |  3.9  |
|        blind        |  0.75 |  0.76 |
|     coffee table    | 19.67 | 28.49 |
|        toilet       | 30.34 | 42.94 |
|        flower       |  4.18 |  4.43 |
|         book        |  7.34 |  7.72 |
|         hill        |  6.11 |  9.73 |
|        bench        |  8.07 |  9.72 |
|      countertop     |  4.61 |  5.04 |
|        stove        | 20.83 | 32.94 |
|         palm        |  0.03 |  0.03 |
|    kitchen island   | 11.59 | 13.42 |
|       computer      |  5.74 |  6.09 |
|     swivel chair    |  5.79 |  5.93 |
|         boat        |  1.83 |  2.23 |
|         bar         | 10.17 | 10.83 |
|    arcade machine   |  2.21 |  2.86 |
|        hovel        |  0.0  |  0.0  |
|         bus         |  7.9  |  9.0  |
|        towel        |  0.05 |  0.05 |
|        light        |  8.41 |  9.62 |
|        truck        |  0.39 |  0.57 |
|        tower        |  6.88 |  7.08 |
|      chandelier     | 29.88 |  39.5 |
|        awning       |  2.01 |  2.01 |
|     streetlight     |  0.36 |  0.36 |
|        booth        |  0.0  |  0.0  |
| television receiver | 17.95 | 21.45 |
|       airplane      |  7.38 | 11.78 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  0.0  |  0.0  |
|         pole        |  1.23 |  1.31 |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.0  |  0.0  |
|      escalator      |  0.71 |  0.83 |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.0  |  0.0  |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       | 13.06 | 14.11 |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    | 10.28 | 16.56 |
|        stool        |  0.0  |  0.0  |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      | 30.66 | 51.97 |
|         tent        | 19.52 | 26.08 |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.0  |  0.0  |
|        cradle       | 26.89 | 31.56 |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.23 |  0.5  |
|         food        |  0.32 |  0.32 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.02 |  0.02 |
|      microwave      |  4.82 |  4.9  |
|         pot         |  0.0  |  0.0  |
|        animal       |  0.0  |  0.0  |
|       bicycle       |  0.0  |  0.0  |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  1.73 |  1.94 |
|        screen       | 30.08 | 37.96 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.81 |  0.81 |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.08 |  0.08 |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.03 |  0.03 |
|        plate        |  0.0  |  0.0  |
|       monitor       |  0.0  |  0.0  |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.0  |  0.0  |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
2021-08-13 15:31:00,177 - mmseg - INFO - Summary:
2021-08-13 15:31:00,177 - mmseg - INFO - 
+------+-------+-------+
| aAcc |  mIoU |  mAcc |
+------+-------+-------+
| 63.4 | 12.14 | 16.75 |
+------+-------+-------+
2021-08-13 15:31:00,301 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 15:31:00,302 - mmseg - INFO - Iter(val) [250]	aAcc: 0.6340, mIoU: 0.1214, mAcc: 0.1675, IoU.wall: 0.5153, IoU.building: 0.6233, IoU.sky: 0.8655, IoU.floor: 0.5578, IoU.tree: 0.5488, IoU.ceiling: 0.6489, IoU.road: 0.6223, IoU.bed : 0.5841, IoU.windowpane: 0.3918, IoU.grass: 0.5146, IoU.cabinet: 0.3324, IoU.sidewalk: 0.2948, IoU.person: 0.3855, IoU.earth: 0.1903, IoU.door: 0.1072, IoU.table: 0.1994, IoU.mountain: 0.3193, IoU.plant: 0.1768, IoU.curtain: 0.3263, IoU.chair: 0.2000, IoU.car: 0.5320, IoU.water: 0.1456, IoU.painting: 0.4292, IoU.sofa: 0.2786, IoU.shelf: 0.1158, IoU.house: 0.2519, IoU.sea: 0.2404, IoU.mirror: 0.1652, IoU.rug: 0.1835, IoU.field: 0.1438, IoU.armchair: 0.0481, IoU.seat: 0.1483, IoU.fence: 0.0793, IoU.desk: 0.0735, IoU.rock: 0.0520, IoU.wardrobe: 0.0422, IoU.lamp: 0.1584, IoU.bathtub: 0.1057, IoU.railing: 0.0755, IoU.cushion: 0.1324, IoU.base: 0.0022, IoU.box: 0.0020, IoU.column: 0.0050, IoU.signboard: 0.0673, IoU.chest of drawers: 0.2062, IoU.counter: 0.0403, IoU.sand: 0.1128, IoU.sink: 0.2073, IoU.skyscraper: 0.3239, IoU.fireplace: 0.3539, IoU.refrigerator: 0.0556, IoU.grandstand: 0.1396, IoU.path: 0.0103, IoU.stairs: 0.0823, IoU.runway: 0.3510, IoU.case: 0.0431, IoU.pool table: 0.4309, IoU.pillow: 0.2093, IoU.screen door: 0.0068, IoU.stairway: 0.0324, IoU.river: 0.0654, IoU.bridge: 0.0145, IoU.bookcase: 0.0379, IoU.blind: 0.0075, IoU.coffee table: 0.1967, IoU.toilet: 0.3034, IoU.flower: 0.0418, IoU.book: 0.0734, IoU.hill: 0.0611, IoU.bench: 0.0807, IoU.countertop: 0.0461, IoU.stove: 0.2083, IoU.palm: 0.0003, IoU.kitchen island: 0.1159, IoU.computer: 0.0574, IoU.swivel chair: 0.0579, IoU.boat: 0.0183, IoU.bar: 0.1017, IoU.arcade machine: 0.0221, IoU.hovel: 0.0000, IoU.bus: 0.0790, IoU.towel: 0.0005, IoU.light: 0.0841, IoU.truck: 0.0039, IoU.tower: 0.0688, IoU.chandelier: 0.2988, IoU.awning: 0.0201, IoU.streetlight: 0.0036, IoU.booth: 0.0000, IoU.television receiver: 0.1795, IoU.airplane: 0.0738, IoU.dirt track: 0.0000, IoU.apparel: 0.0000, IoU.pole: 0.0123, IoU.land: 0.0000, IoU.bannister: 0.0000, IoU.escalator: 0.0071, IoU.ottoman: 0.0000, IoU.bottle: 0.0000, IoU.buffet: 0.0000, IoU.poster: 0.0000, IoU.stage: 0.0000, IoU.van: 0.0000, IoU.ship: 0.0000, IoU.fountain: 0.0000, IoU.conveyer belt: 0.0000, IoU.canopy: 0.0000, IoU.washer: 0.1306, IoU.plaything: 0.0000, IoU.swimming pool: 0.1028, IoU.stool: 0.0000, IoU.barrel: 0.0000, IoU.basket: 0.0000, IoU.waterfall: 0.3066, IoU.tent: 0.1952, IoU.bag: 0.0000, IoU.minibike: 0.0000, IoU.cradle: 0.2689, IoU.oven: 0.0000, IoU.ball: 0.0023, IoU.food: 0.0032, IoU.step: 0.0000, IoU.tank: 0.0000, IoU.trade name: 0.0002, IoU.microwave: 0.0482, IoU.pot: 0.0000, IoU.animal: 0.0000, IoU.bicycle: 0.0000, IoU.lake: 0.0000, IoU.dishwasher: 0.0173, IoU.screen: 0.3008, IoU.blanket: 0.0000, IoU.sculpture: 0.0000, IoU.hood: 0.0081, IoU.sconce: 0.0000, IoU.vase: 0.0008, IoU.traffic light: 0.0000, IoU.tray: 0.0000, IoU.ashcan: 0.0000, IoU.fan: 0.0000, IoU.pier: 0.0000, IoU.crt screen: 0.0003, IoU.plate: 0.0000, IoU.monitor: 0.0000, IoU.bulletin board: 0.0000, IoU.shower: 0.0000, IoU.radiator: 0.0000, IoU.glass: 0.0000, IoU.clock: 0.0000, IoU.flag: 0.0000, Acc.wall: 0.8388, Acc.building: 0.8691, Acc.sky: 0.9563, Acc.floor: 0.8059, Acc.tree: 0.7313, Acc.ceiling: 0.7850, Acc.road: 0.7664, Acc.bed : 0.6988, Acc.windowpane: 0.6414, Acc.grass: 0.8509, Acc.cabinet: 0.4836, Acc.sidewalk: 0.3594, Acc.person: 0.5044, Acc.earth: 0.2746, Acc.door: 0.1443, Acc.table: 0.2549, Acc.mountain: 0.4237, Acc.plant: 0.1917, Acc.curtain: 0.4495, Acc.chair: 0.2831, Acc.car: 0.6483, Acc.water: 0.2044, Acc.painting: 0.5477, Acc.sofa: 0.4189, Acc.shelf: 0.1353, Acc.house: 0.3306, Acc.sea: 0.7122, Acc.mirror: 0.2158, Acc.rug: 0.2058, Acc.field: 0.2791, Acc.armchair: 0.0594, Acc.seat: 0.1832, Acc.fence: 0.1165, Acc.desk: 0.0856, Acc.rock: 0.0592, Acc.wardrobe: 0.0439, Acc.lamp: 0.1784, Acc.bathtub: 0.1252, Acc.railing: 0.0821, Acc.cushion: 0.1622, Acc.base: 0.0022, Acc.box: 0.0020, Acc.column: 0.0051, Acc.signboard: 0.0789, Acc.chest of drawers: 0.2993, Acc.counter: 0.0411, Acc.sand: 0.1485, Acc.sink: 0.3267, Acc.skyscraper: 0.5790, Acc.fireplace: 0.4107, Acc.refrigerator: 0.0612, Acc.grandstand: 0.2241, Acc.path: 0.0108, Acc.stairs: 0.0855, Acc.runway: 0.6887, Acc.case: 0.0493, Acc.pool table: 0.7428, Acc.pillow: 0.2399, Acc.screen door: 0.0069, Acc.stairway: 0.0371, Acc.river: 0.1795, Acc.bridge: 0.0206, Acc.bookcase: 0.0390, Acc.blind: 0.0076, Acc.coffee table: 0.2849, Acc.toilet: 0.4294, Acc.flower: 0.0443, Acc.book: 0.0772, Acc.hill: 0.0973, Acc.bench: 0.0972, Acc.countertop: 0.0504, Acc.stove: 0.3294, Acc.palm: 0.0003, Acc.kitchen island: 0.1342, Acc.computer: 0.0609, Acc.swivel chair: 0.0593, Acc.boat: 0.0223, Acc.bar: 0.1083, Acc.arcade machine: 0.0286, Acc.hovel: 0.0000, Acc.bus: 0.0900, Acc.towel: 0.0005, Acc.light: 0.0962, Acc.truck: 0.0057, Acc.tower: 0.0708, Acc.chandelier: 0.3950, Acc.awning: 0.0201, Acc.streetlight: 0.0036, Acc.booth: 0.0000, Acc.television receiver: 0.2145, Acc.airplane: 0.1178, Acc.dirt track: 0.0000, Acc.apparel: 0.0000, Acc.pole: 0.0131, Acc.land: 0.0000, Acc.bannister: 0.0000, Acc.escalator: 0.0083, Acc.ottoman: 0.0000, Acc.bottle: 0.0000, Acc.buffet: 0.0000, Acc.poster: 0.0000, Acc.stage: 0.0000, Acc.van: 0.0000, Acc.ship: 0.0000, Acc.fountain: 0.0000, Acc.conveyer belt: 0.0000, Acc.canopy: 0.0000, Acc.washer: 0.1411, Acc.plaything: 0.0000, Acc.swimming pool: 0.1656, Acc.stool: 0.0000, Acc.barrel: 0.0000, Acc.basket: 0.0000, Acc.waterfall: 0.5197, Acc.tent: 0.2608, Acc.bag: 0.0000, Acc.minibike: 0.0000, Acc.cradle: 0.3156, Acc.oven: 0.0000, Acc.ball: 0.0050, Acc.food: 0.0032, Acc.step: 0.0000, Acc.tank: 0.0000, Acc.trade name: 0.0002, Acc.microwave: 0.0490, Acc.pot: 0.0000, Acc.animal: 0.0000, Acc.bicycle: 0.0000, Acc.lake: 0.0000, Acc.dishwasher: 0.0194, Acc.screen: 0.3796, Acc.blanket: 0.0000, Acc.sculpture: 0.0000, Acc.hood: 0.0081, Acc.sconce: 0.0000, Acc.vase: 0.0008, Acc.traffic light: 0.0000, Acc.tray: 0.0000, Acc.ashcan: 0.0000, Acc.fan: 0.0000, Acc.pier: 0.0000, Acc.crt screen: 0.0003, Acc.plate: 0.0000, Acc.monitor: 0.0000, Acc.bulletin board: 0.0000, Acc.shower: 0.0000, Acc.radiator: 0.0000, Acc.glass: 0.0000, Acc.clock: 0.0000, Acc.flag: 0.0000
2021-08-13 15:31:43,895 - mmseg - INFO - Iter [16050/160000]	lr: 9.102e-03, eta: 1 day, 13:14:02, time: 3.831, data_time: 2.974, memory: 8535, decode.loss_seg: 1.1903, decode.acc_seg: 49.7273, loss: 1.1903
2021-08-13 15:32:27,765 - mmseg - INFO - Iter [16100/160000]	lr: 9.099e-03, eta: 1 day, 13:12:51, time: 0.877, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2137, decode.acc_seg: 48.5042, loss: 1.2137
2021-08-13 15:33:10,494 - mmseg - INFO - Iter [16150/160000]	lr: 9.096e-03, eta: 1 day, 13:11:31, time: 0.854, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1879, decode.acc_seg: 49.2200, loss: 1.1879
2021-08-13 15:33:54,764 - mmseg - INFO - Iter [16200/160000]	lr: 9.093e-03, eta: 1 day, 13:10:24, time: 0.886, data_time: 0.012, memory: 8535, decode.loss_seg: 1.2219, decode.acc_seg: 48.7936, loss: 1.2219
2021-08-13 15:34:38,153 - mmseg - INFO - Iter [16250/160000]	lr: 9.090e-03, eta: 1 day, 13:09:10, time: 0.868, data_time: 0.012, memory: 8535, decode.loss_seg: 1.2055, decode.acc_seg: 48.9025, loss: 1.2055
2021-08-13 15:35:20,666 - mmseg - INFO - Iter [16300/160000]	lr: 9.088e-03, eta: 1 day, 13:07:48, time: 0.850, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1887, decode.acc_seg: 50.1488, loss: 1.1887
2021-08-13 15:36:04,138 - mmseg - INFO - Iter [16350/160000]	lr: 9.085e-03, eta: 1 day, 13:06:35, time: 0.869, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1614, decode.acc_seg: 50.3743, loss: 1.1614
2021-08-13 15:36:48,992 - mmseg - INFO - Iter [16400/160000]	lr: 9.082e-03, eta: 1 day, 13:05:34, time: 0.896, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1738, decode.acc_seg: 49.9251, loss: 1.1738
2021-08-13 15:38:07,857 - mmseg - INFO - Iter [16450/160000]	lr: 9.079e-03, eta: 1 day, 13:09:30, time: 1.578, data_time: 0.722, memory: 8535, decode.loss_seg: 1.1714, decode.acc_seg: 49.5468, loss: 1.1714
2021-08-13 15:38:51,618 - mmseg - INFO - Iter [16500/160000]	lr: 9.076e-03, eta: 1 day, 13:08:18, time: 0.875, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1798, decode.acc_seg: 51.2198, loss: 1.1798
2021-08-13 15:39:35,258 - mmseg - INFO - Iter [16550/160000]	lr: 9.073e-03, eta: 1 day, 13:07:06, time: 0.873, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1791, decode.acc_seg: 49.5388, loss: 1.1791
2021-08-13 15:40:18,189 - mmseg - INFO - Iter [16600/160000]	lr: 9.071e-03, eta: 1 day, 13:05:48, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1631, decode.acc_seg: 51.0252, loss: 1.1631
2021-08-13 15:41:02,097 - mmseg - INFO - Iter [16650/160000]	lr: 9.068e-03, eta: 1 day, 13:04:39, time: 0.879, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1689, decode.acc_seg: 49.6799, loss: 1.1689
2021-08-13 15:41:44,756 - mmseg - INFO - Iter [16700/160000]	lr: 9.065e-03, eta: 1 day, 13:03:19, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1929, decode.acc_seg: 50.2544, loss: 1.1929
2021-08-13 15:42:28,213 - mmseg - INFO - Iter [16750/160000]	lr: 9.062e-03, eta: 1 day, 13:02:06, time: 0.869, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1923, decode.acc_seg: 48.4437, loss: 1.1923
2021-08-13 15:43:12,005 - mmseg - INFO - Iter [16800/160000]	lr: 9.059e-03, eta: 1 day, 13:00:56, time: 0.876, data_time: 0.011, memory: 8535, decode.loss_seg: 1.2063, decode.acc_seg: 48.6937, loss: 1.2063
2021-08-13 15:43:56,041 - mmseg - INFO - Iter [16850/160000]	lr: 9.057e-03, eta: 1 day, 12:59:48, time: 0.880, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1826, decode.acc_seg: 49.8123, loss: 1.1826
2021-08-13 15:44:41,471 - mmseg - INFO - Iter [16900/160000]	lr: 9.054e-03, eta: 1 day, 12:58:52, time: 0.909, data_time: 0.013, memory: 8535, decode.loss_seg: 1.1598, decode.acc_seg: 50.1655, loss: 1.1598
2021-08-13 15:45:24,561 - mmseg - INFO - Iter [16950/160000]	lr: 9.051e-03, eta: 1 day, 12:57:37, time: 0.862, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1707, decode.acc_seg: 50.9581, loss: 1.1707
2021-08-13 15:46:07,803 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 15:46:07,803 - mmseg - INFO - Iter [17000/160000]	lr: 9.048e-03, eta: 1 day, 12:56:23, time: 0.864, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1618, decode.acc_seg: 50.9829, loss: 1.1618
2021-08-13 15:47:27,829 - mmseg - INFO - Iter [17050/160000]	lr: 9.045e-03, eta: 1 day, 13:00:17, time: 1.601, data_time: 0.722, memory: 8535, decode.loss_seg: 1.1830, decode.acc_seg: 50.1217, loss: 1.1830
2021-08-13 15:48:10,341 - mmseg - INFO - Iter [17100/160000]	lr: 9.043e-03, eta: 1 day, 12:58:57, time: 0.851, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1618, decode.acc_seg: 49.5035, loss: 1.1618
2021-08-13 15:48:52,753 - mmseg - INFO - Iter [17150/160000]	lr: 9.040e-03, eta: 1 day, 12:57:35, time: 0.848, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1585, decode.acc_seg: 49.8525, loss: 1.1585
2021-08-13 15:49:35,706 - mmseg - INFO - Iter [17200/160000]	lr: 9.037e-03, eta: 1 day, 12:56:19, time: 0.859, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1888, decode.acc_seg: 49.9331, loss: 1.1888
2021-08-13 15:50:18,873 - mmseg - INFO - Iter [17250/160000]	lr: 9.034e-03, eta: 1 day, 12:55:04, time: 0.863, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1532, decode.acc_seg: 50.4831, loss: 1.1532
2021-08-13 15:51:02,175 - mmseg - INFO - Iter [17300/160000]	lr: 9.031e-03, eta: 1 day, 12:53:51, time: 0.866, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1406, decode.acc_seg: 50.0924, loss: 1.1406
2021-08-13 15:51:45,725 - mmseg - INFO - Iter [17350/160000]	lr: 9.028e-03, eta: 1 day, 12:52:40, time: 0.871, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1708, decode.acc_seg: 49.8598, loss: 1.1708
2021-08-13 15:52:30,194 - mmseg - INFO - Iter [17400/160000]	lr: 9.026e-03, eta: 1 day, 12:51:36, time: 0.890, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1665, decode.acc_seg: 49.8935, loss: 1.1665
2021-08-13 15:53:13,994 - mmseg - INFO - Iter [17450/160000]	lr: 9.023e-03, eta: 1 day, 12:50:27, time: 0.876, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1434, decode.acc_seg: 50.0077, loss: 1.1434
2021-08-13 15:53:56,954 - mmseg - INFO - Iter [17500/160000]	lr: 9.020e-03, eta: 1 day, 12:49:12, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1730, decode.acc_seg: 50.2133, loss: 1.1730
2021-08-13 15:54:39,356 - mmseg - INFO - Iter [17550/160000]	lr: 9.017e-03, eta: 1 day, 12:47:52, time: 0.848, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1655, decode.acc_seg: 50.8525, loss: 1.1655
2021-08-13 15:55:22,304 - mmseg - INFO - Iter [17600/160000]	lr: 9.014e-03, eta: 1 day, 12:46:37, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1489, decode.acc_seg: 50.3668, loss: 1.1489
2021-08-13 15:56:05,302 - mmseg - INFO - Iter [17650/160000]	lr: 9.012e-03, eta: 1 day, 12:45:22, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1716, decode.acc_seg: 50.0791, loss: 1.1716
2021-08-13 15:57:23,382 - mmseg - INFO - Iter [17700/160000]	lr: 9.009e-03, eta: 1 day, 12:48:50, time: 1.562, data_time: 0.724, memory: 8535, decode.loss_seg: 1.2066, decode.acc_seg: 49.6225, loss: 1.2066
2021-08-13 15:58:06,596 - mmseg - INFO - Iter [17750/160000]	lr: 9.006e-03, eta: 1 day, 12:47:36, time: 0.864, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1430, decode.acc_seg: 50.1265, loss: 1.1430
2021-08-13 15:58:50,021 - mmseg - INFO - Iter [17800/160000]	lr: 9.003e-03, eta: 1 day, 12:46:25, time: 0.868, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1478, decode.acc_seg: 50.8769, loss: 1.1478
2021-08-13 15:59:33,356 - mmseg - INFO - Iter [17850/160000]	lr: 9.000e-03, eta: 1 day, 12:45:13, time: 0.867, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1439, decode.acc_seg: 49.1576, loss: 1.1439
2021-08-13 16:00:16,962 - mmseg - INFO - Iter [17900/160000]	lr: 8.997e-03, eta: 1 day, 12:44:03, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1261, decode.acc_seg: 50.4139, loss: 1.1261
2021-08-13 16:01:02,294 - mmseg - INFO - Iter [17950/160000]	lr: 8.995e-03, eta: 1 day, 12:43:07, time: 0.907, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1625, decode.acc_seg: 50.1053, loss: 1.1625
2021-08-13 16:01:45,792 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 16:01:45,793 - mmseg - INFO - Iter [18000/160000]	lr: 8.992e-03, eta: 1 day, 12:41:56, time: 0.870, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1513, decode.acc_seg: 50.0126, loss: 1.1513
2021-08-13 16:02:28,775 - mmseg - INFO - Iter [18050/160000]	lr: 8.989e-03, eta: 1 day, 12:40:42, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1745, decode.acc_seg: 49.8731, loss: 1.1745
2021-08-13 16:03:12,232 - mmseg - INFO - Iter [18100/160000]	lr: 8.986e-03, eta: 1 day, 12:39:31, time: 0.869, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1630, decode.acc_seg: 50.6487, loss: 1.1630
2021-08-13 16:03:55,840 - mmseg - INFO - Iter [18150/160000]	lr: 8.983e-03, eta: 1 day, 12:38:22, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1502, decode.acc_seg: 49.4261, loss: 1.1502
2021-08-13 16:04:40,251 - mmseg - INFO - Iter [18200/160000]	lr: 8.981e-03, eta: 1 day, 12:37:20, time: 0.888, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1749, decode.acc_seg: 50.4455, loss: 1.1749
2021-08-13 16:05:24,262 - mmseg - INFO - Iter [18250/160000]	lr: 8.978e-03, eta: 1 day, 12:36:14, time: 0.881, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1704, decode.acc_seg: 50.7559, loss: 1.1704
2021-08-13 16:06:41,774 - mmseg - INFO - Iter [18300/160000]	lr: 8.975e-03, eta: 1 day, 12:39:28, time: 1.550, data_time: 0.720, memory: 8535, decode.loss_seg: 1.1605, decode.acc_seg: 49.6692, loss: 1.1605
2021-08-13 16:07:25,048 - mmseg - INFO - Iter [18350/160000]	lr: 8.972e-03, eta: 1 day, 12:38:16, time: 0.865, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1483, decode.acc_seg: 49.5390, loss: 1.1483
2021-08-13 16:08:08,601 - mmseg - INFO - Iter [18400/160000]	lr: 8.969e-03, eta: 1 day, 12:37:06, time: 0.871, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1532, decode.acc_seg: 50.2221, loss: 1.1532
2021-08-13 16:08:52,361 - mmseg - INFO - Iter [18450/160000]	lr: 8.966e-03, eta: 1 day, 12:35:58, time: 0.875, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1510, decode.acc_seg: 50.0084, loss: 1.1510
2021-08-13 16:09:35,551 - mmseg - INFO - Iter [18500/160000]	lr: 8.964e-03, eta: 1 day, 12:34:46, time: 0.865, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1595, decode.acc_seg: 49.3030, loss: 1.1595
2021-08-13 16:10:18,636 - mmseg - INFO - Iter [18550/160000]	lr: 8.961e-03, eta: 1 day, 12:33:33, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1655, decode.acc_seg: 50.3600, loss: 1.1655
2021-08-13 16:11:01,162 - mmseg - INFO - Iter [18600/160000]	lr: 8.958e-03, eta: 1 day, 12:32:16, time: 0.850, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1412, decode.acc_seg: 50.1948, loss: 1.1412
2021-08-13 16:11:44,940 - mmseg - INFO - Iter [18650/160000]	lr: 8.955e-03, eta: 1 day, 12:31:09, time: 0.876, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1573, decode.acc_seg: 50.6376, loss: 1.1573
2021-08-13 16:12:28,123 - mmseg - INFO - Iter [18700/160000]	lr: 8.952e-03, eta: 1 day, 12:29:57, time: 0.864, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1487, decode.acc_seg: 50.6952, loss: 1.1487
2021-08-13 16:13:11,005 - mmseg - INFO - Iter [18750/160000]	lr: 8.950e-03, eta: 1 day, 12:28:44, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1540, decode.acc_seg: 51.0566, loss: 1.1540
2021-08-13 16:13:54,043 - mmseg - INFO - Iter [18800/160000]	lr: 8.947e-03, eta: 1 day, 12:27:31, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1636, decode.acc_seg: 50.0403, loss: 1.1636
2021-08-13 16:14:36,627 - mmseg - INFO - Iter [18850/160000]	lr: 8.944e-03, eta: 1 day, 12:26:16, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1649, decode.acc_seg: 50.1067, loss: 1.1649
2021-08-13 16:15:19,291 - mmseg - INFO - Iter [18900/160000]	lr: 8.941e-03, eta: 1 day, 12:25:01, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1851, decode.acc_seg: 49.8990, loss: 1.1851
2021-08-13 16:16:37,465 - mmseg - INFO - Iter [18950/160000]	lr: 8.938e-03, eta: 1 day, 12:28:11, time: 1.564, data_time: 0.670, memory: 8535, decode.loss_seg: 1.1615, decode.acc_seg: 49.3549, loss: 1.1615
2021-08-13 16:17:21,464 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 16:17:21,465 - mmseg - INFO - Iter [19000/160000]	lr: 8.935e-03, eta: 1 day, 12:27:05, time: 0.880, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1326, decode.acc_seg: 50.4781, loss: 1.1326
2021-08-13 16:18:03,582 - mmseg - INFO - Iter [19050/160000]	lr: 8.933e-03, eta: 1 day, 12:25:46, time: 0.842, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1631, decode.acc_seg: 49.7728, loss: 1.1631
2021-08-13 16:18:46,372 - mmseg - INFO - Iter [19100/160000]	lr: 8.930e-03, eta: 1 day, 12:24:32, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1393, decode.acc_seg: 50.8705, loss: 1.1393
2021-08-13 16:19:29,764 - mmseg - INFO - Iter [19150/160000]	lr: 8.927e-03, eta: 1 day, 12:23:22, time: 0.868, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1323, decode.acc_seg: 51.2257, loss: 1.1323
2021-08-13 16:20:14,570 - mmseg - INFO - Iter [19200/160000]	lr: 8.924e-03, eta: 1 day, 12:22:23, time: 0.896, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1355, decode.acc_seg: 50.1983, loss: 1.1355
2021-08-13 16:20:59,116 - mmseg - INFO - Iter [19250/160000]	lr: 8.921e-03, eta: 1 day, 12:21:23, time: 0.891, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1818, decode.acc_seg: 50.2205, loss: 1.1818
2021-08-13 16:21:41,950 - mmseg - INFO - Iter [19300/160000]	lr: 8.918e-03, eta: 1 day, 12:20:09, time: 0.857, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1547, decode.acc_seg: 51.3939, loss: 1.1547
2021-08-13 16:22:24,410 - mmseg - INFO - Iter [19350/160000]	lr: 8.916e-03, eta: 1 day, 12:18:54, time: 0.849, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1307, decode.acc_seg: 51.2375, loss: 1.1307
2021-08-13 16:23:06,653 - mmseg - INFO - Iter [19400/160000]	lr: 8.913e-03, eta: 1 day, 12:17:37, time: 0.845, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1194, decode.acc_seg: 50.7889, loss: 1.1194
2021-08-13 16:23:48,990 - mmseg - INFO - Iter [19450/160000]	lr: 8.910e-03, eta: 1 day, 12:16:20, time: 0.847, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1059, decode.acc_seg: 50.3039, loss: 1.1059
2021-08-13 16:24:31,936 - mmseg - INFO - Iter [19500/160000]	lr: 8.907e-03, eta: 1 day, 12:15:08, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1319, decode.acc_seg: 50.9005, loss: 1.1319
2021-08-13 16:25:15,012 - mmseg - INFO - Iter [19550/160000]	lr: 8.904e-03, eta: 1 day, 12:13:58, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1774, decode.acc_seg: 51.0481, loss: 1.1774
2021-08-13 16:26:32,641 - mmseg - INFO - Iter [19600/160000]	lr: 8.902e-03, eta: 1 day, 12:16:55, time: 1.553, data_time: 0.676, memory: 8535, decode.loss_seg: 1.1397, decode.acc_seg: 50.3874, loss: 1.1397
2021-08-13 16:27:15,610 - mmseg - INFO - Iter [19650/160000]	lr: 8.899e-03, eta: 1 day, 12:15:43, time: 0.859, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1487, decode.acc_seg: 49.9977, loss: 1.1487
2021-08-13 16:27:58,893 - mmseg - INFO - Iter [19700/160000]	lr: 8.896e-03, eta: 1 day, 12:14:34, time: 0.866, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1166, decode.acc_seg: 51.3795, loss: 1.1166
2021-08-13 16:28:40,787 - mmseg - INFO - Iter [19750/160000]	lr: 8.893e-03, eta: 1 day, 12:13:14, time: 0.838, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1503, decode.acc_seg: 50.2757, loss: 1.1503
2021-08-13 16:29:23,652 - mmseg - INFO - Iter [19800/160000]	lr: 8.890e-03, eta: 1 day, 12:12:02, time: 0.857, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1188, decode.acc_seg: 50.5863, loss: 1.1188
2021-08-13 16:30:06,366 - mmseg - INFO - Iter [19850/160000]	lr: 8.887e-03, eta: 1 day, 12:10:49, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1540, decode.acc_seg: 49.9290, loss: 1.1540
2021-08-13 16:30:50,036 - mmseg - INFO - Iter [19900/160000]	lr: 8.885e-03, eta: 1 day, 12:09:43, time: 0.873, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1667, decode.acc_seg: 50.2794, loss: 1.1667
2021-08-13 16:31:32,153 - mmseg - INFO - Iter [19950/160000]	lr: 8.882e-03, eta: 1 day, 12:08:26, time: 0.843, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1152, decode.acc_seg: 51.4853, loss: 1.1152
2021-08-13 16:32:15,560 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 16:32:15,561 - mmseg - INFO - Iter [20000/160000]	lr: 8.879e-03, eta: 1 day, 12:07:18, time: 0.868, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1351, decode.acc_seg: 50.3235, loss: 1.1351
2021-08-13 16:32:58,245 - mmseg - INFO - Iter [20050/160000]	lr: 8.876e-03, eta: 1 day, 12:06:06, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1185, decode.acc_seg: 51.5010, loss: 1.1185
2021-08-13 16:33:40,435 - mmseg - INFO - Iter [20100/160000]	lr: 8.873e-03, eta: 1 day, 12:04:50, time: 0.844, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1537, decode.acc_seg: 51.2351, loss: 1.1537
2021-08-13 16:34:22,658 - mmseg - INFO - Iter [20150/160000]	lr: 8.871e-03, eta: 1 day, 12:03:34, time: 0.845, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1328, decode.acc_seg: 51.2893, loss: 1.1328
2021-08-13 16:35:40,393 - mmseg - INFO - Iter [20200/160000]	lr: 8.868e-03, eta: 1 day, 12:06:24, time: 1.555, data_time: 0.711, memory: 8535, decode.loss_seg: 1.1428, decode.acc_seg: 51.1534, loss: 1.1428
2021-08-13 16:36:23,553 - mmseg - INFO - Iter [20250/160000]	lr: 8.865e-03, eta: 1 day, 12:05:15, time: 0.863, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0856, decode.acc_seg: 51.5242, loss: 1.0856
2021-08-13 16:37:06,225 - mmseg - INFO - Iter [20300/160000]	lr: 8.862e-03, eta: 1 day, 12:04:02, time: 0.853, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1609, decode.acc_seg: 50.7576, loss: 1.1609
2021-08-13 16:37:49,830 - mmseg - INFO - Iter [20350/160000]	lr: 8.859e-03, eta: 1 day, 12:02:56, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0901, decode.acc_seg: 51.4935, loss: 1.0901
2021-08-13 16:38:32,210 - mmseg - INFO - Iter [20400/160000]	lr: 8.856e-03, eta: 1 day, 12:01:42, time: 0.847, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1583, decode.acc_seg: 50.1052, loss: 1.1583
2021-08-13 16:39:14,753 - mmseg - INFO - Iter [20450/160000]	lr: 8.854e-03, eta: 1 day, 12:00:28, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1295, decode.acc_seg: 51.4391, loss: 1.1295
2021-08-13 16:39:56,867 - mmseg - INFO - Iter [20500/160000]	lr: 8.851e-03, eta: 1 day, 11:59:13, time: 0.843, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1485, decode.acc_seg: 51.0482, loss: 1.1485
2021-08-13 16:40:39,000 - mmseg - INFO - Iter [20550/160000]	lr: 8.848e-03, eta: 1 day, 11:57:57, time: 0.842, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1257, decode.acc_seg: 50.2766, loss: 1.1257
2021-08-13 16:41:22,579 - mmseg - INFO - Iter [20600/160000]	lr: 8.845e-03, eta: 1 day, 11:56:51, time: 0.871, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1350, decode.acc_seg: 50.8148, loss: 1.1350
2021-08-13 16:42:06,591 - mmseg - INFO - Iter [20650/160000]	lr: 8.842e-03, eta: 1 day, 11:55:49, time: 0.880, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1199, decode.acc_seg: 49.9713, loss: 1.1199
2021-08-13 16:42:50,138 - mmseg - INFO - Iter [20700/160000]	lr: 8.839e-03, eta: 1 day, 11:54:43, time: 0.871, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1353, decode.acc_seg: 50.9617, loss: 1.1353
2021-08-13 16:43:32,593 - mmseg - INFO - Iter [20750/160000]	lr: 8.837e-03, eta: 1 day, 11:53:30, time: 0.849, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1449, decode.acc_seg: 50.3768, loss: 1.1449
2021-08-13 16:44:14,843 - mmseg - INFO - Iter [20800/160000]	lr: 8.834e-03, eta: 1 day, 11:52:16, time: 0.845, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1308, decode.acc_seg: 50.7536, loss: 1.1308
2021-08-13 16:45:33,884 - mmseg - INFO - Iter [20850/160000]	lr: 8.831e-03, eta: 1 day, 11:55:07, time: 1.581, data_time: 0.731, memory: 8535, decode.loss_seg: 1.1196, decode.acc_seg: 51.3466, loss: 1.1196
2021-08-13 16:46:16,275 - mmseg - INFO - Iter [20900/160000]	lr: 8.828e-03, eta: 1 day, 11:53:54, time: 0.848, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0889, decode.acc_seg: 50.5361, loss: 1.0889
2021-08-13 16:46:58,469 - mmseg - INFO - Iter [20950/160000]	lr: 8.825e-03, eta: 1 day, 11:52:39, time: 0.843, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0759, decode.acc_seg: 52.4262, loss: 1.0759
2021-08-13 16:47:42,180 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 16:47:42,180 - mmseg - INFO - Iter [21000/160000]	lr: 8.823e-03, eta: 1 day, 11:51:34, time: 0.874, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1269, decode.acc_seg: 52.1853, loss: 1.1269
2021-08-13 16:48:25,751 - mmseg - INFO - Iter [21050/160000]	lr: 8.820e-03, eta: 1 day, 11:50:29, time: 0.871, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1337, decode.acc_seg: 50.0873, loss: 1.1337
2021-08-13 16:49:08,480 - mmseg - INFO - Iter [21100/160000]	lr: 8.817e-03, eta: 1 day, 11:49:18, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1026, decode.acc_seg: 50.9626, loss: 1.1026
2021-08-13 16:49:51,158 - mmseg - INFO - Iter [21150/160000]	lr: 8.814e-03, eta: 1 day, 11:48:07, time: 0.854, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1462, decode.acc_seg: 50.6877, loss: 1.1462
2021-08-13 16:50:34,204 - mmseg - INFO - Iter [21200/160000]	lr: 8.811e-03, eta: 1 day, 11:46:59, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1257, decode.acc_seg: 51.7514, loss: 1.1257
2021-08-13 16:51:16,823 - mmseg - INFO - Iter [21250/160000]	lr: 8.808e-03, eta: 1 day, 11:45:48, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1054, decode.acc_seg: 51.1414, loss: 1.1054
2021-08-13 16:51:59,278 - mmseg - INFO - Iter [21300/160000]	lr: 8.806e-03, eta: 1 day, 11:44:36, time: 0.849, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1490, decode.acc_seg: 49.4622, loss: 1.1490
2021-08-13 16:52:42,566 - mmseg - INFO - Iter [21350/160000]	lr: 8.803e-03, eta: 1 day, 11:43:29, time: 0.866, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1624, decode.acc_seg: 50.2408, loss: 1.1624
2021-08-13 16:53:25,213 - mmseg - INFO - Iter [21400/160000]	lr: 8.800e-03, eta: 1 day, 11:42:19, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1524, decode.acc_seg: 49.9617, loss: 1.1524
2021-08-13 16:54:06,873 - mmseg - INFO - Iter [21450/160000]	lr: 8.797e-03, eta: 1 day, 11:41:02, time: 0.833, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1383, decode.acc_seg: 50.0003, loss: 1.1383
2021-08-13 16:55:25,334 - mmseg - INFO - Iter [21500/160000]	lr: 8.794e-03, eta: 1 day, 11:43:42, time: 1.569, data_time: 0.720, memory: 8535, decode.loss_seg: 1.0990, decode.acc_seg: 51.2402, loss: 1.0990
2021-08-13 16:56:08,644 - mmseg - INFO - Iter [21550/160000]	lr: 8.791e-03, eta: 1 day, 11:42:36, time: 0.867, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1261, decode.acc_seg: 50.8053, loss: 1.1261
2021-08-13 16:56:52,160 - mmseg - INFO - Iter [21600/160000]	lr: 8.789e-03, eta: 1 day, 11:41:31, time: 0.871, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0799, decode.acc_seg: 51.6427, loss: 1.0799
2021-08-13 16:57:35,061 - mmseg - INFO - Iter [21650/160000]	lr: 8.786e-03, eta: 1 day, 11:40:22, time: 0.858, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1241, decode.acc_seg: 52.0661, loss: 1.1241
2021-08-13 16:58:17,816 - mmseg - INFO - Iter [21700/160000]	lr: 8.783e-03, eta: 1 day, 11:39:12, time: 0.855, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1522, decode.acc_seg: 50.2189, loss: 1.1522
2021-08-13 16:59:00,850 - mmseg - INFO - Iter [21750/160000]	lr: 8.780e-03, eta: 1 day, 11:38:04, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0878, decode.acc_seg: 51.8211, loss: 1.0878
2021-08-13 16:59:43,811 - mmseg - INFO - Iter [21800/160000]	lr: 8.777e-03, eta: 1 day, 11:36:56, time: 0.859, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1480, decode.acc_seg: 49.9031, loss: 1.1480
2021-08-13 17:00:26,462 - mmseg - INFO - Iter [21850/160000]	lr: 8.775e-03, eta: 1 day, 11:35:46, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1207, decode.acc_seg: 51.4553, loss: 1.1207
2021-08-13 17:01:09,278 - mmseg - INFO - Iter [21900/160000]	lr: 8.772e-03, eta: 1 day, 11:34:37, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0899, decode.acc_seg: 52.1301, loss: 1.0899
2021-08-13 17:01:51,637 - mmseg - INFO - Iter [21950/160000]	lr: 8.769e-03, eta: 1 day, 11:33:26, time: 0.847, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1453, decode.acc_seg: 50.4224, loss: 1.1453
2021-08-13 17:02:34,217 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 17:02:34,218 - mmseg - INFO - Iter [22000/160000]	lr: 8.766e-03, eta: 1 day, 11:32:15, time: 0.852, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1140, decode.acc_seg: 51.4613, loss: 1.1140
2021-08-13 17:03:16,912 - mmseg - INFO - Iter [22050/160000]	lr: 8.763e-03, eta: 1 day, 11:31:06, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1654, decode.acc_seg: 51.2280, loss: 1.1654
2021-08-13 17:04:34,072 - mmseg - INFO - Iter [22100/160000]	lr: 8.760e-03, eta: 1 day, 11:33:32, time: 1.543, data_time: 0.673, memory: 8535, decode.loss_seg: 1.1297, decode.acc_seg: 50.2433, loss: 1.1297
2021-08-13 17:05:18,772 - mmseg - INFO - Iter [22150/160000]	lr: 8.758e-03, eta: 1 day, 11:32:35, time: 0.894, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0941, decode.acc_seg: 51.1598, loss: 1.0941
2021-08-13 17:06:03,105 - mmseg - INFO - Iter [22200/160000]	lr: 8.755e-03, eta: 1 day, 11:31:36, time: 0.886, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1075, decode.acc_seg: 52.2262, loss: 1.1075
2021-08-13 17:06:45,997 - mmseg - INFO - Iter [22250/160000]	lr: 8.752e-03, eta: 1 day, 11:30:28, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0727, decode.acc_seg: 51.3346, loss: 1.0727
2021-08-13 17:07:29,055 - mmseg - INFO - Iter [22300/160000]	lr: 8.749e-03, eta: 1 day, 11:29:21, time: 0.861, data_time: 0.013, memory: 8535, decode.loss_seg: 1.1123, decode.acc_seg: 51.0990, loss: 1.1123
2021-08-13 17:08:11,955 - mmseg - INFO - Iter [22350/160000]	lr: 8.746e-03, eta: 1 day, 11:28:13, time: 0.858, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0599, decode.acc_seg: 51.3652, loss: 1.0599
2021-08-13 17:08:54,290 - mmseg - INFO - Iter [22400/160000]	lr: 8.743e-03, eta: 1 day, 11:27:01, time: 0.846, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0895, decode.acc_seg: 51.8848, loss: 1.0895
2021-08-13 17:09:36,513 - mmseg - INFO - Iter [22450/160000]	lr: 8.741e-03, eta: 1 day, 11:25:50, time: 0.844, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0933, decode.acc_seg: 51.6518, loss: 1.0933
2021-08-13 17:10:19,923 - mmseg - INFO - Iter [22500/160000]	lr: 8.738e-03, eta: 1 day, 11:24:45, time: 0.868, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1204, decode.acc_seg: 51.1129, loss: 1.1204
2021-08-13 17:11:02,553 - mmseg - INFO - Iter [22550/160000]	lr: 8.735e-03, eta: 1 day, 11:23:36, time: 0.853, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1436, decode.acc_seg: 50.9208, loss: 1.1436
2021-08-13 17:11:45,501 - mmseg - INFO - Iter [22600/160000]	lr: 8.732e-03, eta: 1 day, 11:22:29, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1521, decode.acc_seg: 51.5651, loss: 1.1521
2021-08-13 17:12:28,206 - mmseg - INFO - Iter [22650/160000]	lr: 8.729e-03, eta: 1 day, 11:21:21, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1106, decode.acc_seg: 51.6107, loss: 1.1106
2021-08-13 17:13:10,952 - mmseg - INFO - Iter [22700/160000]	lr: 8.726e-03, eta: 1 day, 11:20:13, time: 0.855, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1146, decode.acc_seg: 49.7930, loss: 1.1146
2021-08-13 17:14:29,129 - mmseg - INFO - Iter [22750/160000]	lr: 8.724e-03, eta: 1 day, 11:22:38, time: 1.563, data_time: 0.724, memory: 8535, decode.loss_seg: 1.0969, decode.acc_seg: 50.9413, loss: 1.0969
2021-08-13 17:15:12,669 - mmseg - INFO - Iter [22800/160000]	lr: 8.721e-03, eta: 1 day, 11:21:35, time: 0.870, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0645, decode.acc_seg: 51.2997, loss: 1.0645
2021-08-13 17:15:57,457 - mmseg - INFO - Iter [22850/160000]	lr: 8.718e-03, eta: 1 day, 11:20:39, time: 0.896, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1227, decode.acc_seg: 51.0728, loss: 1.1227
2021-08-13 17:16:40,090 - mmseg - INFO - Iter [22900/160000]	lr: 8.715e-03, eta: 1 day, 11:19:30, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0973, decode.acc_seg: 52.2170, loss: 1.0973
2021-08-13 17:17:22,843 - mmseg - INFO - Iter [22950/160000]	lr: 8.712e-03, eta: 1 day, 11:18:22, time: 0.855, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0993, decode.acc_seg: 49.6215, loss: 1.0993
2021-08-13 17:18:06,971 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 17:18:06,972 - mmseg - INFO - Iter [23000/160000]	lr: 8.710e-03, eta: 1 day, 11:17:22, time: 0.883, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1078, decode.acc_seg: 51.1480, loss: 1.1078
2021-08-13 17:18:50,667 - mmseg - INFO - Iter [23050/160000]	lr: 8.707e-03, eta: 1 day, 11:16:20, time: 0.873, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0957, decode.acc_seg: 52.9109, loss: 1.0957
2021-08-13 17:19:33,518 - mmseg - INFO - Iter [23100/160000]	lr: 8.704e-03, eta: 1 day, 11:15:13, time: 0.858, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0855, decode.acc_seg: 51.1631, loss: 1.0855
2021-08-13 17:20:18,189 - mmseg - INFO - Iter [23150/160000]	lr: 8.701e-03, eta: 1 day, 11:14:16, time: 0.893, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0980, decode.acc_seg: 51.4099, loss: 1.0980
2021-08-13 17:21:03,838 - mmseg - INFO - Iter [23200/160000]	lr: 8.698e-03, eta: 1 day, 11:13:26, time: 0.913, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1196, decode.acc_seg: 50.7130, loss: 1.1196
2021-08-13 17:21:46,776 - mmseg - INFO - Iter [23250/160000]	lr: 8.695e-03, eta: 1 day, 11:12:20, time: 0.859, data_time: 0.013, memory: 8535, decode.loss_seg: 1.1146, decode.acc_seg: 51.0688, loss: 1.1146
2021-08-13 17:22:30,105 - mmseg - INFO - Iter [23300/160000]	lr: 8.693e-03, eta: 1 day, 11:11:16, time: 0.867, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1341, decode.acc_seg: 51.0113, loss: 1.1341
2021-08-13 17:23:48,939 - mmseg - INFO - Iter [23350/160000]	lr: 8.690e-03, eta: 1 day, 11:13:39, time: 1.577, data_time: 0.705, memory: 8535, decode.loss_seg: 1.1334, decode.acc_seg: 50.5944, loss: 1.1334
2021-08-13 17:24:31,921 - mmseg - INFO - Iter [23400/160000]	lr: 8.687e-03, eta: 1 day, 11:12:33, time: 0.860, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1163, decode.acc_seg: 51.4321, loss: 1.1163
2021-08-13 17:25:14,933 - mmseg - INFO - Iter [23450/160000]	lr: 8.684e-03, eta: 1 day, 11:11:27, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1436, decode.acc_seg: 51.3831, loss: 1.1436
2021-08-13 17:25:57,444 - mmseg - INFO - Iter [23500/160000]	lr: 8.681e-03, eta: 1 day, 11:10:18, time: 0.851, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1126, decode.acc_seg: 52.0551, loss: 1.1126
2021-08-13 17:26:40,246 - mmseg - INFO - Iter [23550/160000]	lr: 8.678e-03, eta: 1 day, 11:09:11, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0783, decode.acc_seg: 50.4172, loss: 1.0783
2021-08-13 17:27:23,347 - mmseg - INFO - Iter [23600/160000]	lr: 8.676e-03, eta: 1 day, 11:08:06, time: 0.863, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1132, decode.acc_seg: 51.2709, loss: 1.1132
2021-08-13 17:28:07,246 - mmseg - INFO - Iter [23650/160000]	lr: 8.673e-03, eta: 1 day, 11:07:05, time: 0.878, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1066, decode.acc_seg: 50.7470, loss: 1.1066
2021-08-13 17:28:50,055 - mmseg - INFO - Iter [23700/160000]	lr: 8.670e-03, eta: 1 day, 11:05:58, time: 0.857, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0810, decode.acc_seg: 51.8593, loss: 1.0810
2021-08-13 17:29:32,169 - mmseg - INFO - Iter [23750/160000]	lr: 8.667e-03, eta: 1 day, 11:04:48, time: 0.842, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0712, decode.acc_seg: 51.7330, loss: 1.0712
2021-08-13 17:30:14,930 - mmseg - INFO - Iter [23800/160000]	lr: 8.664e-03, eta: 1 day, 11:03:41, time: 0.854, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1354, decode.acc_seg: 50.7950, loss: 1.1354
2021-08-13 17:30:59,178 - mmseg - INFO - Iter [23850/160000]	lr: 8.661e-03, eta: 1 day, 11:02:42, time: 0.885, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1393, decode.acc_seg: 51.5486, loss: 1.1393
2021-08-13 17:31:42,228 - mmseg - INFO - Iter [23900/160000]	lr: 8.659e-03, eta: 1 day, 11:01:37, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1211, decode.acc_seg: 50.7684, loss: 1.1211
2021-08-13 17:32:25,613 - mmseg - INFO - Iter [23950/160000]	lr: 8.656e-03, eta: 1 day, 11:00:34, time: 0.868, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1367, decode.acc_seg: 51.2546, loss: 1.1367
2021-08-13 17:33:43,197 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 17:33:43,205 - mmseg - INFO - Iter [24000/160000]	lr: 8.653e-03, eta: 1 day, 11:02:45, time: 1.552, data_time: 0.716, memory: 8535, decode.loss_seg: 1.0925, decode.acc_seg: 51.8249, loss: 1.0925
2021-08-13 17:34:25,983 - mmseg - INFO - Iter [24050/160000]	lr: 8.650e-03, eta: 1 day, 11:01:39, time: 0.856, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0905, decode.acc_seg: 51.7913, loss: 1.0905
2021-08-13 17:35:08,717 - mmseg - INFO - Iter [24100/160000]	lr: 8.647e-03, eta: 1 day, 11:00:32, time: 0.855, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0921, decode.acc_seg: 51.0675, loss: 1.0921
2021-08-13 17:35:51,432 - mmseg - INFO - Iter [24150/160000]	lr: 8.644e-03, eta: 1 day, 10:59:25, time: 0.853, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0865, decode.acc_seg: 51.6196, loss: 1.0865
2021-08-13 17:36:34,768 - mmseg - INFO - Iter [24200/160000]	lr: 8.642e-03, eta: 1 day, 10:58:21, time: 0.867, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0930, decode.acc_seg: 52.1860, loss: 1.0930
2021-08-13 17:37:17,078 - mmseg - INFO - Iter [24250/160000]	lr: 8.639e-03, eta: 1 day, 10:57:12, time: 0.846, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0840, decode.acc_seg: 51.8478, loss: 1.0840
2021-08-13 17:38:01,867 - mmseg - INFO - Iter [24300/160000]	lr: 8.636e-03, eta: 1 day, 10:56:17, time: 0.895, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1003, decode.acc_seg: 50.4868, loss: 1.1003
2021-08-13 17:38:46,901 - mmseg - INFO - Iter [24350/160000]	lr: 8.633e-03, eta: 1 day, 10:55:24, time: 0.902, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1086, decode.acc_seg: 51.5884, loss: 1.1086
2021-08-13 17:39:30,439 - mmseg - INFO - Iter [24400/160000]	lr: 8.630e-03, eta: 1 day, 10:54:22, time: 0.870, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0798, decode.acc_seg: 51.6997, loss: 1.0798
2021-08-13 17:40:13,639 - mmseg - INFO - Iter [24450/160000]	lr: 8.627e-03, eta: 1 day, 10:53:18, time: 0.864, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1362, decode.acc_seg: 50.6494, loss: 1.1362
2021-08-13 17:40:56,435 - mmseg - INFO - Iter [24500/160000]	lr: 8.625e-03, eta: 1 day, 10:52:12, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1099, decode.acc_seg: 51.2665, loss: 1.1099
2021-08-13 17:41:38,705 - mmseg - INFO - Iter [24550/160000]	lr: 8.622e-03, eta: 1 day, 10:51:04, time: 0.845, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1183, decode.acc_seg: 51.6553, loss: 1.1183
2021-08-13 17:42:21,607 - mmseg - INFO - Iter [24600/160000]	lr: 8.619e-03, eta: 1 day, 10:49:58, time: 0.857, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1381, decode.acc_seg: 50.5642, loss: 1.1381
2021-08-13 17:43:40,245 - mmseg - INFO - Iter [24650/160000]	lr: 8.616e-03, eta: 1 day, 10:52:10, time: 1.573, data_time: 0.683, memory: 8535, decode.loss_seg: 1.1139, decode.acc_seg: 51.5736, loss: 1.1139
2021-08-13 17:44:23,732 - mmseg - INFO - Iter [24700/160000]	lr: 8.613e-03, eta: 1 day, 10:51:07, time: 0.870, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0812, decode.acc_seg: 50.9789, loss: 1.0812
2021-08-13 17:45:07,597 - mmseg - INFO - Iter [24750/160000]	lr: 8.610e-03, eta: 1 day, 10:50:07, time: 0.877, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0660, decode.acc_seg: 52.2457, loss: 1.0660
2021-08-13 17:45:50,163 - mmseg - INFO - Iter [24800/160000]	lr: 8.608e-03, eta: 1 day, 10:49:00, time: 0.852, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0742, decode.acc_seg: 52.1239, loss: 1.0742
2021-08-13 17:46:34,480 - mmseg - INFO - Iter [24850/160000]	lr: 8.605e-03, eta: 1 day, 10:48:03, time: 0.886, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0790, decode.acc_seg: 51.6302, loss: 1.0790
2021-08-13 17:47:18,359 - mmseg - INFO - Iter [24900/160000]	lr: 8.602e-03, eta: 1 day, 10:47:03, time: 0.878, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1019, decode.acc_seg: 50.8896, loss: 1.1019
2021-08-13 17:48:02,171 - mmseg - INFO - Iter [24950/160000]	lr: 8.599e-03, eta: 1 day, 10:46:03, time: 0.876, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0829, decode.acc_seg: 52.5822, loss: 1.0829
2021-08-13 17:48:45,370 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 17:48:45,370 - mmseg - INFO - Iter [25000/160000]	lr: 8.596e-03, eta: 1 day, 10:45:00, time: 0.864, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1206, decode.acc_seg: 51.5977, loss: 1.1206
2021-08-13 17:49:27,248 - mmseg - INFO - Iter [25050/160000]	lr: 8.593e-03, eta: 1 day, 10:43:49, time: 0.838, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1108, decode.acc_seg: 50.9806, loss: 1.1108
2021-08-13 17:50:09,330 - mmseg - INFO - Iter [25100/160000]	lr: 8.591e-03, eta: 1 day, 10:42:40, time: 0.842, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1080, decode.acc_seg: 52.1315, loss: 1.1080
2021-08-13 17:50:52,807 - mmseg - INFO - Iter [25150/160000]	lr: 8.588e-03, eta: 1 day, 10:41:39, time: 0.869, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0720, decode.acc_seg: 51.4505, loss: 1.0720
2021-08-13 17:51:35,186 - mmseg - INFO - Iter [25200/160000]	lr: 8.585e-03, eta: 1 day, 10:40:31, time: 0.848, data_time: 0.013, memory: 8535, decode.loss_seg: 1.1085, decode.acc_seg: 51.2426, loss: 1.1085
2021-08-13 17:52:52,606 - mmseg - INFO - Iter [25250/160000]	lr: 8.582e-03, eta: 1 day, 10:42:31, time: 1.548, data_time: 0.723, memory: 8535, decode.loss_seg: 1.1004, decode.acc_seg: 51.8666, loss: 1.1004
2021-08-13 17:53:34,607 - mmseg - INFO - Iter [25300/160000]	lr: 8.579e-03, eta: 1 day, 10:41:21, time: 0.839, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0655, decode.acc_seg: 52.2423, loss: 1.0655
2021-08-13 17:54:17,765 - mmseg - INFO - Iter [25350/160000]	lr: 8.576e-03, eta: 1 day, 10:40:18, time: 0.864, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0793, decode.acc_seg: 51.5875, loss: 1.0793
2021-08-13 17:55:00,551 - mmseg - INFO - Iter [25400/160000]	lr: 8.574e-03, eta: 1 day, 10:39:13, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0833, decode.acc_seg: 52.0728, loss: 1.0833
2021-08-13 17:55:43,145 - mmseg - INFO - Iter [25450/160000]	lr: 8.571e-03, eta: 1 day, 10:38:07, time: 0.852, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1163, decode.acc_seg: 51.8168, loss: 1.1163
2021-08-13 17:56:25,399 - mmseg - INFO - Iter [25500/160000]	lr: 8.568e-03, eta: 1 day, 10:36:59, time: 0.845, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1120, decode.acc_seg: 52.5296, loss: 1.1120
2021-08-13 17:57:08,431 - mmseg - INFO - Iter [25550/160000]	lr: 8.565e-03, eta: 1 day, 10:35:55, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0892, decode.acc_seg: 50.8174, loss: 1.0892
2021-08-13 17:57:50,820 - mmseg - INFO - Iter [25600/160000]	lr: 8.562e-03, eta: 1 day, 10:34:48, time: 0.848, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1419, decode.acc_seg: 49.9818, loss: 1.1419
2021-08-13 17:58:34,390 - mmseg - INFO - Iter [25650/160000]	lr: 8.559e-03, eta: 1 day, 10:33:48, time: 0.871, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0804, decode.acc_seg: 52.0975, loss: 1.0804
2021-08-13 17:59:16,499 - mmseg - INFO - Iter [25700/160000]	lr: 8.557e-03, eta: 1 day, 10:32:39, time: 0.843, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0951, decode.acc_seg: 50.8431, loss: 1.0951
2021-08-13 17:59:57,550 - mmseg - INFO - Iter [25750/160000]	lr: 8.554e-03, eta: 1 day, 10:31:26, time: 0.821, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1171, decode.acc_seg: 50.8969, loss: 1.1171
2021-08-13 18:00:43,692 - mmseg - INFO - Iter [25800/160000]	lr: 8.551e-03, eta: 1 day, 10:30:39, time: 0.922, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0838, decode.acc_seg: 51.5826, loss: 1.0838
2021-08-13 18:01:29,246 - mmseg - INFO - Iter [25850/160000]	lr: 8.548e-03, eta: 1 day, 10:29:48, time: 0.911, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1034, decode.acc_seg: 51.9980, loss: 1.1034
2021-08-13 18:02:55,687 - mmseg - INFO - Iter [25900/160000]	lr: 8.545e-03, eta: 1 day, 10:32:30, time: 1.730, data_time: 0.848, memory: 8535, decode.loss_seg: 1.0674, decode.acc_seg: 52.1521, loss: 1.0674
2021-08-13 18:03:38,587 - mmseg - INFO - Iter [25950/160000]	lr: 8.542e-03, eta: 1 day, 10:31:26, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0577, decode.acc_seg: 51.7273, loss: 1.0577
2021-08-13 18:04:22,207 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 18:04:22,207 - mmseg - INFO - Iter [26000/160000]	lr: 8.540e-03, eta: 1 day, 10:30:25, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0509, decode.acc_seg: 52.1054, loss: 1.0509
2021-08-13 18:05:05,525 - mmseg - INFO - Iter [26050/160000]	lr: 8.537e-03, eta: 1 day, 10:29:23, time: 0.866, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0814, decode.acc_seg: 51.7327, loss: 1.0814
2021-08-13 18:05:48,602 - mmseg - INFO - Iter [26100/160000]	lr: 8.534e-03, eta: 1 day, 10:28:20, time: 0.862, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0636, decode.acc_seg: 52.1115, loss: 1.0636
2021-08-13 18:06:32,003 - mmseg - INFO - Iter [26150/160000]	lr: 8.531e-03, eta: 1 day, 10:27:19, time: 0.867, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0993, decode.acc_seg: 50.8492, loss: 1.0993
2021-08-13 18:07:14,283 - mmseg - INFO - Iter [26200/160000]	lr: 8.528e-03, eta: 1 day, 10:26:12, time: 0.846, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1058, decode.acc_seg: 51.7913, loss: 1.1058
2021-08-13 18:07:57,134 - mmseg - INFO - Iter [26250/160000]	lr: 8.525e-03, eta: 1 day, 10:25:08, time: 0.857, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0812, decode.acc_seg: 50.9654, loss: 1.0812
2021-08-13 18:08:39,951 - mmseg - INFO - Iter [26300/160000]	lr: 8.523e-03, eta: 1 day, 10:24:04, time: 0.856, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0985, decode.acc_seg: 50.8065, loss: 1.0985
2021-08-13 18:09:23,475 - mmseg - INFO - Iter [26350/160000]	lr: 8.520e-03, eta: 1 day, 10:23:03, time: 0.870, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1158, decode.acc_seg: 51.8108, loss: 1.1158
2021-08-13 18:10:06,492 - mmseg - INFO - Iter [26400/160000]	lr: 8.517e-03, eta: 1 day, 10:22:00, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0966, decode.acc_seg: 52.6745, loss: 1.0966
2021-08-13 18:10:49,040 - mmseg - INFO - Iter [26450/160000]	lr: 8.514e-03, eta: 1 day, 10:20:55, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0968, decode.acc_seg: 51.5321, loss: 1.0968
2021-08-13 18:11:30,375 - mmseg - INFO - Iter [26500/160000]	lr: 8.511e-03, eta: 1 day, 10:19:44, time: 0.827, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0762, decode.acc_seg: 51.9218, loss: 1.0762
2021-08-13 18:12:49,566 - mmseg - INFO - Iter [26550/160000]	lr: 8.508e-03, eta: 1 day, 10:21:43, time: 1.584, data_time: 0.698, memory: 8535, decode.loss_seg: 1.0331, decode.acc_seg: 52.6290, loss: 1.0331
2021-08-13 18:13:31,880 - mmseg - INFO - Iter [26600/160000]	lr: 8.506e-03, eta: 1 day, 10:20:36, time: 0.846, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0932, decode.acc_seg: 50.9105, loss: 1.0932
2021-08-13 18:14:14,636 - mmseg - INFO - Iter [26650/160000]	lr: 8.503e-03, eta: 1 day, 10:19:32, time: 0.855, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0961, decode.acc_seg: 50.9583, loss: 1.0961
2021-08-13 18:14:56,971 - mmseg - INFO - Iter [26700/160000]	lr: 8.500e-03, eta: 1 day, 10:18:26, time: 0.846, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0891, decode.acc_seg: 51.2000, loss: 1.0891
2021-08-13 18:15:39,316 - mmseg - INFO - Iter [26750/160000]	lr: 8.497e-03, eta: 1 day, 10:17:20, time: 0.847, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0444, decode.acc_seg: 52.6566, loss: 1.0444
2021-08-13 18:16:21,954 - mmseg - INFO - Iter [26800/160000]	lr: 8.494e-03, eta: 1 day, 10:16:15, time: 0.852, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0809, decode.acc_seg: 51.3734, loss: 1.0809
2021-08-13 18:17:05,226 - mmseg - INFO - Iter [26850/160000]	lr: 8.491e-03, eta: 1 day, 10:15:14, time: 0.866, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0916, decode.acc_seg: 51.2189, loss: 1.0916
2021-08-13 18:17:47,684 - mmseg - INFO - Iter [26900/160000]	lr: 8.489e-03, eta: 1 day, 10:14:08, time: 0.849, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0761, decode.acc_seg: 51.7539, loss: 1.0761
2021-08-13 18:18:31,548 - mmseg - INFO - Iter [26950/160000]	lr: 8.486e-03, eta: 1 day, 10:13:10, time: 0.877, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0615, decode.acc_seg: 52.1509, loss: 1.0615
2021-08-13 18:19:14,628 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 18:19:14,629 - mmseg - INFO - Iter [27000/160000]	lr: 8.483e-03, eta: 1 day, 10:12:08, time: 0.862, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0958, decode.acc_seg: 51.9372, loss: 1.0958
2021-08-13 18:19:56,686 - mmseg - INFO - Iter [27050/160000]	lr: 8.480e-03, eta: 1 day, 10:11:01, time: 0.841, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0842, decode.acc_seg: 51.6163, loss: 1.0842
2021-08-13 18:20:39,401 - mmseg - INFO - Iter [27100/160000]	lr: 8.477e-03, eta: 1 day, 10:09:57, time: 0.854, data_time: 0.010, memory: 8535, decode.loss_seg: 1.1081, decode.acc_seg: 51.6735, loss: 1.1081
2021-08-13 18:21:56,935 - mmseg - INFO - Iter [27150/160000]	lr: 8.474e-03, eta: 1 day, 10:11:44, time: 1.551, data_time: 0.693, memory: 8535, decode.loss_seg: 1.0872, decode.acc_seg: 52.4065, loss: 1.0872
2021-08-13 18:22:39,261 - mmseg - INFO - Iter [27200/160000]	lr: 8.472e-03, eta: 1 day, 10:10:38, time: 0.846, data_time: 0.012, memory: 8535, decode.loss_seg: 1.1038, decode.acc_seg: 50.5279, loss: 1.1038
2021-08-13 18:23:23,209 - mmseg - INFO - Iter [27250/160000]	lr: 8.469e-03, eta: 1 day, 10:09:40, time: 0.879, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0716, decode.acc_seg: 52.4090, loss: 1.0716
2021-08-13 18:24:06,410 - mmseg - INFO - Iter [27300/160000]	lr: 8.466e-03, eta: 1 day, 10:08:38, time: 0.864, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0610, decode.acc_seg: 53.1653, loss: 1.0610
2021-08-13 18:24:50,570 - mmseg - INFO - Iter [27350/160000]	lr: 8.463e-03, eta: 1 day, 10:07:41, time: 0.883, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0617, decode.acc_seg: 51.7795, loss: 1.0617
2021-08-13 18:25:35,348 - mmseg - INFO - Iter [27400/160000]	lr: 8.460e-03, eta: 1 day, 10:06:48, time: 0.896, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1247, decode.acc_seg: 50.8000, loss: 1.1247
2021-08-13 18:26:19,070 - mmseg - INFO - Iter [27450/160000]	lr: 8.457e-03, eta: 1 day, 10:05:49, time: 0.875, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0904, decode.acc_seg: 51.9128, loss: 1.0904
2021-08-13 18:27:02,146 - mmseg - INFO - Iter [27500/160000]	lr: 8.455e-03, eta: 1 day, 10:04:47, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0627, decode.acc_seg: 52.9066, loss: 1.0627
2021-08-13 18:27:45,399 - mmseg - INFO - Iter [27550/160000]	lr: 8.452e-03, eta: 1 day, 10:03:46, time: 0.864, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1072, decode.acc_seg: 51.1644, loss: 1.1072
2021-08-13 18:28:27,848 - mmseg - INFO - Iter [27600/160000]	lr: 8.449e-03, eta: 1 day, 10:02:41, time: 0.850, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0851, decode.acc_seg: 52.0162, loss: 1.0851
2021-08-13 18:29:10,724 - mmseg - INFO - Iter [27650/160000]	lr: 8.446e-03, eta: 1 day, 10:01:39, time: 0.857, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0792, decode.acc_seg: 51.8813, loss: 1.0792
2021-08-13 18:29:54,097 - mmseg - INFO - Iter [27700/160000]	lr: 8.443e-03, eta: 1 day, 10:00:39, time: 0.868, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0600, decode.acc_seg: 52.9251, loss: 1.0600
2021-08-13 18:30:38,405 - mmseg - INFO - Iter [27750/160000]	lr: 8.440e-03, eta: 1 day, 9:59:43, time: 0.886, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0992, decode.acc_seg: 51.1187, loss: 1.0992
2021-08-13 18:31:59,403 - mmseg - INFO - Iter [27800/160000]	lr: 8.438e-03, eta: 1 day, 10:01:42, time: 1.620, data_time: 0.679, memory: 8535, decode.loss_seg: 1.1010, decode.acc_seg: 51.5566, loss: 1.1010
2021-08-13 18:32:45,220 - mmseg - INFO - Iter [27850/160000]	lr: 8.435e-03, eta: 1 day, 10:00:53, time: 0.916, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0403, decode.acc_seg: 52.8399, loss: 1.0403
2021-08-13 18:33:27,703 - mmseg - INFO - Iter [27900/160000]	lr: 8.432e-03, eta: 1 day, 9:59:49, time: 0.850, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0611, decode.acc_seg: 51.9596, loss: 1.0611
2021-08-13 18:34:10,553 - mmseg - INFO - Iter [27950/160000]	lr: 8.429e-03, eta: 1 day, 9:58:46, time: 0.857, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0671, decode.acc_seg: 52.2109, loss: 1.0671
2021-08-13 18:34:53,510 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 18:34:53,511 - mmseg - INFO - Iter [28000/160000]	lr: 8.426e-03, eta: 1 day, 9:57:44, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0548, decode.acc_seg: 52.3164, loss: 1.0548
2021-08-13 18:35:36,202 - mmseg - INFO - Iter [28050/160000]	lr: 8.423e-03, eta: 1 day, 9:56:40, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0628, decode.acc_seg: 52.7035, loss: 1.0628
2021-08-13 18:36:19,463 - mmseg - INFO - Iter [28100/160000]	lr: 8.421e-03, eta: 1 day, 9:55:40, time: 0.865, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0750, decode.acc_seg: 51.6494, loss: 1.0750
2021-08-13 18:37:02,564 - mmseg - INFO - Iter [28150/160000]	lr: 8.418e-03, eta: 1 day, 9:54:38, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0497, decode.acc_seg: 52.5578, loss: 1.0497
2021-08-13 18:37:45,867 - mmseg - INFO - Iter [28200/160000]	lr: 8.415e-03, eta: 1 day, 9:53:38, time: 0.867, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0636, decode.acc_seg: 52.7125, loss: 1.0636
2021-08-13 18:38:28,504 - mmseg - INFO - Iter [28250/160000]	lr: 8.412e-03, eta: 1 day, 9:52:35, time: 0.852, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1298, decode.acc_seg: 51.6608, loss: 1.1298
2021-08-13 18:39:11,793 - mmseg - INFO - Iter [28300/160000]	lr: 8.409e-03, eta: 1 day, 9:51:35, time: 0.866, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0348, decode.acc_seg: 52.6265, loss: 1.0348
2021-08-13 18:39:54,634 - mmseg - INFO - Iter [28350/160000]	lr: 8.406e-03, eta: 1 day, 9:50:32, time: 0.857, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0970, decode.acc_seg: 52.4944, loss: 1.0970
2021-08-13 18:41:14,903 - mmseg - INFO - Iter [28400/160000]	lr: 8.403e-03, eta: 1 day, 9:52:24, time: 1.606, data_time: 0.741, memory: 8535, decode.loss_seg: 1.0887, decode.acc_seg: 52.3777, loss: 1.0887
2021-08-13 18:41:58,404 - mmseg - INFO - Iter [28450/160000]	lr: 8.401e-03, eta: 1 day, 9:51:24, time: 0.869, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0774, decode.acc_seg: 52.0298, loss: 1.0774
2021-08-13 18:42:42,066 - mmseg - INFO - Iter [28500/160000]	lr: 8.398e-03, eta: 1 day, 9:50:25, time: 0.873, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0594, decode.acc_seg: 52.0615, loss: 1.0594
2021-08-13 18:43:25,470 - mmseg - INFO - Iter [28550/160000]	lr: 8.395e-03, eta: 1 day, 9:49:26, time: 0.868, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0730, decode.acc_seg: 51.6086, loss: 1.0730
2021-08-13 18:44:08,094 - mmseg - INFO - Iter [28600/160000]	lr: 8.392e-03, eta: 1 day, 9:48:22, time: 0.852, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0262, decode.acc_seg: 52.6492, loss: 1.0262
2021-08-13 18:44:51,088 - mmseg - INFO - Iter [28650/160000]	lr: 8.389e-03, eta: 1 day, 9:47:21, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0635, decode.acc_seg: 52.5917, loss: 1.0635
2021-08-13 18:45:33,435 - mmseg - INFO - Iter [28700/160000]	lr: 8.386e-03, eta: 1 day, 9:46:17, time: 0.847, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0893, decode.acc_seg: 51.8924, loss: 1.0893
2021-08-13 18:46:16,168 - mmseg - INFO - Iter [28750/160000]	lr: 8.384e-03, eta: 1 day, 9:45:14, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0277, decode.acc_seg: 52.7661, loss: 1.0277
2021-08-13 18:46:58,819 - mmseg - INFO - Iter [28800/160000]	lr: 8.381e-03, eta: 1 day, 9:44:11, time: 0.853, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0379, decode.acc_seg: 51.5315, loss: 1.0379
2021-08-13 18:47:42,007 - mmseg - INFO - Iter [28850/160000]	lr: 8.378e-03, eta: 1 day, 9:43:11, time: 0.864, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0701, decode.acc_seg: 52.6745, loss: 1.0701
2021-08-13 18:48:24,577 - mmseg - INFO - Iter [28900/160000]	lr: 8.375e-03, eta: 1 day, 9:42:08, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0848, decode.acc_seg: 51.3868, loss: 1.0848
2021-08-13 18:49:07,539 - mmseg - INFO - Iter [28950/160000]	lr: 8.372e-03, eta: 1 day, 9:41:06, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0647, decode.acc_seg: 52.0264, loss: 1.0647
2021-08-13 18:49:50,427 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 18:49:50,427 - mmseg - INFO - Iter [29000/160000]	lr: 8.369e-03, eta: 1 day, 9:40:05, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0753, decode.acc_seg: 51.5374, loss: 1.0753
2021-08-13 18:51:08,912 - mmseg - INFO - Iter [29050/160000]	lr: 8.367e-03, eta: 1 day, 9:41:44, time: 1.570, data_time: 0.705, memory: 8535, decode.loss_seg: 1.0972, decode.acc_seg: 51.8835, loss: 1.0972
2021-08-13 18:51:51,965 - mmseg - INFO - Iter [29100/160000]	lr: 8.364e-03, eta: 1 day, 9:40:43, time: 0.861, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0466, decode.acc_seg: 51.6614, loss: 1.0466
2021-08-13 18:52:35,920 - mmseg - INFO - Iter [29150/160000]	lr: 8.361e-03, eta: 1 day, 9:39:46, time: 0.879, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0475, decode.acc_seg: 52.8742, loss: 1.0475
2021-08-13 18:53:19,731 - mmseg - INFO - Iter [29200/160000]	lr: 8.358e-03, eta: 1 day, 9:38:48, time: 0.876, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0745, decode.acc_seg: 52.0928, loss: 1.0745
2021-08-13 18:54:02,365 - mmseg - INFO - Iter [29250/160000]	lr: 8.355e-03, eta: 1 day, 9:37:46, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0404, decode.acc_seg: 52.3130, loss: 1.0404
2021-08-13 18:54:44,633 - mmseg - INFO - Iter [29300/160000]	lr: 8.352e-03, eta: 1 day, 9:36:42, time: 0.846, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0330, decode.acc_seg: 52.6179, loss: 1.0330
2021-08-13 18:55:27,193 - mmseg - INFO - Iter [29350/160000]	lr: 8.350e-03, eta: 1 day, 9:35:39, time: 0.851, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0636, decode.acc_seg: 52.0758, loss: 1.0636
2021-08-13 18:56:09,727 - mmseg - INFO - Iter [29400/160000]	lr: 8.347e-03, eta: 1 day, 9:34:36, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0703, decode.acc_seg: 52.3126, loss: 1.0703
2021-08-13 18:56:52,348 - mmseg - INFO - Iter [29450/160000]	lr: 8.344e-03, eta: 1 day, 9:33:33, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0823, decode.acc_seg: 51.9159, loss: 1.0823
2021-08-13 18:57:35,658 - mmseg - INFO - Iter [29500/160000]	lr: 8.341e-03, eta: 1 day, 9:32:34, time: 0.866, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0866, decode.acc_seg: 52.2452, loss: 1.0866
2021-08-13 18:58:18,181 - mmseg - INFO - Iter [29550/160000]	lr: 8.338e-03, eta: 1 day, 9:31:31, time: 0.850, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0880, decode.acc_seg: 52.1722, loss: 1.0880
2021-08-13 18:59:00,779 - mmseg - INFO - Iter [29600/160000]	lr: 8.335e-03, eta: 1 day, 9:30:29, time: 0.852, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0802, decode.acc_seg: 51.7045, loss: 1.0802
2021-08-13 18:59:44,754 - mmseg - INFO - Iter [29650/160000]	lr: 8.332e-03, eta: 1 day, 9:29:32, time: 0.879, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0414, decode.acc_seg: 52.2880, loss: 1.0414
2021-08-13 19:01:03,181 - mmseg - INFO - Iter [29700/160000]	lr: 8.330e-03, eta: 1 day, 9:31:07, time: 1.569, data_time: 0.684, memory: 8535, decode.loss_seg: 1.0104, decode.acc_seg: 52.0891, loss: 1.0104
2021-08-13 19:01:45,951 - mmseg - INFO - Iter [29750/160000]	lr: 8.327e-03, eta: 1 day, 9:30:06, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0299, decode.acc_seg: 52.9896, loss: 1.0299
2021-08-13 19:02:28,834 - mmseg - INFO - Iter [29800/160000]	lr: 8.324e-03, eta: 1 day, 9:29:04, time: 0.857, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0430, decode.acc_seg: 52.8283, loss: 1.0430
2021-08-13 19:03:13,733 - mmseg - INFO - Iter [29850/160000]	lr: 8.321e-03, eta: 1 day, 9:28:12, time: 0.898, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1050, decode.acc_seg: 52.1774, loss: 1.1050
2021-08-13 19:03:57,717 - mmseg - INFO - Iter [29900/160000]	lr: 8.318e-03, eta: 1 day, 9:27:16, time: 0.880, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0585, decode.acc_seg: 52.2514, loss: 1.0585
2021-08-13 19:04:39,995 - mmseg - INFO - Iter [29950/160000]	lr: 8.315e-03, eta: 1 day, 9:26:12, time: 0.846, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0365, decode.acc_seg: 53.0103, loss: 1.0365
2021-08-13 19:05:23,729 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 19:05:23,729 - mmseg - INFO - Iter [30000/160000]	lr: 8.313e-03, eta: 1 day, 9:25:15, time: 0.875, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0583, decode.acc_seg: 52.0828, loss: 1.0583
2021-08-13 19:06:07,076 - mmseg - INFO - Iter [30050/160000]	lr: 8.310e-03, eta: 1 day, 9:24:16, time: 0.867, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0498, decode.acc_seg: 52.8653, loss: 1.0498
2021-08-13 19:06:49,968 - mmseg - INFO - Iter [30100/160000]	lr: 8.307e-03, eta: 1 day, 9:23:15, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0523, decode.acc_seg: 52.3466, loss: 1.0523
2021-08-13 19:07:32,764 - mmseg - INFO - Iter [30150/160000]	lr: 8.304e-03, eta: 1 day, 9:22:14, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0533, decode.acc_seg: 53.3340, loss: 1.0533
2021-08-13 19:08:16,083 - mmseg - INFO - Iter [30200/160000]	lr: 8.301e-03, eta: 1 day, 9:21:15, time: 0.866, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0717, decode.acc_seg: 51.2570, loss: 1.0717
2021-08-13 19:08:59,552 - mmseg - INFO - Iter [30250/160000]	lr: 8.298e-03, eta: 1 day, 9:20:16, time: 0.869, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0730, decode.acc_seg: 52.8556, loss: 1.0730
2021-08-13 19:10:19,030 - mmseg - INFO - Iter [30300/160000]	lr: 8.296e-03, eta: 1 day, 9:21:52, time: 1.590, data_time: 0.739, memory: 8535, decode.loss_seg: 1.1052, decode.acc_seg: 50.7478, loss: 1.1052
2021-08-13 19:11:02,591 - mmseg - INFO - Iter [30350/160000]	lr: 8.293e-03, eta: 1 day, 9:20:54, time: 0.871, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0529, decode.acc_seg: 51.9180, loss: 1.0529
2021-08-13 19:11:44,894 - mmseg - INFO - Iter [30400/160000]	lr: 8.290e-03, eta: 1 day, 9:19:51, time: 0.846, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0537, decode.acc_seg: 52.9782, loss: 1.0537
2021-08-13 19:12:29,274 - mmseg - INFO - Iter [30450/160000]	lr: 8.287e-03, eta: 1 day, 9:18:57, time: 0.887, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0753, decode.acc_seg: 52.4669, loss: 1.0753
2021-08-13 19:13:14,606 - mmseg - INFO - Iter [30500/160000]	lr: 8.284e-03, eta: 1 day, 9:18:06, time: 0.907, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0515, decode.acc_seg: 52.2699, loss: 1.0515
2021-08-13 19:13:58,466 - mmseg - INFO - Iter [30550/160000]	lr: 8.281e-03, eta: 1 day, 9:17:10, time: 0.878, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0298, decode.acc_seg: 51.7159, loss: 1.0298
2021-08-13 19:14:41,133 - mmseg - INFO - Iter [30600/160000]	lr: 8.278e-03, eta: 1 day, 9:16:08, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0390, decode.acc_seg: 52.3179, loss: 1.0390
2021-08-13 19:15:24,453 - mmseg - INFO - Iter [30650/160000]	lr: 8.276e-03, eta: 1 day, 9:15:09, time: 0.866, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0545, decode.acc_seg: 52.7966, loss: 1.0545
2021-08-13 19:16:08,645 - mmseg - INFO - Iter [30700/160000]	lr: 8.273e-03, eta: 1 day, 9:14:14, time: 0.884, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0493, decode.acc_seg: 52.9428, loss: 1.0493
2021-08-13 19:16:51,861 - mmseg - INFO - Iter [30750/160000]	lr: 8.270e-03, eta: 1 day, 9:13:15, time: 0.865, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1072, decode.acc_seg: 50.9590, loss: 1.1072
2021-08-13 19:17:34,331 - mmseg - INFO - Iter [30800/160000]	lr: 8.267e-03, eta: 1 day, 9:12:13, time: 0.849, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0566, decode.acc_seg: 52.2727, loss: 1.0566
2021-08-13 19:18:17,029 - mmseg - INFO - Iter [30850/160000]	lr: 8.264e-03, eta: 1 day, 9:11:12, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0370, decode.acc_seg: 52.9272, loss: 1.0370
2021-08-13 19:19:00,659 - mmseg - INFO - Iter [30900/160000]	lr: 8.261e-03, eta: 1 day, 9:10:15, time: 0.873, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0966, decode.acc_seg: 52.1440, loss: 1.0966
2021-08-13 19:20:20,378 - mmseg - INFO - Iter [30950/160000]	lr: 8.259e-03, eta: 1 day, 9:11:48, time: 1.594, data_time: 0.749, memory: 8535, decode.loss_seg: 1.0534, decode.acc_seg: 52.5467, loss: 1.0534
2021-08-13 19:21:04,339 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 19:21:04,340 - mmseg - INFO - Iter [31000/160000]	lr: 8.256e-03, eta: 1 day, 9:10:52, time: 0.879, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0267, decode.acc_seg: 52.9621, loss: 1.0267
2021-08-13 19:21:49,586 - mmseg - INFO - Iter [31050/160000]	lr: 8.253e-03, eta: 1 day, 9:10:01, time: 0.905, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0441, decode.acc_seg: 52.6827, loss: 1.0441
2021-08-13 19:22:34,557 - mmseg - INFO - Iter [31100/160000]	lr: 8.250e-03, eta: 1 day, 9:09:09, time: 0.899, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0260, decode.acc_seg: 52.6994, loss: 1.0260
2021-08-13 19:23:19,922 - mmseg - INFO - Iter [31150/160000]	lr: 8.247e-03, eta: 1 day, 9:08:19, time: 0.908, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0438, decode.acc_seg: 52.3087, loss: 1.0438
2021-08-13 19:24:03,180 - mmseg - INFO - Iter [31200/160000]	lr: 8.244e-03, eta: 1 day, 9:07:20, time: 0.865, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0848, decode.acc_seg: 51.6404, loss: 1.0848
2021-08-13 19:24:46,080 - mmseg - INFO - Iter [31250/160000]	lr: 8.241e-03, eta: 1 day, 9:06:20, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0617, decode.acc_seg: 52.6673, loss: 1.0617
2021-08-13 19:25:30,341 - mmseg - INFO - Iter [31300/160000]	lr: 8.239e-03, eta: 1 day, 9:05:26, time: 0.885, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0462, decode.acc_seg: 53.0060, loss: 1.0462
2021-08-13 19:26:13,345 - mmseg - INFO - Iter [31350/160000]	lr: 8.236e-03, eta: 1 day, 9:04:26, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0796, decode.acc_seg: 52.5789, loss: 1.0796
2021-08-13 19:26:55,855 - mmseg - INFO - Iter [31400/160000]	lr: 8.233e-03, eta: 1 day, 9:03:24, time: 0.850, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0840, decode.acc_seg: 52.3290, loss: 1.0840
2021-08-13 19:27:38,781 - mmseg - INFO - Iter [31450/160000]	lr: 8.230e-03, eta: 1 day, 9:02:24, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0576, decode.acc_seg: 52.0532, loss: 1.0576
2021-08-13 19:28:21,811 - mmseg - INFO - Iter [31500/160000]	lr: 8.227e-03, eta: 1 day, 9:01:25, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0803, decode.acc_seg: 50.9345, loss: 1.0803
2021-08-13 19:29:03,759 - mmseg - INFO - Iter [31550/160000]	lr: 8.224e-03, eta: 1 day, 9:00:21, time: 0.839, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0596, decode.acc_seg: 52.3447, loss: 1.0596
2021-08-13 19:30:21,678 - mmseg - INFO - Iter [31600/160000]	lr: 8.222e-03, eta: 1 day, 9:01:43, time: 1.559, data_time: 0.706, memory: 8535, decode.loss_seg: 1.0162, decode.acc_seg: 53.0628, loss: 1.0162
2021-08-13 19:31:05,114 - mmseg - INFO - Iter [31650/160000]	lr: 8.219e-03, eta: 1 day, 9:00:45, time: 0.868, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0252, decode.acc_seg: 53.8639, loss: 1.0252
2021-08-13 19:31:48,057 - mmseg - INFO - Iter [31700/160000]	lr: 8.216e-03, eta: 1 day, 8:59:46, time: 0.859, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0459, decode.acc_seg: 52.8470, loss: 1.0459
2021-08-13 19:32:30,925 - mmseg - INFO - Iter [31750/160000]	lr: 8.213e-03, eta: 1 day, 8:58:45, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0219, decode.acc_seg: 52.7969, loss: 1.0219
2021-08-13 19:33:13,661 - mmseg - INFO - Iter [31800/160000]	lr: 8.210e-03, eta: 1 day, 8:57:45, time: 0.854, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0560, decode.acc_seg: 52.3677, loss: 1.0560
2021-08-13 19:33:56,279 - mmseg - INFO - Iter [31850/160000]	lr: 8.207e-03, eta: 1 day, 8:56:44, time: 0.852, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0516, decode.acc_seg: 51.2594, loss: 1.0516
2021-08-13 19:34:39,867 - mmseg - INFO - Iter [31900/160000]	lr: 8.204e-03, eta: 1 day, 8:55:47, time: 0.872, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0786, decode.acc_seg: 51.7405, loss: 1.0786
2021-08-13 19:35:22,026 - mmseg - INFO - Iter [31950/160000]	lr: 8.202e-03, eta: 1 day, 8:54:44, time: 0.843, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0394, decode.acc_seg: 52.5787, loss: 1.0394
2021-08-13 19:36:05,096 - mmseg - INFO - Saving checkpoint at 32000 iterations
2021-08-13 19:36:05,396 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 19:36:05,398 - mmseg - INFO - Iter [32000/160000]	lr: 8.199e-03, eta: 1 day, 8:53:46, time: 0.868, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0734, decode.acc_seg: 52.5715, loss: 1.0734
2021-08-13 19:38:29,746 - mmseg - INFO - per class results:
2021-08-13 19:38:29,757 - mmseg - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 53.92 | 84.54 |
|       building      | 64.92 | 76.94 |
|         sky         | 88.73 | 93.12 |
|        floor        | 57.22 |  83.0 |
|         tree        | 60.87 | 77.64 |
|       ceiling       | 64.43 | 76.35 |
|         road        | 64.03 | 86.72 |
|         bed         | 61.97 | 81.32 |
|      windowpane     |  37.4 | 55.83 |
|        grass        |  52.6 | 66.85 |
|       cabinet       | 32.59 | 69.04 |
|       sidewalk      | 26.61 | 31.57 |
|        person       | 42.53 | 48.74 |
|        earth        | 22.07 | 29.67 |
|         door        | 13.87 | 17.93 |
|        table        |  27.7 |  38.3 |
|       mountain      | 33.38 | 51.59 |
|        plant        | 32.83 | 41.93 |
|       curtain       | 38.72 | 58.09 |
|        chair        | 24.89 | 37.26 |
|         car         | 52.54 | 81.41 |
|        water        | 28.14 |  58.7 |
|       painting      |  45.2 | 53.35 |
|         sofa        | 33.69 | 42.73 |
|        shelf        | 19.02 | 26.06 |
|        house        | 33.46 | 50.77 |
|         sea         | 30.08 | 63.68 |
|        mirror       | 13.88 | 15.65 |
|         rug         | 19.65 | 21.03 |
|        field        | 20.33 | 46.98 |
|       armchair      |  8.58 | 10.31 |
|         seat        | 27.04 | 41.41 |
|        fence        |  14.5 | 19.05 |
|         desk        | 13.64 | 16.72 |
|         rock        | 10.45 | 14.93 |
|       wardrobe      |  9.98 | 10.29 |
|         lamp        | 22.54 | 28.99 |
|       bathtub       |  7.53 |  8.44 |
|       railing       | 14.12 | 16.43 |
|       cushion       |  18.4 |  23.7 |
|         base        |  1.67 |  1.75 |
|         box         |  2.68 |  3.02 |
|        column       |  3.1  |  3.21 |
|      signboard      | 10.14 |  11.4 |
|   chest of drawers  | 19.03 | 21.18 |
|       counter       |  8.6  |  9.07 |
|         sand        |  8.89 | 12.95 |
|         sink        | 23.32 | 35.67 |
|      skyscraper     | 37.29 | 74.73 |
|      fireplace      | 39.42 |  47.9 |
|     refrigerator    | 17.37 | 23.48 |
|      grandstand     | 12.94 | 17.28 |
|         path        |  4.01 |  4.44 |
|        stairs       |  4.06 |  4.15 |
|        runway       | 47.09 |  63.5 |
|         case        | 13.86 | 18.26 |
|      pool table     | 70.67 | 80.41 |
|        pillow       | 23.47 | 28.01 |
|     screen door     |  0.29 |  0.29 |
|       stairway      | 11.46 | 14.31 |
|        river        |  3.07 |  3.6  |
|        bridge       |  7.12 | 11.38 |
|       bookcase      | 18.23 | 22.48 |
|        blind        |  1.73 |  1.77 |
|     coffee table    | 31.53 | 45.61 |
|        toilet       | 41.04 | 59.37 |
|        flower       |  8.98 | 10.36 |
|         book        | 13.22 | 15.26 |
|         hill        |  4.67 |  6.19 |
|        bench        | 14.05 | 15.27 |
|      countertop     |  9.11 |  9.64 |
|        stove        | 26.17 |  46.3 |
|         palm        | 11.22 | 11.73 |
|    kitchen island   | 12.16 | 15.76 |
|       computer      | 18.09 | 19.54 |
|     swivel chair    | 18.93 | 20.34 |
|         boat        | 15.53 | 21.95 |
|         bar         |  7.48 |  7.95 |
|    arcade machine   |  3.38 |  5.62 |
|        hovel        |  3.7  |  5.17 |
|         bus         | 27.79 | 32.55 |
|        towel        |  8.16 |  8.58 |
|        light        | 15.92 | 18.35 |
|        truck        |  0.29 |  0.4  |
|        tower        | 21.38 |  27.1 |
|      chandelier     | 37.85 | 55.06 |
|        awning       |  7.14 |  9.03 |
|     streetlight     |  2.82 |  2.99 |
|        booth        |  0.0  |  0.0  |
| television receiver | 20.24 |  28.1 |
|       airplane      | 20.87 | 34.48 |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  2.54 |  3.51 |
|         pole        |  1.16 |  1.26 |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.0  |  0.0  |
|      escalator      |  1.04 |  1.38 |
|       ottoman       |  0.1  |  0.1  |
|        bottle       |  1.24 |  1.38 |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.08 |  0.09 |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  9.69 | 10.17 |
|        canopy       |  0.0  |  0.0  |
|        washer       | 34.76 | 41.22 |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    | 14.41 | 22.69 |
|        stool        |  0.0  |  0.0  |
|        barrel       |  0.66 |  3.07 |
|        basket       |  0.0  |  0.0  |
|      waterfall      | 27.52 | 39.64 |
|         tent        | 36.94 | 50.27 |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.62 |  0.64 |
|        cradle       | 45.45 | 69.54 |
|         oven        |  0.12 |  0.12 |
|         ball        |  9.43 |  39.3 |
|         food        | 25.46 | 30.07 |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  4.68 |  5.08 |
|      microwave      | 10.93 | 11.51 |
|         pot         |  0.06 |  0.06 |
|        animal       |  0.43 |  0.43 |
|       bicycle       |  1.18 |  1.18 |
|         lake        |  0.0  |  0.0  |
|      dishwasher     | 11.89 | 14.52 |
|        screen       | 37.64 |  57.7 |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  2.79 |  2.87 |
|        sconce       |  0.0  |  0.0  |
|         vase        |  3.53 |  3.66 |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.35 |  0.36 |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.01 |  0.01 |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        |  1.19 |  1.21 |
|       monitor       |  0.96 |  0.96 |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.0  |  0.0  |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
2021-08-13 19:38:29,757 - mmseg - INFO - Summary:
2021-08-13 19:38:29,757 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 65.36 | 16.15 | 22.12 |
+-------+-------+-------+
2021-08-13 19:38:30,025 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 19:38:30,026 - mmseg - INFO - Iter(val) [250]	aAcc: 0.6536, mIoU: 0.1615, mAcc: 0.2212, IoU.wall: 0.5392, IoU.building: 0.6492, IoU.sky: 0.8873, IoU.floor: 0.5722, IoU.tree: 0.6087, IoU.ceiling: 0.6443, IoU.road: 0.6403, IoU.bed : 0.6197, IoU.windowpane: 0.3740, IoU.grass: 0.5260, IoU.cabinet: 0.3259, IoU.sidewalk: 0.2661, IoU.person: 0.4253, IoU.earth: 0.2207, IoU.door: 0.1387, IoU.table: 0.2770, IoU.mountain: 0.3338, IoU.plant: 0.3283, IoU.curtain: 0.3872, IoU.chair: 0.2489, IoU.car: 0.5254, IoU.water: 0.2814, IoU.painting: 0.4520, IoU.sofa: 0.3369, IoU.shelf: 0.1902, IoU.house: 0.3346, IoU.sea: 0.3008, IoU.mirror: 0.1388, IoU.rug: 0.1965, IoU.field: 0.2033, IoU.armchair: 0.0858, IoU.seat: 0.2704, IoU.fence: 0.1450, IoU.desk: 0.1364, IoU.rock: 0.1045, IoU.wardrobe: 0.0998, IoU.lamp: 0.2254, IoU.bathtub: 0.0753, IoU.railing: 0.1412, IoU.cushion: 0.1840, IoU.base: 0.0167, IoU.box: 0.0268, IoU.column: 0.0310, IoU.signboard: 0.1014, IoU.chest of drawers: 0.1903, IoU.counter: 0.0860, IoU.sand: 0.0889, IoU.sink: 0.2332, IoU.skyscraper: 0.3729, IoU.fireplace: 0.3942, IoU.refrigerator: 0.1737, IoU.grandstand: 0.1294, IoU.path: 0.0401, IoU.stairs: 0.0406, IoU.runway: 0.4709, IoU.case: 0.1386, IoU.pool table: 0.7067, IoU.pillow: 0.2347, IoU.screen door: 0.0029, IoU.stairway: 0.1146, IoU.river: 0.0307, IoU.bridge: 0.0712, IoU.bookcase: 0.1823, IoU.blind: 0.0173, IoU.coffee table: 0.3153, IoU.toilet: 0.4104, IoU.flower: 0.0898, IoU.book: 0.1322, IoU.hill: 0.0467, IoU.bench: 0.1405, IoU.countertop: 0.0911, IoU.stove: 0.2617, IoU.palm: 0.1122, IoU.kitchen island: 0.1216, IoU.computer: 0.1809, IoU.swivel chair: 0.1893, IoU.boat: 0.1553, IoU.bar: 0.0748, IoU.arcade machine: 0.0338, IoU.hovel: 0.0370, IoU.bus: 0.2779, IoU.towel: 0.0816, IoU.light: 0.1592, IoU.truck: 0.0029, IoU.tower: 0.2138, IoU.chandelier: 0.3785, IoU.awning: 0.0714, IoU.streetlight: 0.0282, IoU.booth: 0.0000, IoU.television receiver: 0.2024, IoU.airplane: 0.2087, IoU.dirt track: 0.0000, IoU.apparel: 0.0254, IoU.pole: 0.0116, IoU.land: 0.0000, IoU.bannister: 0.0000, IoU.escalator: 0.0104, IoU.ottoman: 0.0010, IoU.bottle: 0.0124, IoU.buffet: 0.0000, IoU.poster: 0.0000, IoU.stage: 0.0008, IoU.van: 0.0000, IoU.ship: 0.0000, IoU.fountain: 0.0000, IoU.conveyer belt: 0.0969, IoU.canopy: 0.0000, IoU.washer: 0.3476, IoU.plaything: 0.0000, IoU.swimming pool: 0.1441, IoU.stool: 0.0000, IoU.barrel: 0.0066, IoU.basket: 0.0000, IoU.waterfall: 0.2752, IoU.tent: 0.3694, IoU.bag: 0.0000, IoU.minibike: 0.0062, IoU.cradle: 0.4545, IoU.oven: 0.0012, IoU.ball: 0.0943, IoU.food: 0.2546, IoU.step: 0.0000, IoU.tank: 0.0000, IoU.trade name: 0.0468, IoU.microwave: 0.1093, IoU.pot: 0.0006, IoU.animal: 0.0043, IoU.bicycle: 0.0118, IoU.lake: 0.0000, IoU.dishwasher: 0.1189, IoU.screen: 0.3764, IoU.blanket: 0.0000, IoU.sculpture: 0.0000, IoU.hood: 0.0279, IoU.sconce: 0.0000, IoU.vase: 0.0353, IoU.traffic light: 0.0000, IoU.tray: 0.0035, IoU.ashcan: 0.0000, IoU.fan: 0.0001, IoU.pier: 0.0000, IoU.crt screen: 0.0000, IoU.plate: 0.0119, IoU.monitor: 0.0096, IoU.bulletin board: 0.0000, IoU.shower: 0.0000, IoU.radiator: 0.0000, IoU.glass: 0.0000, IoU.clock: 0.0000, IoU.flag: 0.0000, Acc.wall: 0.8454, Acc.building: 0.7694, Acc.sky: 0.9312, Acc.floor: 0.8300, Acc.tree: 0.7764, Acc.ceiling: 0.7635, Acc.road: 0.8672, Acc.bed : 0.8132, Acc.windowpane: 0.5583, Acc.grass: 0.6685, Acc.cabinet: 0.6904, Acc.sidewalk: 0.3157, Acc.person: 0.4874, Acc.earth: 0.2967, Acc.door: 0.1793, Acc.table: 0.3830, Acc.mountain: 0.5159, Acc.plant: 0.4193, Acc.curtain: 0.5809, Acc.chair: 0.3726, Acc.car: 0.8141, Acc.water: 0.5870, Acc.painting: 0.5335, Acc.sofa: 0.4273, Acc.shelf: 0.2606, Acc.house: 0.5077, Acc.sea: 0.6368, Acc.mirror: 0.1565, Acc.rug: 0.2103, Acc.field: 0.4698, Acc.armchair: 0.1031, Acc.seat: 0.4141, Acc.fence: 0.1905, Acc.desk: 0.1672, Acc.rock: 0.1493, Acc.wardrobe: 0.1029, Acc.lamp: 0.2899, Acc.bathtub: 0.0844, Acc.railing: 0.1643, Acc.cushion: 0.2370, Acc.base: 0.0175, Acc.box: 0.0302, Acc.column: 0.0321, Acc.signboard: 0.1140, Acc.chest of drawers: 0.2118, Acc.counter: 0.0907, Acc.sand: 0.1295, Acc.sink: 0.3567, Acc.skyscraper: 0.7473, Acc.fireplace: 0.4790, Acc.refrigerator: 0.2348, Acc.grandstand: 0.1728, Acc.path: 0.0444, Acc.stairs: 0.0415, Acc.runway: 0.6350, Acc.case: 0.1826, Acc.pool table: 0.8041, Acc.pillow: 0.2801, Acc.screen door: 0.0029, Acc.stairway: 0.1431, Acc.river: 0.0360, Acc.bridge: 0.1138, Acc.bookcase: 0.2248, Acc.blind: 0.0177, Acc.coffee table: 0.4561, Acc.toilet: 0.5937, Acc.flower: 0.1036, Acc.book: 0.1526, Acc.hill: 0.0619, Acc.bench: 0.1527, Acc.countertop: 0.0964, Acc.stove: 0.4630, Acc.palm: 0.1173, Acc.kitchen island: 0.1576, Acc.computer: 0.1954, Acc.swivel chair: 0.2034, Acc.boat: 0.2195, Acc.bar: 0.0795, Acc.arcade machine: 0.0562, Acc.hovel: 0.0517, Acc.bus: 0.3255, Acc.towel: 0.0858, Acc.light: 0.1835, Acc.truck: 0.0040, Acc.tower: 0.2710, Acc.chandelier: 0.5506, Acc.awning: 0.0903, Acc.streetlight: 0.0299, Acc.booth: 0.0000, Acc.television receiver: 0.2810, Acc.airplane: 0.3448, Acc.dirt track: 0.0000, Acc.apparel: 0.0351, Acc.pole: 0.0126, Acc.land: 0.0000, Acc.bannister: 0.0000, Acc.escalator: 0.0138, Acc.ottoman: 0.0010, Acc.bottle: 0.0138, Acc.buffet: 0.0000, Acc.poster: 0.0000, Acc.stage: 0.0009, Acc.van: 0.0000, Acc.ship: 0.0000, Acc.fountain: 0.0000, Acc.conveyer belt: 0.1017, Acc.canopy: 0.0000, Acc.washer: 0.4122, Acc.plaything: 0.0000, Acc.swimming pool: 0.2269, Acc.stool: 0.0000, Acc.barrel: 0.0307, Acc.basket: 0.0000, Acc.waterfall: 0.3964, Acc.tent: 0.5027, Acc.bag: 0.0000, Acc.minibike: 0.0064, Acc.cradle: 0.6954, Acc.oven: 0.0012, Acc.ball: 0.3930, Acc.food: 0.3007, Acc.step: 0.0000, Acc.tank: 0.0000, Acc.trade name: 0.0508, Acc.microwave: 0.1151, Acc.pot: 0.0006, Acc.animal: 0.0043, Acc.bicycle: 0.0118, Acc.lake: 0.0000, Acc.dishwasher: 0.1452, Acc.screen: 0.5770, Acc.blanket: 0.0000, Acc.sculpture: 0.0000, Acc.hood: 0.0287, Acc.sconce: 0.0000, Acc.vase: 0.0366, Acc.traffic light: 0.0000, Acc.tray: 0.0036, Acc.ashcan: 0.0000, Acc.fan: 0.0001, Acc.pier: 0.0000, Acc.crt screen: 0.0000, Acc.plate: 0.0121, Acc.monitor: 0.0096, Acc.bulletin board: 0.0000, Acc.shower: 0.0000, Acc.radiator: 0.0000, Acc.glass: 0.0000, Acc.clock: 0.0000, Acc.flag: 0.0000
2021-08-13 19:39:13,397 - mmseg - INFO - Iter [32050/160000]	lr: 8.196e-03, eta: 1 day, 9:02:26, time: 3.760, data_time: 2.905, memory: 8535, decode.loss_seg: 1.0403, decode.acc_seg: 53.0390, loss: 1.0403
2021-08-13 19:39:57,745 - mmseg - INFO - Iter [32100/160000]	lr: 8.193e-03, eta: 1 day, 9:01:31, time: 0.886, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0618, decode.acc_seg: 52.0691, loss: 1.0618
2021-08-13 19:40:42,427 - mmseg - INFO - Iter [32150/160000]	lr: 8.190e-03, eta: 1 day, 9:00:37, time: 0.894, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0762, decode.acc_seg: 52.5652, loss: 1.0762
2021-08-13 19:42:02,304 - mmseg - INFO - Iter [32200/160000]	lr: 8.187e-03, eta: 1 day, 9:02:03, time: 1.598, data_time: 0.669, memory: 8535, decode.loss_seg: 1.0311, decode.acc_seg: 52.2163, loss: 1.0311
2021-08-13 19:42:45,226 - mmseg - INFO - Iter [32250/160000]	lr: 8.185e-03, eta: 1 day, 9:01:02, time: 0.858, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0163, decode.acc_seg: 54.0292, loss: 1.0163
2021-08-13 19:43:28,733 - mmseg - INFO - Iter [32300/160000]	lr: 8.182e-03, eta: 1 day, 9:00:04, time: 0.871, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0733, decode.acc_seg: 52.9358, loss: 1.0733
2021-08-13 19:44:11,432 - mmseg - INFO - Iter [32350/160000]	lr: 8.179e-03, eta: 1 day, 8:59:02, time: 0.854, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0315, decode.acc_seg: 52.2606, loss: 1.0315
2021-08-13 19:44:55,324 - mmseg - INFO - Iter [32400/160000]	lr: 8.176e-03, eta: 1 day, 8:58:06, time: 0.878, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0537, decode.acc_seg: 51.9947, loss: 1.0537
2021-08-13 19:45:38,303 - mmseg - INFO - Iter [32450/160000]	lr: 8.173e-03, eta: 1 day, 8:57:05, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0209, decode.acc_seg: 53.2665, loss: 1.0209
2021-08-13 19:46:20,567 - mmseg - INFO - Iter [32500/160000]	lr: 8.170e-03, eta: 1 day, 8:56:02, time: 0.845, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0465, decode.acc_seg: 51.6157, loss: 1.0465
2021-08-13 19:47:03,950 - mmseg - INFO - Iter [32550/160000]	lr: 8.167e-03, eta: 1 day, 8:55:03, time: 0.867, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0588, decode.acc_seg: 52.8263, loss: 1.0588
2021-08-13 19:47:46,592 - mmseg - INFO - Iter [32600/160000]	lr: 8.165e-03, eta: 1 day, 8:54:02, time: 0.853, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0416, decode.acc_seg: 52.3186, loss: 1.0416
2021-08-13 19:48:29,248 - mmseg - INFO - Iter [32650/160000]	lr: 8.162e-03, eta: 1 day, 8:53:00, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0553, decode.acc_seg: 52.3923, loss: 1.0553
2021-08-13 19:49:12,275 - mmseg - INFO - Iter [32700/160000]	lr: 8.159e-03, eta: 1 day, 8:52:01, time: 0.861, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0409, decode.acc_seg: 53.5718, loss: 1.0409
2021-08-13 19:49:54,720 - mmseg - INFO - Iter [32750/160000]	lr: 8.156e-03, eta: 1 day, 8:50:58, time: 0.848, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0360, decode.acc_seg: 52.1722, loss: 1.0360
2021-08-13 19:50:37,760 - mmseg - INFO - Iter [32800/160000]	lr: 8.153e-03, eta: 1 day, 8:49:59, time: 0.861, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0552, decode.acc_seg: 52.5534, loss: 1.0552
2021-08-13 19:51:57,674 - mmseg - INFO - Iter [32850/160000]	lr: 8.150e-03, eta: 1 day, 8:51:22, time: 1.599, data_time: 0.754, memory: 8535, decode.loss_seg: 1.0414, decode.acc_seg: 52.4955, loss: 1.0414
2021-08-13 19:52:40,926 - mmseg - INFO - Iter [32900/160000]	lr: 8.148e-03, eta: 1 day, 8:50:22, time: 0.864, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0352, decode.acc_seg: 52.3568, loss: 1.0352
2021-08-13 19:53:25,224 - mmseg - INFO - Iter [32950/160000]	lr: 8.145e-03, eta: 1 day, 8:49:27, time: 0.887, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0462, decode.acc_seg: 52.1768, loss: 1.0462
2021-08-13 19:54:08,482 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 19:54:08,482 - mmseg - INFO - Iter [33000/160000]	lr: 8.142e-03, eta: 1 day, 8:48:28, time: 0.865, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0524, decode.acc_seg: 52.4529, loss: 1.0524
2021-08-13 19:54:51,690 - mmseg - INFO - Iter [33050/160000]	lr: 8.139e-03, eta: 1 day, 8:47:29, time: 0.864, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0418, decode.acc_seg: 51.7825, loss: 1.0418
2021-08-13 19:55:35,254 - mmseg - INFO - Iter [33100/160000]	lr: 8.136e-03, eta: 1 day, 8:46:32, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0128, decode.acc_seg: 53.7450, loss: 1.0128
2021-08-13 19:56:18,578 - mmseg - INFO - Iter [33150/160000]	lr: 8.133e-03, eta: 1 day, 8:45:33, time: 0.866, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0368, decode.acc_seg: 52.9913, loss: 1.0368
2021-08-13 19:57:01,423 - mmseg - INFO - Iter [33200/160000]	lr: 8.130e-03, eta: 1 day, 8:44:33, time: 0.857, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0245, decode.acc_seg: 52.8023, loss: 1.0245
2021-08-13 19:57:44,203 - mmseg - INFO - Iter [33250/160000]	lr: 8.128e-03, eta: 1 day, 8:43:32, time: 0.855, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0578, decode.acc_seg: 52.0769, loss: 1.0578
2021-08-13 19:58:26,635 - mmseg - INFO - Iter [33300/160000]	lr: 8.125e-03, eta: 1 day, 8:42:30, time: 0.849, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0906, decode.acc_seg: 51.6480, loss: 1.0906
2021-08-13 19:59:09,011 - mmseg - INFO - Iter [33350/160000]	lr: 8.122e-03, eta: 1 day, 8:41:28, time: 0.847, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0719, decode.acc_seg: 52.2762, loss: 1.0719
2021-08-13 19:59:52,100 - mmseg - INFO - Iter [33400/160000]	lr: 8.119e-03, eta: 1 day, 8:40:29, time: 0.862, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0325, decode.acc_seg: 53.2236, loss: 1.0325
2021-08-13 20:01:10,625 - mmseg - INFO - Iter [33450/160000]	lr: 8.116e-03, eta: 1 day, 8:41:44, time: 1.571, data_time: 0.701, memory: 8535, decode.loss_seg: 1.0564, decode.acc_seg: 52.8778, loss: 1.0564
2021-08-13 20:01:54,015 - mmseg - INFO - Iter [33500/160000]	lr: 8.113e-03, eta: 1 day, 8:40:46, time: 0.868, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0088, decode.acc_seg: 52.5124, loss: 1.0088
2021-08-13 20:02:38,564 - mmseg - INFO - Iter [33550/160000]	lr: 8.110e-03, eta: 1 day, 8:39:52, time: 0.891, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0424, decode.acc_seg: 53.5842, loss: 1.0424
2021-08-13 20:03:23,320 - mmseg - INFO - Iter [33600/160000]	lr: 8.108e-03, eta: 1 day, 8:38:58, time: 0.894, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0727, decode.acc_seg: 52.6003, loss: 1.0727
2021-08-13 20:04:06,548 - mmseg - INFO - Iter [33650/160000]	lr: 8.105e-03, eta: 1 day, 8:38:00, time: 0.865, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0347, decode.acc_seg: 52.8326, loss: 1.0347
2021-08-13 20:04:50,254 - mmseg - INFO - Iter [33700/160000]	lr: 8.102e-03, eta: 1 day, 8:37:03, time: 0.874, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0134, decode.acc_seg: 52.7209, loss: 1.0134
2021-08-13 20:05:33,644 - mmseg - INFO - Iter [33750/160000]	lr: 8.099e-03, eta: 1 day, 8:36:05, time: 0.868, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0487, decode.acc_seg: 52.4639, loss: 1.0487
2021-08-13 20:06:16,734 - mmseg - INFO - Iter [33800/160000]	lr: 8.096e-03, eta: 1 day, 8:35:06, time: 0.862, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0290, decode.acc_seg: 53.3573, loss: 1.0290
2021-08-13 20:07:02,568 - mmseg - INFO - Iter [33850/160000]	lr: 8.093e-03, eta: 1 day, 8:34:17, time: 0.916, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0543, decode.acc_seg: 52.1828, loss: 1.0543
2021-08-13 20:07:48,630 - mmseg - INFO - Iter [33900/160000]	lr: 8.090e-03, eta: 1 day, 8:33:29, time: 0.921, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0654, decode.acc_seg: 52.9511, loss: 1.0654
2021-08-13 20:08:34,514 - mmseg - INFO - Iter [33950/160000]	lr: 8.088e-03, eta: 1 day, 8:32:40, time: 0.917, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0733, decode.acc_seg: 52.6437, loss: 1.0733
2021-08-13 20:09:18,484 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 20:09:18,485 - mmseg - INFO - Iter [34000/160000]	lr: 8.085e-03, eta: 1 day, 8:31:44, time: 0.880, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0393, decode.acc_seg: 52.4133, loss: 1.0393
2021-08-13 20:10:02,892 - mmseg - INFO - Iter [34050/160000]	lr: 8.082e-03, eta: 1 day, 8:30:50, time: 0.888, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0167, decode.acc_seg: 53.2765, loss: 1.0167
2021-08-13 20:11:21,815 - mmseg - INFO - Iter [34100/160000]	lr: 8.079e-03, eta: 1 day, 8:32:04, time: 1.579, data_time: 0.724, memory: 8535, decode.loss_seg: 1.0507, decode.acc_seg: 51.8781, loss: 1.0507
2021-08-13 20:12:05,196 - mmseg - INFO - Iter [34150/160000]	lr: 8.076e-03, eta: 1 day, 8:31:05, time: 0.867, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0318, decode.acc_seg: 51.5434, loss: 1.0318
2021-08-13 20:12:49,738 - mmseg - INFO - Iter [34200/160000]	lr: 8.073e-03, eta: 1 day, 8:30:12, time: 0.891, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0231, decode.acc_seg: 53.0162, loss: 1.0231
2021-08-13 20:13:33,128 - mmseg - INFO - Iter [34250/160000]	lr: 8.071e-03, eta: 1 day, 8:29:14, time: 0.867, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0365, decode.acc_seg: 52.6421, loss: 1.0365
2021-08-13 20:14:16,726 - mmseg - INFO - Iter [34300/160000]	lr: 8.068e-03, eta: 1 day, 8:28:17, time: 0.872, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0130, decode.acc_seg: 53.7308, loss: 1.0130
2021-08-13 20:14:59,718 - mmseg - INFO - Iter [34350/160000]	lr: 8.065e-03, eta: 1 day, 8:27:17, time: 0.860, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0522, decode.acc_seg: 52.0526, loss: 1.0522
2021-08-13 20:15:42,172 - mmseg - INFO - Iter [34400/160000]	lr: 8.062e-03, eta: 1 day, 8:26:16, time: 0.849, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0281, decode.acc_seg: 53.1619, loss: 1.0281
2021-08-13 20:16:25,311 - mmseg - INFO - Iter [34450/160000]	lr: 8.059e-03, eta: 1 day, 8:25:17, time: 0.863, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0326, decode.acc_seg: 52.3892, loss: 1.0326
2021-08-13 20:17:08,240 - mmseg - INFO - Iter [34500/160000]	lr: 8.056e-03, eta: 1 day, 8:24:18, time: 0.859, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0712, decode.acc_seg: 52.3798, loss: 1.0712
2021-08-13 20:17:51,122 - mmseg - INFO - Iter [34550/160000]	lr: 8.053e-03, eta: 1 day, 8:23:18, time: 0.858, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0491, decode.acc_seg: 52.6074, loss: 1.0491
2021-08-13 20:18:34,021 - mmseg - INFO - Iter [34600/160000]	lr: 8.051e-03, eta: 1 day, 8:22:19, time: 0.858, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0343, decode.acc_seg: 53.3180, loss: 1.0343
2021-08-13 20:19:16,754 - mmseg - INFO - Iter [34650/160000]	lr: 8.048e-03, eta: 1 day, 8:21:19, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9653, decode.acc_seg: 53.9844, loss: 0.9653
2021-08-13 20:19:59,605 - mmseg - INFO - Iter [34700/160000]	lr: 8.045e-03, eta: 1 day, 8:20:20, time: 0.858, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0742, decode.acc_seg: 52.0870, loss: 1.0742
2021-08-13 20:21:16,528 - mmseg - INFO - Iter [34750/160000]	lr: 8.042e-03, eta: 1 day, 8:21:23, time: 1.538, data_time: 0.659, memory: 8535, decode.loss_seg: 1.0070, decode.acc_seg: 52.7584, loss: 1.0070
2021-08-13 20:21:59,297 - mmseg - INFO - Iter [34800/160000]	lr: 8.039e-03, eta: 1 day, 8:20:23, time: 0.855, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0263, decode.acc_seg: 53.5365, loss: 1.0263
2021-08-13 20:22:42,167 - mmseg - INFO - Iter [34850/160000]	lr: 8.036e-03, eta: 1 day, 8:19:24, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0081, decode.acc_seg: 52.3618, loss: 1.0081
2021-08-13 20:23:25,192 - mmseg - INFO - Iter [34900/160000]	lr: 8.033e-03, eta: 1 day, 8:18:25, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0421, decode.acc_seg: 53.4821, loss: 1.0421
2021-08-13 20:24:08,982 - mmseg - INFO - Iter [34950/160000]	lr: 8.031e-03, eta: 1 day, 8:17:28, time: 0.876, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0189, decode.acc_seg: 53.1240, loss: 1.0189
2021-08-13 20:24:54,024 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 20:24:54,024 - mmseg - INFO - Iter [35000/160000]	lr: 8.028e-03, eta: 1 day, 8:16:37, time: 0.900, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0393, decode.acc_seg: 52.9511, loss: 1.0393
2021-08-13 20:25:38,090 - mmseg - INFO - Iter [35050/160000]	lr: 8.025e-03, eta: 1 day, 8:15:42, time: 0.882, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0387, decode.acc_seg: 51.6199, loss: 1.0387
2021-08-13 20:26:21,156 - mmseg - INFO - Iter [35100/160000]	lr: 8.022e-03, eta: 1 day, 8:14:43, time: 0.861, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0157, decode.acc_seg: 52.8381, loss: 1.0157
2021-08-13 20:27:03,902 - mmseg - INFO - Iter [35150/160000]	lr: 8.019e-03, eta: 1 day, 8:13:43, time: 0.855, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0586, decode.acc_seg: 52.9500, loss: 1.0586
2021-08-13 20:27:46,548 - mmseg - INFO - Iter [35200/160000]	lr: 8.016e-03, eta: 1 day, 8:12:43, time: 0.853, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0589, decode.acc_seg: 53.1746, loss: 1.0589
2021-08-13 20:28:29,208 - mmseg - INFO - Iter [35250/160000]	lr: 8.013e-03, eta: 1 day, 8:11:44, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0263, decode.acc_seg: 53.3833, loss: 1.0263
2021-08-13 20:29:11,999 - mmseg - INFO - Iter [35300/160000]	lr: 8.011e-03, eta: 1 day, 8:10:44, time: 0.855, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0352, decode.acc_seg: 52.4227, loss: 1.0352
2021-08-13 20:30:28,866 - mmseg - INFO - Iter [35350/160000]	lr: 8.008e-03, eta: 1 day, 8:11:45, time: 1.537, data_time: 0.671, memory: 8535, decode.loss_seg: 1.0556, decode.acc_seg: 52.4543, loss: 1.0556
2021-08-13 20:31:12,272 - mmseg - INFO - Iter [35400/160000]	lr: 8.005e-03, eta: 1 day, 8:10:48, time: 0.869, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0297, decode.acc_seg: 53.5412, loss: 1.0297
2021-08-13 20:31:55,513 - mmseg - INFO - Iter [35450/160000]	lr: 8.002e-03, eta: 1 day, 8:09:50, time: 0.865, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0474, decode.acc_seg: 52.1273, loss: 1.0474
2021-08-13 20:32:38,975 - mmseg - INFO - Iter [35500/160000]	lr: 7.999e-03, eta: 1 day, 8:08:53, time: 0.869, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0457, decode.acc_seg: 52.9607, loss: 1.0457
2021-08-13 20:33:21,714 - mmseg - INFO - Iter [35550/160000]	lr: 7.996e-03, eta: 1 day, 8:07:53, time: 0.855, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0028, decode.acc_seg: 52.8187, loss: 1.0028
2021-08-13 20:34:05,242 - mmseg - INFO - Iter [35600/160000]	lr: 7.993e-03, eta: 1 day, 8:06:56, time: 0.871, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0595, decode.acc_seg: 51.8818, loss: 1.0595
2021-08-13 20:34:48,792 - mmseg - INFO - Iter [35650/160000]	lr: 7.991e-03, eta: 1 day, 8:06:00, time: 0.871, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0515, decode.acc_seg: 52.1641, loss: 1.0515
2021-08-13 20:35:32,040 - mmseg - INFO - Iter [35700/160000]	lr: 7.988e-03, eta: 1 day, 8:05:02, time: 0.865, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0065, decode.acc_seg: 53.5309, loss: 1.0065
2021-08-13 20:36:14,601 - mmseg - INFO - Iter [35750/160000]	lr: 7.985e-03, eta: 1 day, 8:04:02, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0294, decode.acc_seg: 52.3718, loss: 1.0294
2021-08-13 20:36:57,312 - mmseg - INFO - Iter [35800/160000]	lr: 7.982e-03, eta: 1 day, 8:03:02, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0438, decode.acc_seg: 52.9283, loss: 1.0438
2021-08-13 20:37:41,227 - mmseg - INFO - Iter [35850/160000]	lr: 7.979e-03, eta: 1 day, 8:02:07, time: 0.878, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0327, decode.acc_seg: 53.2260, loss: 1.0327
2021-08-13 20:38:24,806 - mmseg - INFO - Iter [35900/160000]	lr: 7.976e-03, eta: 1 day, 8:01:11, time: 0.872, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0388, decode.acc_seg: 52.6472, loss: 1.0388
2021-08-13 20:39:07,654 - mmseg - INFO - Iter [35950/160000]	lr: 7.973e-03, eta: 1 day, 8:00:12, time: 0.856, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0438, decode.acc_seg: 52.4092, loss: 1.0438
2021-08-13 20:40:27,065 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 20:40:27,074 - mmseg - INFO - Iter [36000/160000]	lr: 7.971e-03, eta: 1 day, 8:01:19, time: 1.589, data_time: 0.744, memory: 8535, decode.loss_seg: 1.0231, decode.acc_seg: 52.0053, loss: 1.0231
2021-08-13 20:41:10,123 - mmseg - INFO - Iter [36050/160000]	lr: 7.968e-03, eta: 1 day, 8:00:21, time: 0.861, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0698, decode.acc_seg: 52.8854, loss: 1.0698
2021-08-13 20:41:53,779 - mmseg - INFO - Iter [36100/160000]	lr: 7.965e-03, eta: 1 day, 7:59:25, time: 0.873, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0046, decode.acc_seg: 54.0730, loss: 1.0046
2021-08-13 20:42:37,373 - mmseg - INFO - Iter [36150/160000]	lr: 7.962e-03, eta: 1 day, 7:58:28, time: 0.872, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0070, decode.acc_seg: 53.2494, loss: 1.0070
2021-08-13 20:43:20,506 - mmseg - INFO - Iter [36200/160000]	lr: 7.959e-03, eta: 1 day, 7:57:30, time: 0.863, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9915, decode.acc_seg: 53.2870, loss: 0.9915
2021-08-13 20:44:03,598 - mmseg - INFO - Iter [36250/160000]	lr: 7.956e-03, eta: 1 day, 7:56:32, time: 0.861, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0209, decode.acc_seg: 52.9833, loss: 1.0209
2021-08-13 20:44:45,992 - mmseg - INFO - Iter [36300/160000]	lr: 7.953e-03, eta: 1 day, 7:55:32, time: 0.848, data_time: 0.011, memory: 8535, decode.loss_seg: 1.1048, decode.acc_seg: 52.1923, loss: 1.1048
2021-08-13 20:45:28,500 - mmseg - INFO - Iter [36350/160000]	lr: 7.951e-03, eta: 1 day, 7:54:32, time: 0.850, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0433, decode.acc_seg: 53.1296, loss: 1.0433
2021-08-13 20:46:10,889 - mmseg - INFO - Iter [36400/160000]	lr: 7.948e-03, eta: 1 day, 7:53:32, time: 0.847, data_time: 0.010, memory: 8535, decode.loss_seg: 0.9989, decode.acc_seg: 52.7372, loss: 0.9989
2021-08-13 20:46:54,065 - mmseg - INFO - Iter [36450/160000]	lr: 7.945e-03, eta: 1 day, 7:52:34, time: 0.864, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0213, decode.acc_seg: 52.7163, loss: 1.0213
2021-08-13 20:47:39,605 - mmseg - INFO - Iter [36500/160000]	lr: 7.942e-03, eta: 1 day, 7:51:45, time: 0.911, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0321, decode.acc_seg: 52.8970, loss: 1.0321
2021-08-13 20:48:23,536 - mmseg - INFO - Iter [36550/160000]	lr: 7.939e-03, eta: 1 day, 7:50:50, time: 0.879, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0339, decode.acc_seg: 52.7158, loss: 1.0339
2021-08-13 20:49:43,774 - mmseg - INFO - Iter [36600/160000]	lr: 7.936e-03, eta: 1 day, 7:51:58, time: 1.605, data_time: 0.665, memory: 8535, decode.loss_seg: 1.0394, decode.acc_seg: 53.1456, loss: 1.0394
2021-08-13 20:50:26,272 - mmseg - INFO - Iter [36650/160000]	lr: 7.933e-03, eta: 1 day, 7:50:58, time: 0.850, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0118, decode.acc_seg: 53.3196, loss: 1.0118
2021-08-13 20:51:09,146 - mmseg - INFO - Iter [36700/160000]	lr: 7.931e-03, eta: 1 day, 7:49:59, time: 0.857, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0106, decode.acc_seg: 53.7888, loss: 1.0106
2021-08-13 20:51:52,132 - mmseg - INFO - Iter [36750/160000]	lr: 7.928e-03, eta: 1 day, 7:49:01, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9851, decode.acc_seg: 53.7528, loss: 0.9851
2021-08-13 20:52:34,859 - mmseg - INFO - Iter [36800/160000]	lr: 7.925e-03, eta: 1 day, 7:48:02, time: 0.855, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0658, decode.acc_seg: 53.1973, loss: 1.0658
2021-08-13 20:53:17,251 - mmseg - INFO - Iter [36850/160000]	lr: 7.922e-03, eta: 1 day, 7:47:02, time: 0.848, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0661, decode.acc_seg: 52.1232, loss: 1.0661
2021-08-13 20:54:00,717 - mmseg - INFO - Iter [36900/160000]	lr: 7.919e-03, eta: 1 day, 7:46:06, time: 0.869, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0375, decode.acc_seg: 52.6098, loss: 1.0375
2021-08-13 20:54:43,112 - mmseg - INFO - Iter [36950/160000]	lr: 7.916e-03, eta: 1 day, 7:45:06, time: 0.848, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0217, decode.acc_seg: 53.7716, loss: 1.0217
2021-08-13 20:55:26,179 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 20:55:26,180 - mmseg - INFO - Iter [37000/160000]	lr: 7.913e-03, eta: 1 day, 7:44:08, time: 0.861, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0224, decode.acc_seg: 52.7112, loss: 1.0224
2021-08-13 20:56:09,132 - mmseg - INFO - Iter [37050/160000]	lr: 7.911e-03, eta: 1 day, 7:43:10, time: 0.859, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0310, decode.acc_seg: 52.5809, loss: 1.0310
2021-08-13 20:56:51,443 - mmseg - INFO - Iter [37100/160000]	lr: 7.908e-03, eta: 1 day, 7:42:10, time: 0.847, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0303, decode.acc_seg: 53.2617, loss: 1.0303
2021-08-13 20:57:34,273 - mmseg - INFO - Iter [37150/160000]	lr: 7.905e-03, eta: 1 day, 7:41:11, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0165, decode.acc_seg: 51.8200, loss: 1.0165
2021-08-13 20:58:17,921 - mmseg - INFO - Iter [37200/160000]	lr: 7.902e-03, eta: 1 day, 7:40:16, time: 0.873, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0730, decode.acc_seg: 52.8393, loss: 1.0730
2021-08-13 20:59:36,797 - mmseg - INFO - Iter [37250/160000]	lr: 7.899e-03, eta: 1 day, 7:41:16, time: 1.577, data_time: 0.735, memory: 8535, decode.loss_seg: 1.0082, decode.acc_seg: 52.7857, loss: 1.0082
2021-08-13 21:00:19,575 - mmseg - INFO - Iter [37300/160000]	lr: 7.896e-03, eta: 1 day, 7:40:18, time: 0.855, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0152, decode.acc_seg: 52.8927, loss: 1.0152
2021-08-13 21:01:02,463 - mmseg - INFO - Iter [37350/160000]	lr: 7.893e-03, eta: 1 day, 7:39:19, time: 0.858, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0142, decode.acc_seg: 53.3082, loss: 1.0142
2021-08-13 21:01:44,880 - mmseg - INFO - Iter [37400/160000]	lr: 7.891e-03, eta: 1 day, 7:38:20, time: 0.848, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0330, decode.acc_seg: 54.0007, loss: 1.0330
2021-08-13 21:02:27,263 - mmseg - INFO - Iter [37450/160000]	lr: 7.888e-03, eta: 1 day, 7:37:20, time: 0.848, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0505, decode.acc_seg: 53.1609, loss: 1.0505
2021-08-13 21:03:09,851 - mmseg - INFO - Iter [37500/160000]	lr: 7.885e-03, eta: 1 day, 7:36:21, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0181, decode.acc_seg: 52.9232, loss: 1.0181
2021-08-13 21:03:52,368 - mmseg - INFO - Iter [37550/160000]	lr: 7.882e-03, eta: 1 day, 7:35:22, time: 0.850, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9850, decode.acc_seg: 54.0251, loss: 0.9850
2021-08-13 21:04:35,682 - mmseg - INFO - Iter [37600/160000]	lr: 7.879e-03, eta: 1 day, 7:34:25, time: 0.867, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0202, decode.acc_seg: 52.9124, loss: 1.0202
2021-08-13 21:05:18,234 - mmseg - INFO - Iter [37650/160000]	lr: 7.876e-03, eta: 1 day, 7:33:26, time: 0.851, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0213, decode.acc_seg: 53.0864, loss: 1.0213
2021-08-13 21:05:59,442 - mmseg - INFO - Iter [37700/160000]	lr: 7.873e-03, eta: 1 day, 7:32:23, time: 0.824, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0157, decode.acc_seg: 52.8806, loss: 1.0157
2021-08-13 21:06:42,225 - mmseg - INFO - Iter [37750/160000]	lr: 7.871e-03, eta: 1 day, 7:31:24, time: 0.856, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0430, decode.acc_seg: 52.9817, loss: 1.0430
2021-08-13 21:07:24,858 - mmseg - INFO - Iter [37800/160000]	lr: 7.868e-03, eta: 1 day, 7:30:26, time: 0.853, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0185, decode.acc_seg: 53.8335, loss: 1.0185
2021-08-13 21:08:08,514 - mmseg - INFO - Iter [37850/160000]	lr: 7.865e-03, eta: 1 day, 7:29:31, time: 0.873, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0439, decode.acc_seg: 52.2745, loss: 1.0439
2021-08-13 21:09:26,919 - mmseg - INFO - Iter [37900/160000]	lr: 7.862e-03, eta: 1 day, 7:30:27, time: 1.568, data_time: 0.685, memory: 8535, decode.loss_seg: 0.9815, decode.acc_seg: 52.9940, loss: 0.9815
2021-08-13 21:10:12,228 - mmseg - INFO - Iter [37950/160000]	lr: 7.859e-03, eta: 1 day, 7:29:37, time: 0.907, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0080, decode.acc_seg: 52.6449, loss: 1.0080
2021-08-13 21:10:55,756 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 21:10:55,756 - mmseg - INFO - Iter [38000/160000]	lr: 7.856e-03, eta: 1 day, 7:28:41, time: 0.871, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0278, decode.acc_seg: 53.1759, loss: 1.0278
2021-08-13 21:11:38,017 - mmseg - INFO - Iter [38050/160000]	lr: 7.853e-03, eta: 1 day, 7:27:41, time: 0.845, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0182, decode.acc_seg: 54.1502, loss: 1.0182
2021-08-13 21:12:19,811 - mmseg - INFO - Iter [38100/160000]	lr: 7.851e-03, eta: 1 day, 7:26:40, time: 0.835, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0045, decode.acc_seg: 53.8934, loss: 1.0045
2021-08-13 21:13:02,483 - mmseg - INFO - Iter [38150/160000]	lr: 7.848e-03, eta: 1 day, 7:25:42, time: 0.854, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0156, decode.acc_seg: 53.9012, loss: 1.0156
2021-08-13 21:13:44,636 - mmseg - INFO - Iter [38200/160000]	lr: 7.845e-03, eta: 1 day, 7:24:42, time: 0.842, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0363, decode.acc_seg: 52.7845, loss: 1.0363
2021-08-13 21:14:29,275 - mmseg - INFO - Iter [38250/160000]	lr: 7.842e-03, eta: 1 day, 7:23:49, time: 0.893, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0044, decode.acc_seg: 52.3452, loss: 1.0044
2021-08-13 21:15:12,309 - mmseg - INFO - Iter [38300/160000]	lr: 7.839e-03, eta: 1 day, 7:22:52, time: 0.861, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0087, decode.acc_seg: 53.9231, loss: 1.0087
2021-08-13 21:15:56,987 - mmseg - INFO - Iter [38350/160000]	lr: 7.836e-03, eta: 1 day, 7:22:00, time: 0.893, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0336, decode.acc_seg: 53.3429, loss: 1.0336
2021-08-13 21:16:41,358 - mmseg - INFO - Iter [38400/160000]	lr: 7.833e-03, eta: 1 day, 7:21:08, time: 0.888, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0324, decode.acc_seg: 53.0803, loss: 1.0324
2021-08-13 21:17:24,559 - mmseg - INFO - Iter [38450/160000]	lr: 7.831e-03, eta: 1 day, 7:20:11, time: 0.864, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0173, decode.acc_seg: 53.9309, loss: 1.0173
2021-08-13 21:18:45,433 - mmseg - INFO - Iter [38500/160000]	lr: 7.828e-03, eta: 1 day, 7:21:13, time: 1.617, data_time: 0.697, memory: 8535, decode.loss_seg: 1.0500, decode.acc_seg: 51.7713, loss: 1.0500
2021-08-13 21:19:28,797 - mmseg - INFO - Iter [38550/160000]	lr: 7.825e-03, eta: 1 day, 7:20:17, time: 0.868, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9510, decode.acc_seg: 53.8288, loss: 0.9510
2021-08-13 21:20:13,302 - mmseg - INFO - Iter [38600/160000]	lr: 7.822e-03, eta: 1 day, 7:19:25, time: 0.889, data_time: 0.010, memory: 8535, decode.loss_seg: 0.9920, decode.acc_seg: 53.0295, loss: 0.9920
2021-08-13 21:20:56,264 - mmseg - INFO - Iter [38650/160000]	lr: 7.819e-03, eta: 1 day, 7:18:27, time: 0.860, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9658, decode.acc_seg: 53.7461, loss: 0.9658
2021-08-13 21:21:39,643 - mmseg - INFO - Iter [38700/160000]	lr: 7.816e-03, eta: 1 day, 7:17:31, time: 0.867, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0297, decode.acc_seg: 53.1362, loss: 1.0297
2021-08-13 21:22:22,727 - mmseg - INFO - Iter [38750/160000]	lr: 7.813e-03, eta: 1 day, 7:16:34, time: 0.862, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0194, decode.acc_seg: 53.2853, loss: 1.0194
2021-08-13 21:23:07,652 - mmseg - INFO - Iter [38800/160000]	lr: 7.811e-03, eta: 1 day, 7:15:43, time: 0.898, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0393, decode.acc_seg: 53.5244, loss: 1.0393
2021-08-13 21:23:52,831 - mmseg - INFO - Iter [38850/160000]	lr: 7.808e-03, eta: 1 day, 7:14:53, time: 0.904, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0306, decode.acc_seg: 53.3619, loss: 1.0306
2021-08-13 21:24:35,237 - mmseg - INFO - Iter [38900/160000]	lr: 7.805e-03, eta: 1 day, 7:13:54, time: 0.848, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0422, decode.acc_seg: 52.1751, loss: 1.0422
2021-08-13 21:25:17,900 - mmseg - INFO - Iter [38950/160000]	lr: 7.802e-03, eta: 1 day, 7:12:56, time: 0.854, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0695, decode.acc_seg: 51.6111, loss: 1.0695
2021-08-13 21:26:01,621 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 21:26:01,622 - mmseg - INFO - Iter [39000/160000]	lr: 7.799e-03, eta: 1 day, 7:12:01, time: 0.874, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0123, decode.acc_seg: 52.8454, loss: 1.0123
2021-08-13 21:26:45,153 - mmseg - INFO - Iter [39050/160000]	lr: 7.796e-03, eta: 1 day, 7:11:06, time: 0.871, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0016, decode.acc_seg: 52.4338, loss: 1.0016
2021-08-13 21:27:28,025 - mmseg - INFO - Iter [39100/160000]	lr: 7.793e-03, eta: 1 day, 7:10:08, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0305, decode.acc_seg: 52.3685, loss: 1.0305
2021-08-13 21:28:46,848 - mmseg - INFO - Iter [39150/160000]	lr: 7.790e-03, eta: 1 day, 7:11:02, time: 1.576, data_time: 0.709, memory: 8535, decode.loss_seg: 1.0191, decode.acc_seg: 52.2635, loss: 1.0191
2021-08-13 21:29:29,646 - mmseg - INFO - Iter [39200/160000]	lr: 7.788e-03, eta: 1 day, 7:10:04, time: 0.856, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0361, decode.acc_seg: 53.2382, loss: 1.0361
2021-08-13 21:30:12,271 - mmseg - INFO - Iter [39250/160000]	lr: 7.785e-03, eta: 1 day, 7:09:06, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9921, decode.acc_seg: 53.8930, loss: 0.9921
2021-08-13 21:30:55,831 - mmseg - INFO - Iter [39300/160000]	lr: 7.782e-03, eta: 1 day, 7:08:11, time: 0.871, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9991, decode.acc_seg: 53.7431, loss: 0.9991
2021-08-13 21:31:38,754 - mmseg - INFO - Iter [39350/160000]	lr: 7.779e-03, eta: 1 day, 7:07:14, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0066, decode.acc_seg: 53.3502, loss: 1.0066
2021-08-13 21:32:22,056 - mmseg - INFO - Iter [39400/160000]	lr: 7.776e-03, eta: 1 day, 7:06:18, time: 0.866, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0197, decode.acc_seg: 53.7811, loss: 1.0197
2021-08-13 21:33:04,597 - mmseg - INFO - Iter [39450/160000]	lr: 7.773e-03, eta: 1 day, 7:05:19, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0229, decode.acc_seg: 53.7673, loss: 1.0229
2021-08-13 21:33:48,675 - mmseg - INFO - Iter [39500/160000]	lr: 7.770e-03, eta: 1 day, 7:04:26, time: 0.881, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0271, decode.acc_seg: 52.3500, loss: 1.0271
2021-08-13 21:34:32,679 - mmseg - INFO - Iter [39550/160000]	lr: 7.768e-03, eta: 1 day, 7:03:32, time: 0.880, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0460, decode.acc_seg: 52.3726, loss: 1.0460
2021-08-13 21:35:17,466 - mmseg - INFO - Iter [39600/160000]	lr: 7.765e-03, eta: 1 day, 7:02:41, time: 0.895, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0092, decode.acc_seg: 53.5626, loss: 1.0092
2021-08-13 21:36:01,934 - mmseg - INFO - Iter [39650/160000]	lr: 7.762e-03, eta: 1 day, 7:01:48, time: 0.890, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0135, decode.acc_seg: 53.4437, loss: 1.0135
2021-08-13 21:36:44,882 - mmseg - INFO - Iter [39700/160000]	lr: 7.759e-03, eta: 1 day, 7:00:51, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0498, decode.acc_seg: 52.5425, loss: 1.0498
2021-08-13 21:37:26,338 - mmseg - INFO - Iter [39750/160000]	lr: 7.756e-03, eta: 1 day, 6:59:50, time: 0.829, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0277, decode.acc_seg: 52.2571, loss: 1.0277
2021-08-13 21:38:44,939 - mmseg - INFO - Iter [39800/160000]	lr: 7.753e-03, eta: 1 day, 7:00:41, time: 1.572, data_time: 0.704, memory: 8535, decode.loss_seg: 0.9800, decode.acc_seg: 53.8954, loss: 0.9800
2021-08-13 21:39:28,771 - mmseg - INFO - Iter [39850/160000]	lr: 7.750e-03, eta: 1 day, 6:59:47, time: 0.876, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0287, decode.acc_seg: 52.5324, loss: 1.0287
2021-08-13 21:40:12,504 - mmseg - INFO - Iter [39900/160000]	lr: 7.747e-03, eta: 1 day, 6:58:52, time: 0.875, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0277, decode.acc_seg: 53.4829, loss: 1.0277
2021-08-13 21:40:57,214 - mmseg - INFO - Iter [39950/160000]	lr: 7.745e-03, eta: 1 day, 6:58:00, time: 0.893, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0143, decode.acc_seg: 53.6445, loss: 1.0143
2021-08-13 21:41:42,067 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 21:41:42,068 - mmseg - INFO - Iter [40000/160000]	lr: 7.742e-03, eta: 1 day, 6:57:09, time: 0.898, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0252, decode.acc_seg: 53.3192, loss: 1.0252
2021-08-13 21:42:24,567 - mmseg - INFO - Iter [40050/160000]	lr: 7.739e-03, eta: 1 day, 6:56:11, time: 0.851, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0053, decode.acc_seg: 53.8956, loss: 1.0053
2021-08-13 21:43:07,972 - mmseg - INFO - Iter [40100/160000]	lr: 7.736e-03, eta: 1 day, 6:55:16, time: 0.868, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0206, decode.acc_seg: 52.9442, loss: 1.0206
2021-08-13 21:43:52,078 - mmseg - INFO - Iter [40150/160000]	lr: 7.733e-03, eta: 1 day, 6:54:22, time: 0.882, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0351, decode.acc_seg: 53.3372, loss: 1.0351
2021-08-13 21:44:37,320 - mmseg - INFO - Iter [40200/160000]	lr: 7.730e-03, eta: 1 day, 6:53:32, time: 0.905, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9845, decode.acc_seg: 53.4822, loss: 0.9845
2021-08-13 21:45:22,276 - mmseg - INFO - Iter [40250/160000]	lr: 7.727e-03, eta: 1 day, 6:52:42, time: 0.900, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0341, decode.acc_seg: 53.2135, loss: 1.0341
2021-08-13 21:46:04,323 - mmseg - INFO - Iter [40300/160000]	lr: 7.725e-03, eta: 1 day, 6:51:42, time: 0.841, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0436, decode.acc_seg: 52.8257, loss: 1.0436
2021-08-13 21:46:47,439 - mmseg - INFO - Iter [40350/160000]	lr: 7.722e-03, eta: 1 day, 6:50:46, time: 0.862, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0022, decode.acc_seg: 53.2655, loss: 1.0022
2021-08-13 21:48:06,481 - mmseg - INFO - Iter [40400/160000]	lr: 7.719e-03, eta: 1 day, 6:51:36, time: 1.581, data_time: 0.702, memory: 8535, decode.loss_seg: 1.0109, decode.acc_seg: 52.4377, loss: 1.0109
2021-08-13 21:48:50,472 - mmseg - INFO - Iter [40450/160000]	lr: 7.716e-03, eta: 1 day, 6:50:43, time: 0.881, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0217, decode.acc_seg: 53.2380, loss: 1.0217
2021-08-13 21:49:33,964 - mmseg - INFO - Iter [40500/160000]	lr: 7.713e-03, eta: 1 day, 6:49:47, time: 0.870, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9959, decode.acc_seg: 53.7807, loss: 0.9959
2021-08-13 21:50:17,464 - mmseg - INFO - Iter [40550/160000]	lr: 7.710e-03, eta: 1 day, 6:48:52, time: 0.870, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0283, decode.acc_seg: 53.6344, loss: 1.0283
2021-08-13 21:51:01,086 - mmseg - INFO - Iter [40600/160000]	lr: 7.707e-03, eta: 1 day, 6:47:58, time: 0.872, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0027, decode.acc_seg: 52.9732, loss: 1.0027
2021-08-13 21:51:44,168 - mmseg - INFO - Iter [40650/160000]	lr: 7.705e-03, eta: 1 day, 6:47:01, time: 0.862, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0191, decode.acc_seg: 52.9455, loss: 1.0191
2021-08-13 21:52:28,750 - mmseg - INFO - Iter [40700/160000]	lr: 7.702e-03, eta: 1 day, 6:46:09, time: 0.891, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0008, decode.acc_seg: 53.1924, loss: 1.0008
2021-08-13 21:53:13,450 - mmseg - INFO - Iter [40750/160000]	lr: 7.699e-03, eta: 1 day, 6:45:18, time: 0.895, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0116, decode.acc_seg: 53.7735, loss: 1.0116
2021-08-13 21:53:55,631 - mmseg - INFO - Iter [40800/160000]	lr: 7.696e-03, eta: 1 day, 6:44:19, time: 0.844, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0353, decode.acc_seg: 52.9670, loss: 1.0353
2021-08-13 21:54:37,649 - mmseg - INFO - Iter [40850/160000]	lr: 7.693e-03, eta: 1 day, 6:43:20, time: 0.840, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0268, decode.acc_seg: 52.8532, loss: 1.0268
2021-08-13 21:55:20,388 - mmseg - INFO - Iter [40900/160000]	lr: 7.690e-03, eta: 1 day, 6:42:23, time: 0.855, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0542, decode.acc_seg: 53.3030, loss: 1.0542
2021-08-13 21:56:03,616 - mmseg - INFO - Iter [40950/160000]	lr: 7.687e-03, eta: 1 day, 6:41:27, time: 0.865, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0192, decode.acc_seg: 54.1091, loss: 1.0192
2021-08-13 21:56:46,521 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 21:56:46,521 - mmseg - INFO - Iter [41000/160000]	lr: 7.684e-03, eta: 1 day, 6:40:31, time: 0.858, data_time: 0.013, memory: 8535, decode.loss_seg: 0.9984, decode.acc_seg: 53.4101, loss: 0.9984
2021-08-13 21:58:05,076 - mmseg - INFO - Iter [41050/160000]	lr: 7.682e-03, eta: 1 day, 6:41:17, time: 1.571, data_time: 0.730, memory: 8535, decode.loss_seg: 0.9930, decode.acc_seg: 54.5725, loss: 0.9930
2021-08-13 21:58:48,459 - mmseg - INFO - Iter [41100/160000]	lr: 7.679e-03, eta: 1 day, 6:40:22, time: 0.866, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9698, decode.acc_seg: 54.0242, loss: 0.9698
2021-08-13 21:59:33,730 - mmseg - INFO - Iter [41150/160000]	lr: 7.676e-03, eta: 1 day, 6:39:32, time: 0.907, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0282, decode.acc_seg: 53.4377, loss: 1.0282
2021-08-13 22:00:16,191 - mmseg - INFO - Iter [41200/160000]	lr: 7.673e-03, eta: 1 day, 6:38:34, time: 0.849, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0102, decode.acc_seg: 54.1731, loss: 1.0102
2021-08-13 22:00:58,594 - mmseg - INFO - Iter [41250/160000]	lr: 7.670e-03, eta: 1 day, 6:37:36, time: 0.848, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0264, decode.acc_seg: 53.7735, loss: 1.0264
2021-08-13 22:01:41,416 - mmseg - INFO - Iter [41300/160000]	lr: 7.667e-03, eta: 1 day, 6:36:40, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9880, decode.acc_seg: 53.4609, loss: 0.9880
2021-08-13 22:02:25,549 - mmseg - INFO - Iter [41350/160000]	lr: 7.664e-03, eta: 1 day, 6:35:47, time: 0.882, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0022, decode.acc_seg: 53.7594, loss: 1.0022
2021-08-13 22:03:08,337 - mmseg - INFO - Iter [41400/160000]	lr: 7.661e-03, eta: 1 day, 6:34:50, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0284, decode.acc_seg: 52.6615, loss: 1.0284
2021-08-13 22:03:51,429 - mmseg - INFO - Iter [41450/160000]	lr: 7.659e-03, eta: 1 day, 6:33:54, time: 0.862, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0365, decode.acc_seg: 52.4180, loss: 1.0365
2021-08-13 22:04:34,549 - mmseg - INFO - Iter [41500/160000]	lr: 7.656e-03, eta: 1 day, 6:32:58, time: 0.863, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0325, decode.acc_seg: 53.0198, loss: 1.0325
2021-08-13 22:05:17,937 - mmseg - INFO - Iter [41550/160000]	lr: 7.653e-03, eta: 1 day, 6:32:03, time: 0.867, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9921, decode.acc_seg: 53.1017, loss: 0.9921
2021-08-13 22:06:00,422 - mmseg - INFO - Iter [41600/160000]	lr: 7.650e-03, eta: 1 day, 6:31:06, time: 0.851, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0295, decode.acc_seg: 53.4813, loss: 1.0295
2021-08-13 22:07:18,073 - mmseg - INFO - Iter [41650/160000]	lr: 7.647e-03, eta: 1 day, 6:31:48, time: 1.553, data_time: 0.672, memory: 8535, decode.loss_seg: 1.0202, decode.acc_seg: 53.2826, loss: 1.0202
2021-08-13 22:08:01,712 - mmseg - INFO - Iter [41700/160000]	lr: 7.644e-03, eta: 1 day, 6:30:54, time: 0.873, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9614, decode.acc_seg: 53.7225, loss: 0.9614
2021-08-13 22:08:44,928 - mmseg - INFO - Iter [41750/160000]	lr: 7.641e-03, eta: 1 day, 6:29:58, time: 0.864, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9778, decode.acc_seg: 55.0411, loss: 0.9778
2021-08-13 22:09:28,206 - mmseg - INFO - Iter [41800/160000]	lr: 7.639e-03, eta: 1 day, 6:29:03, time: 0.865, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9712, decode.acc_seg: 54.1506, loss: 0.9712
2021-08-13 22:10:10,171 - mmseg - INFO - Iter [41850/160000]	lr: 7.636e-03, eta: 1 day, 6:28:04, time: 0.840, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0360, decode.acc_seg: 53.3204, loss: 1.0360
2021-08-13 22:10:53,836 - mmseg - INFO - Iter [41900/160000]	lr: 7.633e-03, eta: 1 day, 6:27:10, time: 0.873, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0220, decode.acc_seg: 52.4497, loss: 1.0220
2021-08-13 22:11:36,315 - mmseg - INFO - Iter [41950/160000]	lr: 7.630e-03, eta: 1 day, 6:26:12, time: 0.849, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0367, decode.acc_seg: 52.5972, loss: 1.0367
2021-08-13 22:12:19,289 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 22:12:19,289 - mmseg - INFO - Iter [42000/160000]	lr: 7.627e-03, eta: 1 day, 6:25:16, time: 0.860, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0080, decode.acc_seg: 52.6892, loss: 1.0080
2021-08-13 22:13:02,865 - mmseg - INFO - Iter [42050/160000]	lr: 7.624e-03, eta: 1 day, 6:24:22, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9833, decode.acc_seg: 52.9214, loss: 0.9833
2021-08-13 22:13:46,114 - mmseg - INFO - Iter [42100/160000]	lr: 7.621e-03, eta: 1 day, 6:23:26, time: 0.865, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0172, decode.acc_seg: 52.6880, loss: 1.0172
2021-08-13 22:14:28,978 - mmseg - INFO - Iter [42150/160000]	lr: 7.618e-03, eta: 1 day, 6:22:30, time: 0.857, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0016, decode.acc_seg: 53.2490, loss: 1.0016
2021-08-13 22:15:11,052 - mmseg - INFO - Iter [42200/160000]	lr: 7.616e-03, eta: 1 day, 6:21:32, time: 0.841, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0244, decode.acc_seg: 52.4995, loss: 1.0244
2021-08-13 22:15:53,622 - mmseg - INFO - Iter [42250/160000]	lr: 7.613e-03, eta: 1 day, 6:20:35, time: 0.852, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0486, decode.acc_seg: 52.4921, loss: 1.0486
2021-08-13 22:17:10,637 - mmseg - INFO - Iter [42300/160000]	lr: 7.610e-03, eta: 1 day, 6:21:13, time: 1.540, data_time: 0.706, memory: 8535, decode.loss_seg: 0.9961, decode.acc_seg: 53.0536, loss: 0.9961
2021-08-13 22:17:53,013 - mmseg - INFO - Iter [42350/160000]	lr: 7.607e-03, eta: 1 day, 6:20:16, time: 0.848, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9555, decode.acc_seg: 53.9067, loss: 0.9555
2021-08-13 22:18:36,345 - mmseg - INFO - Iter [42400/160000]	lr: 7.604e-03, eta: 1 day, 6:19:21, time: 0.867, data_time: 0.013, memory: 8535, decode.loss_seg: 0.9890, decode.acc_seg: 53.3044, loss: 0.9890
2021-08-13 22:19:18,369 - mmseg - INFO - Iter [42450/160000]	lr: 7.601e-03, eta: 1 day, 6:18:22, time: 0.841, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0261, decode.acc_seg: 52.4797, loss: 1.0261
2021-08-13 22:20:00,968 - mmseg - INFO - Iter [42500/160000]	lr: 7.598e-03, eta: 1 day, 6:17:25, time: 0.852, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0022, decode.acc_seg: 54.2855, loss: 1.0022
2021-08-13 22:20:43,463 - mmseg - INFO - Iter [42550/160000]	lr: 7.595e-03, eta: 1 day, 6:16:28, time: 0.850, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9934, decode.acc_seg: 53.7560, loss: 0.9934
2021-08-13 22:21:25,563 - mmseg - INFO - Iter [42600/160000]	lr: 7.593e-03, eta: 1 day, 6:15:30, time: 0.842, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0193, decode.acc_seg: 53.8152, loss: 1.0193
2021-08-13 22:22:08,907 - mmseg - INFO - Iter [42650/160000]	lr: 7.590e-03, eta: 1 day, 6:14:35, time: 0.866, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0052, decode.acc_seg: 53.3329, loss: 1.0052
2021-08-13 22:22:53,194 - mmseg - INFO - Iter [42700/160000]	lr: 7.587e-03, eta: 1 day, 6:13:43, time: 0.886, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0032, decode.acc_seg: 53.2865, loss: 1.0032
2021-08-13 22:23:38,718 - mmseg - INFO - Iter [42750/160000]	lr: 7.584e-03, eta: 1 day, 6:12:54, time: 0.910, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0017, decode.acc_seg: 53.8560, loss: 1.0017
2021-08-13 22:24:24,396 - mmseg - INFO - Iter [42800/160000]	lr: 7.581e-03, eta: 1 day, 6:12:06, time: 0.913, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9636, decode.acc_seg: 55.6314, loss: 0.9636
2021-08-13 22:25:10,054 - mmseg - INFO - Iter [42850/160000]	lr: 7.578e-03, eta: 1 day, 6:11:17, time: 0.914, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0338, decode.acc_seg: 53.3182, loss: 1.0338
2021-08-13 22:25:55,572 - mmseg - INFO - Iter [42900/160000]	lr: 7.575e-03, eta: 1 day, 6:10:29, time: 0.910, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0132, decode.acc_seg: 53.0112, loss: 1.0132
2021-08-13 22:27:14,394 - mmseg - INFO - Iter [42950/160000]	lr: 7.572e-03, eta: 1 day, 6:11:11, time: 1.577, data_time: 0.741, memory: 8535, decode.loss_seg: 0.9602, decode.acc_seg: 53.6358, loss: 0.9602
2021-08-13 22:27:58,061 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 22:27:58,061 - mmseg - INFO - Iter [43000/160000]	lr: 7.570e-03, eta: 1 day, 6:10:17, time: 0.873, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9510, decode.acc_seg: 54.6401, loss: 0.9510
2021-08-13 22:28:43,789 - mmseg - INFO - Iter [43050/160000]	lr: 7.567e-03, eta: 1 day, 6:09:28, time: 0.914, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9937, decode.acc_seg: 54.3414, loss: 0.9937
2021-08-13 22:29:28,401 - mmseg - INFO - Iter [43100/160000]	lr: 7.564e-03, eta: 1 day, 6:08:37, time: 0.893, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0092, decode.acc_seg: 52.8496, loss: 1.0092
2021-08-13 22:30:12,614 - mmseg - INFO - Iter [43150/160000]	lr: 7.561e-03, eta: 1 day, 6:07:45, time: 0.883, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9716, decode.acc_seg: 54.3314, loss: 0.9716
2021-08-13 22:30:58,045 - mmseg - INFO - Iter [43200/160000]	lr: 7.558e-03, eta: 1 day, 6:06:56, time: 0.909, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9966, decode.acc_seg: 54.5395, loss: 0.9966
2021-08-13 22:31:43,509 - mmseg - INFO - Iter [43250/160000]	lr: 7.555e-03, eta: 1 day, 6:06:07, time: 0.909, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0426, decode.acc_seg: 52.3563, loss: 1.0426
2021-08-13 22:32:27,308 - mmseg - INFO - Iter [43300/160000]	lr: 7.552e-03, eta: 1 day, 6:05:13, time: 0.876, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0328, decode.acc_seg: 53.4306, loss: 1.0328
2021-08-13 22:33:11,836 - mmseg - INFO - Iter [43350/160000]	lr: 7.549e-03, eta: 1 day, 6:04:22, time: 0.890, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0124, decode.acc_seg: 53.1629, loss: 1.0124
2021-08-13 22:33:55,853 - mmseg - INFO - Iter [43400/160000]	lr: 7.547e-03, eta: 1 day, 6:03:29, time: 0.881, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0541, decode.acc_seg: 52.5352, loss: 1.0541
2021-08-13 22:34:40,686 - mmseg - INFO - Iter [43450/160000]	lr: 7.544e-03, eta: 1 day, 6:02:38, time: 0.896, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0065, decode.acc_seg: 53.6007, loss: 1.0065
2021-08-13 22:35:26,208 - mmseg - INFO - Iter [43500/160000]	lr: 7.541e-03, eta: 1 day, 6:01:50, time: 0.910, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9954, decode.acc_seg: 54.4524, loss: 0.9954
2021-08-13 22:36:45,545 - mmseg - INFO - Iter [43550/160000]	lr: 7.538e-03, eta: 1 day, 6:02:31, time: 1.587, data_time: 0.732, memory: 8535, decode.loss_seg: 1.0076, decode.acc_seg: 53.7999, loss: 1.0076
2021-08-13 22:37:30,482 - mmseg - INFO - Iter [43600/160000]	lr: 7.535e-03, eta: 1 day, 6:01:41, time: 0.898, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9476, decode.acc_seg: 54.0314, loss: 0.9476
2021-08-13 22:38:13,929 - mmseg - INFO - Iter [43650/160000]	lr: 7.532e-03, eta: 1 day, 6:00:47, time: 0.869, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0070, decode.acc_seg: 53.0086, loss: 1.0070
2021-08-13 22:38:56,532 - mmseg - INFO - Iter [43700/160000]	lr: 7.529e-03, eta: 1 day, 5:59:50, time: 0.852, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9789, decode.acc_seg: 54.1899, loss: 0.9789
2021-08-13 22:39:39,350 - mmseg - INFO - Iter [43750/160000]	lr: 7.527e-03, eta: 1 day, 5:58:54, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9938, decode.acc_seg: 54.2066, loss: 0.9938
2021-08-13 22:40:21,773 - mmseg - INFO - Iter [43800/160000]	lr: 7.524e-03, eta: 1 day, 5:57:57, time: 0.849, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0221, decode.acc_seg: 52.6605, loss: 1.0221
2021-08-13 22:41:04,530 - mmseg - INFO - Iter [43850/160000]	lr: 7.521e-03, eta: 1 day, 5:57:01, time: 0.855, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9645, decode.acc_seg: 54.6140, loss: 0.9645
2021-08-13 22:41:47,864 - mmseg - INFO - Iter [43900/160000]	lr: 7.518e-03, eta: 1 day, 5:56:06, time: 0.867, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9780, decode.acc_seg: 54.0731, loss: 0.9780
2021-08-13 22:42:31,539 - mmseg - INFO - Iter [43950/160000]	lr: 7.515e-03, eta: 1 day, 5:55:13, time: 0.873, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0685, decode.acc_seg: 52.7911, loss: 1.0685
2021-08-13 22:43:16,663 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 22:43:16,665 - mmseg - INFO - Iter [44000/160000]	lr: 7.512e-03, eta: 1 day, 5:54:23, time: 0.903, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9928, decode.acc_seg: 53.0286, loss: 0.9928
2021-08-13 22:43:58,635 - mmseg - INFO - Iter [44050/160000]	lr: 7.509e-03, eta: 1 day, 5:53:25, time: 0.839, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0022, decode.acc_seg: 53.1371, loss: 1.0022
2021-08-13 22:44:41,453 - mmseg - INFO - Iter [44100/160000]	lr: 7.506e-03, eta: 1 day, 5:52:29, time: 0.856, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0290, decode.acc_seg: 52.9347, loss: 1.0290
2021-08-13 22:45:24,428 - mmseg - INFO - Iter [44150/160000]	lr: 7.503e-03, eta: 1 day, 5:51:34, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9884, decode.acc_seg: 54.1602, loss: 0.9884
2021-08-13 22:46:43,047 - mmseg - INFO - Iter [44200/160000]	lr: 7.501e-03, eta: 1 day, 5:52:11, time: 1.572, data_time: 0.663, memory: 8535, decode.loss_seg: 0.9888, decode.acc_seg: 54.4723, loss: 0.9888
2021-08-13 22:47:26,714 - mmseg - INFO - Iter [44250/160000]	lr: 7.498e-03, eta: 1 day, 5:51:18, time: 0.873, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9802, decode.acc_seg: 53.5954, loss: 0.9802
2021-08-13 22:48:09,895 - mmseg - INFO - Iter [44300/160000]	lr: 7.495e-03, eta: 1 day, 5:50:23, time: 0.864, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0596, decode.acc_seg: 53.7275, loss: 1.0596
2021-08-13 22:48:54,258 - mmseg - INFO - Iter [44350/160000]	lr: 7.492e-03, eta: 1 day, 5:49:31, time: 0.887, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9924, decode.acc_seg: 53.7697, loss: 0.9924
2021-08-13 22:49:37,194 - mmseg - INFO - Iter [44400/160000]	lr: 7.489e-03, eta: 1 day, 5:48:36, time: 0.859, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0051, decode.acc_seg: 53.6321, loss: 1.0051
2021-08-13 22:50:19,972 - mmseg - INFO - Iter [44450/160000]	lr: 7.486e-03, eta: 1 day, 5:47:40, time: 0.856, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9985, decode.acc_seg: 53.1508, loss: 0.9985
2021-08-13 22:51:02,763 - mmseg - INFO - Iter [44500/160000]	lr: 7.483e-03, eta: 1 day, 5:46:44, time: 0.856, data_time: 0.013, memory: 8535, decode.loss_seg: 0.9989, decode.acc_seg: 53.9792, loss: 0.9989
2021-08-13 22:51:45,231 - mmseg - INFO - Iter [44550/160000]	lr: 7.480e-03, eta: 1 day, 5:45:47, time: 0.849, data_time: 0.013, memory: 8535, decode.loss_seg: 0.9614, decode.acc_seg: 54.2577, loss: 0.9614
2021-08-13 22:52:29,700 - mmseg - INFO - Iter [44600/160000]	lr: 7.478e-03, eta: 1 day, 5:44:56, time: 0.889, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0054, decode.acc_seg: 53.4140, loss: 1.0054
2021-08-13 22:53:12,899 - mmseg - INFO - Iter [44650/160000]	lr: 7.475e-03, eta: 1 day, 5:44:01, time: 0.864, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0174, decode.acc_seg: 53.7147, loss: 1.0174
2021-08-13 22:53:55,026 - mmseg - INFO - Iter [44700/160000]	lr: 7.472e-03, eta: 1 day, 5:43:04, time: 0.842, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9995, decode.acc_seg: 54.4937, loss: 0.9995
2021-08-13 22:54:37,530 - mmseg - INFO - Iter [44750/160000]	lr: 7.469e-03, eta: 1 day, 5:42:07, time: 0.850, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0289, decode.acc_seg: 53.3162, loss: 1.0289
2021-08-13 22:55:19,573 - mmseg - INFO - Iter [44800/160000]	lr: 7.466e-03, eta: 1 day, 5:41:10, time: 0.841, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0003, decode.acc_seg: 53.3499, loss: 1.0003
2021-08-13 22:56:38,205 - mmseg - INFO - Iter [44850/160000]	lr: 7.463e-03, eta: 1 day, 5:41:46, time: 1.572, data_time: 0.704, memory: 8535, decode.loss_seg: 0.9695, decode.acc_seg: 54.1081, loss: 0.9695
2021-08-13 22:57:20,223 - mmseg - INFO - Iter [44900/160000]	lr: 7.460e-03, eta: 1 day, 5:40:49, time: 0.840, data_time: 0.013, memory: 8535, decode.loss_seg: 0.9800, decode.acc_seg: 54.4529, loss: 0.9800
2021-08-13 22:58:02,970 - mmseg - INFO - Iter [44950/160000]	lr: 7.457e-03, eta: 1 day, 5:39:53, time: 0.855, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9934, decode.acc_seg: 54.0704, loss: 0.9934
2021-08-13 22:58:45,338 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 22:58:45,339 - mmseg - INFO - Iter [45000/160000]	lr: 7.455e-03, eta: 1 day, 5:38:56, time: 0.847, data_time: 0.013, memory: 8535, decode.loss_seg: 0.9943, decode.acc_seg: 54.0877, loss: 0.9943
2021-08-13 22:59:28,009 - mmseg - INFO - Iter [45050/160000]	lr: 7.452e-03, eta: 1 day, 5:38:00, time: 0.853, data_time: 0.013, memory: 8535, decode.loss_seg: 0.9928, decode.acc_seg: 52.7887, loss: 0.9928
2021-08-13 23:00:10,355 - mmseg - INFO - Iter [45100/160000]	lr: 7.449e-03, eta: 1 day, 5:37:03, time: 0.847, data_time: 0.013, memory: 8535, decode.loss_seg: 0.9854, decode.acc_seg: 53.3143, loss: 0.9854
2021-08-13 23:00:53,781 - mmseg - INFO - Iter [45150/160000]	lr: 7.446e-03, eta: 1 day, 5:36:09, time: 0.868, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9753, decode.acc_seg: 53.8545, loss: 0.9753
2021-08-13 23:01:36,102 - mmseg - INFO - Iter [45200/160000]	lr: 7.443e-03, eta: 1 day, 5:35:13, time: 0.847, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9921, decode.acc_seg: 53.0919, loss: 0.9921
2021-08-13 23:02:19,142 - mmseg - INFO - Iter [45250/160000]	lr: 7.440e-03, eta: 1 day, 5:34:18, time: 0.860, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0285, decode.acc_seg: 53.0041, loss: 1.0285
2021-08-13 23:03:01,654 - mmseg - INFO - Iter [45300/160000]	lr: 7.437e-03, eta: 1 day, 5:33:22, time: 0.851, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0211, decode.acc_seg: 53.5866, loss: 1.0211
2021-08-13 23:03:43,287 - mmseg - INFO - Iter [45350/160000]	lr: 7.434e-03, eta: 1 day, 5:32:23, time: 0.832, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0140, decode.acc_seg: 52.7906, loss: 1.0140
2021-08-13 23:04:25,839 - mmseg - INFO - Iter [45400/160000]	lr: 7.432e-03, eta: 1 day, 5:31:27, time: 0.851, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0039, decode.acc_seg: 54.0022, loss: 1.0039
2021-08-13 23:05:42,943 - mmseg - INFO - Iter [45450/160000]	lr: 7.429e-03, eta: 1 day, 5:31:58, time: 1.542, data_time: 0.688, memory: 8535, decode.loss_seg: 1.0075, decode.acc_seg: 53.8175, loss: 1.0075
2021-08-13 23:06:26,114 - mmseg - INFO - Iter [45500/160000]	lr: 7.426e-03, eta: 1 day, 5:31:04, time: 0.863, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9618, decode.acc_seg: 53.5349, loss: 0.9618
2021-08-13 23:07:08,602 - mmseg - INFO - Iter [45550/160000]	lr: 7.423e-03, eta: 1 day, 5:30:07, time: 0.850, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9748, decode.acc_seg: 54.4354, loss: 0.9748
2021-08-13 23:07:51,372 - mmseg - INFO - Iter [45600/160000]	lr: 7.420e-03, eta: 1 day, 5:29:12, time: 0.855, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0126, decode.acc_seg: 53.6795, loss: 1.0126
2021-08-13 23:08:33,670 - mmseg - INFO - Iter [45650/160000]	lr: 7.417e-03, eta: 1 day, 5:28:15, time: 0.846, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9793, decode.acc_seg: 53.7147, loss: 0.9793
2021-08-13 23:09:16,932 - mmseg - INFO - Iter [45700/160000]	lr: 7.414e-03, eta: 1 day, 5:27:21, time: 0.865, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9984, decode.acc_seg: 53.7374, loss: 0.9984
2021-08-13 23:09:59,004 - mmseg - INFO - Iter [45750/160000]	lr: 7.411e-03, eta: 1 day, 5:26:24, time: 0.841, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0230, decode.acc_seg: 53.3652, loss: 1.0230
2021-08-13 23:10:42,006 - mmseg - INFO - Iter [45800/160000]	lr: 7.409e-03, eta: 1 day, 5:25:29, time: 0.860, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9906, decode.acc_seg: 53.9317, loss: 0.9906
2021-08-13 23:11:24,815 - mmseg - INFO - Iter [45850/160000]	lr: 7.406e-03, eta: 1 day, 5:24:34, time: 0.856, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0111, decode.acc_seg: 53.5122, loss: 1.0111
2021-08-13 23:12:08,054 - mmseg - INFO - Iter [45900/160000]	lr: 7.403e-03, eta: 1 day, 5:23:40, time: 0.865, data_time: 0.013, memory: 8535, decode.loss_seg: 1.0027, decode.acc_seg: 53.5061, loss: 1.0027
2021-08-13 23:12:50,623 - mmseg - INFO - Iter [45950/160000]	lr: 7.400e-03, eta: 1 day, 5:22:44, time: 0.851, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9766, decode.acc_seg: 54.2985, loss: 0.9766
2021-08-13 23:13:33,515 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 23:13:33,515 - mmseg - INFO - Iter [46000/160000]	lr: 7.397e-03, eta: 1 day, 5:21:49, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0250, decode.acc_seg: 54.1336, loss: 1.0250
2021-08-13 23:14:17,491 - mmseg - INFO - Iter [46050/160000]	lr: 7.394e-03, eta: 1 day, 5:20:56, time: 0.879, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9960, decode.acc_seg: 53.3696, loss: 0.9960
2021-08-13 23:15:35,761 - mmseg - INFO - Iter [46100/160000]	lr: 7.391e-03, eta: 1 day, 5:21:29, time: 1.566, data_time: 0.731, memory: 8535, decode.loss_seg: 0.9816, decode.acc_seg: 54.0687, loss: 0.9816
2021-08-13 23:16:18,630 - mmseg - INFO - Iter [46150/160000]	lr: 7.388e-03, eta: 1 day, 5:20:34, time: 0.857, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9861, decode.acc_seg: 54.0875, loss: 0.9861
2021-08-13 23:17:00,757 - mmseg - INFO - Iter [46200/160000]	lr: 7.385e-03, eta: 1 day, 5:19:37, time: 0.843, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0038, decode.acc_seg: 54.0517, loss: 1.0038
2021-08-13 23:17:42,802 - mmseg - INFO - Iter [46250/160000]	lr: 7.383e-03, eta: 1 day, 5:18:40, time: 0.841, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9924, decode.acc_seg: 53.8104, loss: 0.9924
2021-08-13 23:18:25,531 - mmseg - INFO - Iter [46300/160000]	lr: 7.380e-03, eta: 1 day, 5:17:45, time: 0.855, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9788, decode.acc_seg: 53.3305, loss: 0.9788
2021-08-13 23:19:08,847 - mmseg - INFO - Iter [46350/160000]	lr: 7.377e-03, eta: 1 day, 5:16:51, time: 0.866, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0045, decode.acc_seg: 52.7060, loss: 1.0045
2021-08-13 23:19:52,965 - mmseg - INFO - Iter [46400/160000]	lr: 7.374e-03, eta: 1 day, 5:15:59, time: 0.883, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0044, decode.acc_seg: 52.7375, loss: 1.0044
2021-08-13 23:20:36,075 - mmseg - INFO - Iter [46450/160000]	lr: 7.371e-03, eta: 1 day, 5:15:04, time: 0.862, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9975, decode.acc_seg: 54.1066, loss: 0.9975
2021-08-13 23:21:18,566 - mmseg - INFO - Iter [46500/160000]	lr: 7.368e-03, eta: 1 day, 5:14:09, time: 0.850, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0010, decode.acc_seg: 53.5473, loss: 1.0010
2021-08-13 23:22:01,812 - mmseg - INFO - Iter [46550/160000]	lr: 7.365e-03, eta: 1 day, 5:13:15, time: 0.865, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9687, decode.acc_seg: 54.4546, loss: 0.9687
2021-08-13 23:22:44,720 - mmseg - INFO - Iter [46600/160000]	lr: 7.362e-03, eta: 1 day, 5:12:20, time: 0.858, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9884, decode.acc_seg: 53.8589, loss: 0.9884
2021-08-13 23:23:27,391 - mmseg - INFO - Iter [46650/160000]	lr: 7.360e-03, eta: 1 day, 5:11:24, time: 0.853, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0193, decode.acc_seg: 53.6750, loss: 1.0193
2021-08-13 23:24:46,068 - mmseg - INFO - Iter [46700/160000]	lr: 7.357e-03, eta: 1 day, 5:11:57, time: 1.573, data_time: 0.726, memory: 8535, decode.loss_seg: 1.0090, decode.acc_seg: 53.8460, loss: 1.0090
2021-08-13 23:25:29,661 - mmseg - INFO - Iter [46750/160000]	lr: 7.354e-03, eta: 1 day, 5:11:03, time: 0.873, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9809, decode.acc_seg: 54.0756, loss: 0.9809
2021-08-13 23:26:11,518 - mmseg - INFO - Iter [46800/160000]	lr: 7.351e-03, eta: 1 day, 5:10:06, time: 0.837, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9653, decode.acc_seg: 53.6042, loss: 0.9653
2021-08-13 23:26:54,501 - mmseg - INFO - Iter [46850/160000]	lr: 7.348e-03, eta: 1 day, 5:09:11, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9466, decode.acc_seg: 53.8729, loss: 0.9466
2021-08-13 23:27:36,716 - mmseg - INFO - Iter [46900/160000]	lr: 7.345e-03, eta: 1 day, 5:08:15, time: 0.844, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0110, decode.acc_seg: 53.8601, loss: 1.0110
2021-08-13 23:28:19,624 - mmseg - INFO - Iter [46950/160000]	lr: 7.342e-03, eta: 1 day, 5:07:20, time: 0.858, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9868, decode.acc_seg: 54.9582, loss: 0.9868
2021-08-13 23:29:02,759 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 23:29:02,759 - mmseg - INFO - Iter [47000/160000]	lr: 7.339e-03, eta: 1 day, 5:06:26, time: 0.862, data_time: 0.010, memory: 8535, decode.loss_seg: 0.9635, decode.acc_seg: 54.8422, loss: 0.9635
2021-08-13 23:29:45,621 - mmseg - INFO - Iter [47050/160000]	lr: 7.336e-03, eta: 1 day, 5:05:31, time: 0.857, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0008, decode.acc_seg: 53.4517, loss: 1.0008
2021-08-13 23:30:29,035 - mmseg - INFO - Iter [47100/160000]	lr: 7.334e-03, eta: 1 day, 5:04:38, time: 0.869, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9657, decode.acc_seg: 53.7591, loss: 0.9657
2021-08-13 23:31:11,249 - mmseg - INFO - Iter [47150/160000]	lr: 7.331e-03, eta: 1 day, 5:03:42, time: 0.844, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9892, decode.acc_seg: 54.3839, loss: 0.9892
2021-08-13 23:31:53,689 - mmseg - INFO - Iter [47200/160000]	lr: 7.328e-03, eta: 1 day, 5:02:46, time: 0.849, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0226, decode.acc_seg: 53.3986, loss: 1.0226
2021-08-13 23:32:36,636 - mmseg - INFO - Iter [47250/160000]	lr: 7.325e-03, eta: 1 day, 5:01:52, time: 0.859, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0015, decode.acc_seg: 53.3865, loss: 1.0015
2021-08-13 23:33:19,426 - mmseg - INFO - Iter [47300/160000]	lr: 7.322e-03, eta: 1 day, 5:00:57, time: 0.856, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0363, decode.acc_seg: 53.4672, loss: 1.0363
2021-08-13 23:34:38,783 - mmseg - INFO - Iter [47350/160000]	lr: 7.319e-03, eta: 1 day, 5:01:29, time: 1.586, data_time: 0.734, memory: 8535, decode.loss_seg: 0.9811, decode.acc_seg: 53.7074, loss: 0.9811
2021-08-13 23:35:24,180 - mmseg - INFO - Iter [47400/160000]	lr: 7.316e-03, eta: 1 day, 5:00:40, time: 0.908, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9862, decode.acc_seg: 52.7032, loss: 0.9862
2021-08-13 23:36:08,009 - mmseg - INFO - Iter [47450/160000]	lr: 7.313e-03, eta: 1 day, 4:59:48, time: 0.877, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9877, decode.acc_seg: 53.5811, loss: 0.9877
2021-08-13 23:36:51,818 - mmseg - INFO - Iter [47500/160000]	lr: 7.311e-03, eta: 1 day, 4:58:55, time: 0.875, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9975, decode.acc_seg: 54.0867, loss: 0.9975
2021-08-13 23:37:36,122 - mmseg - INFO - Iter [47550/160000]	lr: 7.308e-03, eta: 1 day, 4:58:04, time: 0.887, data_time: 0.012, memory: 8535, decode.loss_seg: 1.0052, decode.acc_seg: 53.1826, loss: 1.0052
2021-08-13 23:38:19,449 - mmseg - INFO - Iter [47600/160000]	lr: 7.305e-03, eta: 1 day, 4:57:11, time: 0.867, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9602, decode.acc_seg: 54.5098, loss: 0.9602
2021-08-13 23:39:02,093 - mmseg - INFO - Iter [47650/160000]	lr: 7.302e-03, eta: 1 day, 4:56:15, time: 0.853, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0269, decode.acc_seg: 54.1889, loss: 1.0269
2021-08-13 23:39:44,394 - mmseg - INFO - Iter [47700/160000]	lr: 7.299e-03, eta: 1 day, 4:55:19, time: 0.846, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9695, decode.acc_seg: 55.3157, loss: 0.9695
2021-08-13 23:40:27,396 - mmseg - INFO - Iter [47750/160000]	lr: 7.296e-03, eta: 1 day, 4:54:25, time: 0.860, data_time: 0.011, memory: 8535, decode.loss_seg: 1.0147, decode.acc_seg: 52.7209, loss: 1.0147
2021-08-13 23:41:10,681 - mmseg - INFO - Iter [47800/160000]	lr: 7.293e-03, eta: 1 day, 4:53:32, time: 0.866, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9712, decode.acc_seg: 54.5574, loss: 0.9712
2021-08-13 23:41:56,126 - mmseg - INFO - Iter [47850/160000]	lr: 7.290e-03, eta: 1 day, 4:52:43, time: 0.908, data_time: 0.010, memory: 8535, decode.loss_seg: 1.0114, decode.acc_seg: 53.8438, loss: 1.0114
2021-08-13 23:42:41,869 - mmseg - INFO - Iter [47900/160000]	lr: 7.287e-03, eta: 1 day, 4:51:55, time: 0.915, data_time: 0.012, memory: 8535, decode.loss_seg: 0.9746, decode.acc_seg: 54.3556, loss: 0.9746
2021-08-13 23:43:25,502 - mmseg - INFO - Iter [47950/160000]	lr: 7.285e-03, eta: 1 day, 4:51:03, time: 0.872, data_time: 0.011, memory: 8535, decode.loss_seg: 0.9965, decode.acc_seg: 54.8219, loss: 0.9965
2021-08-13 23:44:44,122 - mmseg - INFO - Saving checkpoint at 48000 iterations
2021-08-13 23:44:44,361 - mmseg - INFO - Exp name: fcn-resize-concat_litehr18-with-head_512x512_160k_ade20k.py
2021-08-13 23:44:44,361 - mmseg - INFO - Iter [48000/160000]	lr: 7.282e-03, eta: 1 day, 4:51:32, time: 1.578, data_time: 0.662, memory: 8535, decode.loss_seg: 0.9490, decode.acc_seg: 54.3598, loss: 0.9490
